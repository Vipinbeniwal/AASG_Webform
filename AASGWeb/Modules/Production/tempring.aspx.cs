using System;
using System.Collections.Generic;
using Newtonsoft.Json;
using System.Linq;
using System.Web;
using System.Web.UI;
using System.Web.UI.WebControls;
using System.Configuration;
using System.Data;
using System.Text;
using System.Dynamic;
using System.IO;
using System.Net;
using App.Core;
using App.Business;
using App.BusinessModel;

namespace AASGWeb.Modules.Production
{
    public partial class tempring : System.Web.UI.Page
    {
        #region Global Properties

        ProcessTempering _objProcessTempering = new ProcessTempering();
        ProcessTemperingBL _objProcessTemperingBL = null;
        List<ProcessTempering> _lstProcessTempering = new List<ProcessTempering>();

        ProcessTemperingReport _objProcessTemperingReport = new ProcessTemperingReport();
        ProcessTemperingReportBL _objProcessTemperingReportBL = null;
        List<ProcessTemperingReport> _lstProcessTemperingReport = new List<ProcessTemperingReport>();

        ProductionTrail _objProductionTrail = new ProductionTrail();
        ProductionTrailBL _objProductionTrailBL = null;
        List<ProductionTrail> _lstProductionTrail = new List<ProductionTrail>();

        ItemMaster _objItemMaster = new ItemMaster();
        ItemMasterBL _objItemMasterBL = null;
        List<ItemMaster> _lstItemMaster = new List<ItemMaster>();

        App.BusinessModel.Production _objProduction = new App.BusinessModel.Production();
        ProductionBL _objProductionBL = null;
        List<App.BusinessModel.Production> _lstProduction = new List<App.BusinessModel.Production>();

        //DataTable _dataTableItemsList = new DataTable();
        DataTable _dataTableItemsBreakageList = new DataTable();
        DataTable _dataTableItemsRejectList = new DataTable();
        DataTable _dataTableItemStatusList = new DataTable();
        string UserIp = string.Empty;
       
        public static int _itemPcsCounting, _totalOkPcsInHour, _totalBreakagePcsInHour, _totalRejectPcsInHour, _itemCheckSignatureId = 0;
        public static string _itemVerifyStatusFinal = string.Empty;
        string[] arrOfSelectionsPcsNumber, arrOfSelectionsRejectPcsNumber;
        string[] arrOfSelectionsBreakReason, arrOfSelectionsRejectReason;

        public static string _itemPcsCounting1 = "0";
        #endregion
        protected void Page_Load(object sender, EventArgs e)
        {
            Page.MaintainScrollPositionOnPostBack = true;
            if (!IsPostBack)
            {
                string _temperingItemId;
                if (RouteData.Values["id"] == null)
                {
                    // ScriptManager.RegisterStartupScript(this.Page, this.GetType(), "script", "editorInit();", true);
                }
                else
                {
                    string _temperingItemid = RouteData.Values["id"].ToString();
                    _temperingItemId = App.Core.DataSecurity.Decryptdata(_temperingItemid);
                    if (_temperingItemId == "" || _temperingItemId == null)
                    {
                        Response.Redirect("/home", false);
                    }
                    else
                    {
                        hdnItemId.Value = _temperingItemId;

                        if (hdnItemId.Value == "")
                        {
                            Response.Redirect("/home", false);

                        }
                        else
                        {
                            txtTotalOkBreakReject.Text = txtTotalAllOkPcs.Text = txtTotalAllBreakagePcs.Text = txtTotalAllRejectPcs.Text = "0";
                            txtTotalAllOkPcs.ReadOnly = txtTotalAllBreakagePcs.ReadOnly = txtTotalAllRejectPcs.ReadOnly = txtTotalOkBreakReject.ReadOnly = txtPerPcsAverageHours.ReadOnly = txtItemRawBalance.ReadOnly = true;
                            createtableForHoldItemStatusCheckedUnchecked();
                            PopulateData(_temperingItemId);
                            _itemPcsCounting = _totalOkPcsInHour = _totalBreakagePcsInHour = _totalRejectPcsInHour = 0;
                            _itemVerifyStatusFinal = string.Empty;

                           
                        }

                    }
                }
                // createtable();

                txtFinalTransferred.ReadOnly = true;
                txtreceived.ReadOnly = true;
            }
        }


        #region Page Load Methods
        private void PopulateData(string ItemId)
        {
            try
            {
                hdnItemId.Value = ItemId;
                Int32 ProcessTemperingID = Convert.ToInt32(ItemId);

                _objProcessTemperingReportBL = new ProcessTemperingReportBL();

                _lstProcessTemperingReport = _objProcessTemperingReportBL.GetAllProcessTemperingReportItems().Where(x => x.process_tempering_id == Convert.ToInt32(ProcessTemperingID)).ToList();

                if (_lstProcessTemperingReport.Count > 0)
                {
                    rptrItemPcsStatusReport.DataSource = _lstProcessTemperingReport;
                    rptrItemPcsStatusReport.DataBind();
                    _objProcessTemperingReport = _lstProcessTemperingReport.Where(x => x.process_tempering_id == Convert.ToInt32(ProcessTemperingID)).FirstOrDefault();
                    if (_objProcessTemperingReport != null)
                    {
                        txtReportDate.Text = _objProcessTemperingReport.report_date.ToShortDateString();
                        txtHtfShiftFrom.Text = _objProcessTemperingReport.htf_shift_from;
                        txtHtfShiftTo.Text = _objProcessTemperingReport.htf_shift_to;
                        txtPlantName.Text = _objProcessTemperingReport.plant_number;
                        txtPlantName.ReadOnly = true;
                        ddlProductionShift.SelectedValue = _objProcessTemperingReport.report_shift;
                        //ddlProductionShift.Enabled = false;
                        txtBatchNumber.Text = _objProcessTemperingReport.batch_number;
                        txtBatchNumber.ReadOnly = true;

                        txtItemName.Text = _objProcessTemperingReport.item_model + "|" + _objProcessTemperingReport.item_type_name + "|" + _objProcessTemperingReport.item_glass_color;
                        txtItemName.ReadOnly = true;
                        //txtQuantityInPcs.Text = _objProduction.store_quantity.ToString();

                        txtQuantityInPcs.Text = _objProcessTemperingReport.quantity_in_pcs.ToString();
                        if (_objProcessTemperingReport.total_received == 0)
                        {
                            txtreceived.Text = _objProcessTemperingReport.quantity_in_pcs.ToString();
                        }
                        else
                        {
                            txtreceived.Text = _objProcessTemperingReport.total_received.ToString();
                        }
                        if (_objProcessTemperingReport.total_pcs_transferred == 0)
                        {
                            txtFinalTransferred.Text = txtreceived.Text;
                        }
                        else
                        {
                            txtFinalTransferred.Text = _objProcessTemperingReport.total_pcs_transferred.ToString();
                        }

                        //txtFinalTransferred.Text = _objProcessTemperingReport.total_received.ToString();

                        txtProductionTargetInPcs.Text = _objProcessTemperingReport.production_target_in_pcs.ToString();
                        //decimal percentage = Convert.ToInt32(txtQuantityInPcs.Text) / Convert.ToInt32(txtProductionTargetInPcs.Text) * 100;
                        txtProductionTargetInPercentage.Text = _objProcessTemperingReport.production_target_in_percentage.ToString();

                        txtOperatorName.Text = _objProcessTemperingReport.operator_name;
                        txtLineIncharge.Text = _objProcessTemperingReport.line_incharge;
                        string _helpersName = _objProcessTemperingReport.helper_name;
                        string lastTrim = _helpersName.TrimEnd(',');
                        string[] arrOfSelectionsHelperName = lastTrim.Split(',');

                        if (arrOfSelectionsHelperName.Length > 0)
                        {
                            txtHelperOne.Text = arrOfSelectionsHelperName[0];
                        }
                        if (arrOfSelectionsHelperName.Length > 1)
                        {
                            txtHelperTwo.Text = arrOfSelectionsHelperName[1];
                        }
                        if (arrOfSelectionsHelperName.Length > 2)
                        {
                            txtHelperThree.Text = arrOfSelectionsHelperName[2];
                        }
                        if (arrOfSelectionsHelperName.Length > 3)
                        {
                            txtHelperFour.Text = arrOfSelectionsHelperName[3];
                        }
                        if (arrOfSelectionsHelperName.Length > 4)
                        {
                            txtHelperFive.Text = arrOfSelectionsHelperName[4];
                        }


                        txtSupervisor.Text = _objProcessTemperingReport.supervisor_name;



                        txtHeatingOn.Text = _objProcessTemperingReport.heating_on.ToShortTimeString();
                        txtFurnaceMeterOnHeating.Text = _objProcessTemperingReport.furnace_meter_on_heating.ToString();
                        txtBigBlowerOnHeating.Text = _objProcessTemperingReport.big_blower_on_heating.ToString();
                        txtSmallBlowerOnHeating.Text = _objProcessTemperingReport.small_blower_on_heating.ToString();

                        txtProductionStartTime.Text = _objProcessTemperingReport.production_start.ToShortTimeString();
                        txtFurnaceMeterStartProduction.Text = _objProcessTemperingReport.furnace_meter_start_production.ToString();
                        txtBigBlowerStartProduction.Text = _objProcessTemperingReport.big_blower_start_production.ToString();
                        txtSmallBlowerStartProduction.Text = _objProcessTemperingReport.small_blower_start_production.ToString();

                        txtProductionEndTime.Text = _objProcessTemperingReport.production_finish.ToShortTimeString();
                        txtFurnaceMeterFinishProduction.Text = _objProcessTemperingReport.furnace_meter_finish_production.ToString();
                        txtBigBlowerFinishProduction.Text = _objProcessTemperingReport.big_blower_finish_production.ToString();
                        txtSmallBlowerFinishProduction.Text = _objProcessTemperingReport.small_blower_finish_production.ToString();

                        txtPerPcsAverageHours.Text = _objProcessTemperingReport.item_average_hours_cost.ToString();
                        txtItemRawBalance.Text = _objProcessTemperingReport.item_raw_balance.ToString();

                        txtRemarks.Text = _objProcessTemperingReport.remarks;

                        //DateTime _heating_on = Convert.ToDateTime(_objProcessTemperingReport.heating_on.ToShortDateString());
                        //DateTime _time = Convert.ToDateTime(txtHeatingOn.Text);

                        //DateTime _dateCombinee = new DateTime(_heating_on.Year, _heating_on.Month, _heating_on.Day, _time.Hour, _time.Minute, _time.Second);


                        bindBreakageReason(_objProcessTemperingReport.process_tempering_id);
                        bindRejectReason(_objProcessTemperingReport.process_tempering_id);

                        if (txtItemRawBalance.Text == "")
                        {
                            txtItemRawBalance.Text = "0";
                        }
                        else
                        {

                        }
                        if (txtreceived.Text == "")
                        {
                            txtreceived.Text = "0";
                        }
                        else
                        {

                        }

                        txtItemRawBalance.Text = (Convert.ToInt32(txtreceived.Text) - Convert.ToInt32(txtTotalOkBreakReject.Text)).ToString();

                        calculateForPageLoad();

                        //txtPlantName.Text = _objProduction.production_plant;
                        //ddlProductionShift.SelectedValue = _objProduction.production_shift;
                        //txtBatchNumber.Text = _objProduction.batch_number;

                        //txtItemName.Text = _objProduction.item_model + "|" + _objProduction.item_type_name + "|" + _objProduction.item_glass_color;
                        ////txtQuantityInPcs.Text = _objProduction.store_quantity.ToString();
                        //if (_objProduction.dfg_print_quantity == 0 )
                        //{
                        //    txtQuantityInPcs.Text = _objProduction.paint_quantity.ToString();
                        //}
                        //else
                        //{
                        //    txtQuantityInPcs.Text = _objProduction.dfg_print_quantity.ToString();
                        //}


                        //txtProductionTargetInPcs.Text = _objProduction.production_quantity.ToString();
                        //decimal percentage = Convert.ToInt32(txtQuantityInPcs.Text) / Convert.ToInt32(txtProductionTargetInPcs.Text) * 100;
                        //txtProductionTargetInPercentage.Text = (Math.Round(percentage, 2)).ToString();

                        //txtProductionStartTime.Text = _objProduction.started_on.ToShortTimeString();
                        //txtProductionEndTime.Text = _objProduction.modified_on.ToShortTimeString();

                    }
                    else
                    {

                    }
                }
                else
                {

                }



                #region Tempering Old Code

                //_objProcessTemperingBL = new ProcessTemperingBL();

                //_objProcessTempering = _objProcessTemperingBL.GetAllProcessTemperingItems().Where(x => x.process_tempering_id == Convert.ToInt32(ProcessTemperingID)).FirstOrDefault();

                ////_objProcessTemperingBL = new ProcessTemperingBL();
                ////ProcessTempering _objProcessTempering = new ProcessTempering();
                ////_lstProcessTempering = _objProcessTemperingBL.GetAllProcessTemperingItems().Where(x=>x.process_cutting_id==Convert.ToInt32(_ProcessTemperingid)).ToList();
                //if (_objProcessTempering != null)
                //{
                //    _objItemMasterBL = new ItemMasterBL();
                //    _objItemMaster = _objItemMasterBL.GetItemMasterItemsByID(_objProcessTempering.item_master_id).FirstOrDefault();
                //    if (_objItemMaster.item_master_id > 0)
                //    {

                //    }


                //    txtreceived.Text = _objProcessTempering.total_received.ToString();
                //    txtbreakage.Text = _objProcessTempering.total_broken.ToString();
                //    txtReject.Text = _objProcessTempering.total_reject.ToString();
                //    txtFinalTransferred.Text = _objProcessTempering.total_pcs_transferred.ToString();
                //    ddlSignature.SelectedValue = _objProcessTempering.signature.ToString();
                //    txtRemarks.Text = _objProcessTempering.remarks;

                //    if (_objProcessTempering.total_broken > 0)
                //    {
                //        bindBreakageReason(_objProcessTempering.total_broken);
                //    }
                //    else
                //    {

                //    }


                //    if (_objProcessTempering.total_reject > 0)
                //    {
                //        bindRejectReason(_objProcessTempering.total_reject);
                //    }
                //    else
                //    {

                //    }


                //    if (_objProcessTempering.total_pcs_transferred > 0)
                //    {
                //        txtbreakage.ReadOnly = true;
                //        txtReject.ReadOnly = txtRemarks.ReadOnly = true;
                //        btnUpdateData.Visible = false;
                //        btnResetData.Visible = false;
                //    }

                //}
                //else
                //{

                //}

                #endregion

            }
            catch (Exception ex)
            {
                ex.Message.ToString();
            }
        }

        public void createtableForHoldItemStatusCheckedUnchecked()
        {
            DataTable _dataTableItemStatusList = new DataTable();
            _dataTableItemStatusList.Columns.Add("hour_name", typeof(string));
            _dataTableItemStatusList.Columns.Add("first_pcs", typeof(string));
            _dataTableItemStatusList.Columns.Add("second_pcs", typeof(string));
            _dataTableItemStatusList.Columns.Add("third_pcs", typeof(string));
            _dataTableItemStatusList.Columns.Add("fourth_pcs", typeof(string));
            _dataTableItemStatusList.Columns.Add("fifth_pcs", typeof(string));
            _dataTableItemStatusList.Columns.Add("sixth_pcs", typeof(string));
            _dataTableItemStatusList.Columns.Add("seventh_pcs", typeof(string));
            _dataTableItemStatusList.Columns.Add("eight_pcs", typeof(string));
            _dataTableItemStatusList.Columns.Add("ninth_pcs", typeof(string));
            _dataTableItemStatusList.Columns.Add("tenth_pcs", typeof(string));
            _dataTableItemStatusList.Columns.Add("eleven_pcs", typeof(string));
            _dataTableItemStatusList.Columns.Add("twelve_pcs", typeof(string));
            _dataTableItemStatusList.Columns.Add("thirteen_pcs", typeof(string));
            _dataTableItemStatusList.Columns.Add("fourteen_pcs", typeof(string));
            _dataTableItemStatusList.Columns.Add("fifteen_pcs", typeof(string));
            _dataTableItemStatusList.Columns.Add("sixteen_pcs", typeof(string));
            _dataTableItemStatusList.Columns.Add("seventeen_pcs", typeof(string));
            _dataTableItemStatusList.Columns.Add("eighteen_pcs", typeof(string));
            _dataTableItemStatusList.Columns.Add("ninteen_pcs", typeof(string));
            _dataTableItemStatusList.Columns.Add("twenty_pcs", typeof(string));
            _dataTableItemStatusList.Columns.Add("twentyone_pcs", typeof(string));
            _dataTableItemStatusList.Columns.Add("twentytwo_pcs", typeof(string));
            _dataTableItemStatusList.Columns.Add("twentythree_pcs", typeof(string));
            _dataTableItemStatusList.Columns.Add("twentyfour_pcs", typeof(string));
            _dataTableItemStatusList.Columns.Add("twentyfive_pcs", typeof(string));
            _dataTableItemStatusList.Columns.Add("twentysix_pcs", typeof(string));
            _dataTableItemStatusList.Columns.Add("twentyseven_pcs", typeof(string));
            _dataTableItemStatusList.Columns.Add("twentyeight_pcs", typeof(string));
            _dataTableItemStatusList.Columns.Add("twentynine_pcs", typeof(string));
            _dataTableItemStatusList.Columns.Add("thirty_pcs", typeof(string));
            ViewState["ItemStatus"] = _dataTableItemStatusList;

        }

        private void BindrptrItemPcsStatusReport(string _selectedTemperingId)
        {

            Int32 ProcessTemperingID = Convert.ToInt32(_selectedTemperingId);
            _objProcessTemperingReportBL = new ProcessTemperingReportBL();

            _lstProcessTemperingReport = _objProcessTemperingReportBL.GetAllProcessTemperingReportItems().Where(x => x.process_tempering_id == Convert.ToInt32(ProcessTemperingID)).ToList();

            if (_lstProcessTemperingReport != null)
            {
                if (_lstProcessTemperingReport.Count > 0)
                {
                    rptrItemPcsStatusReport.DataSource = _lstProcessTemperingReport;
                    rptrItemPcsStatusReport.DataBind();
                }
                else
                {

                }

            }
            else
            {

            }
        }

        private void bindBreakageReason(int _processTempering_d)
        {
            Int32 ProcessTemperingID = Convert.ToInt32(_processTempering_d);

            _objProcessTemperingBL = new ProcessTemperingBL();

            _objProcessTempering = _objProcessTemperingBL.GetAllProcessTemperingItems().Where(x => x.process_tempering_id == Convert.ToInt32(ProcessTemperingID)).FirstOrDefault();
            if (_objProcessTempering != null)
            {
                if (_objProcessTempering.total_pcs_transferred > 0)
                {

                    btnUpdateData.Visible = false;
                    btnResetData.Visible = false;
                }
                else
                {
                    txtFinalTransferred.Text = txtreceived.Text;
                }

                txtbreakage.Text = _objProcessTempering.total_broken.ToString();

                if (txtbreakage.Text == "0")
                {

                }
                else
                {

                    _dataTableItemsBreakageList.Columns.Add("Pcs_Reject_id", typeof(int));
                    _dataTableItemsBreakageList.Columns.Add("PcsNo", typeof(string));
                    _dataTableItemsBreakageList.Columns.Add("Reason", typeof(string));

                    rptrBreakagePcsItemList.DataSource = _dataTableItemsBreakageList;
                    rptrBreakagePcsItemList.DataBind();


                    if (_objProcessTempering.breakage_pcs_number == null)
                    {

                    }
                    else
                    {
                        string breakagePcsNumber = _objProcessTempering.breakage_pcs_number;
                        string lasttmPcsNumber = breakagePcsNumber.TrimEnd(',');
                        arrOfSelectionsPcsNumber = lasttmPcsNumber.Split(',');
                    }
                    if (_objProcessTempering.breakage_reason == null)
                    {

                    }
                    else
                    {
                        string breason = _objProcessTempering.breakage_reason;
                        string lasttm = breason.TrimEnd(',');
                        arrOfSelectionsBreakReason = lasttm.Split(',');
                        if (_objProcessTempering.total_pcs_transferred > 0)
                        {

                            txtbreakage.ReadOnly = true;
                            txtReject.ReadOnly = txtRemarks.ReadOnly = true;
                            //btnUpdateData.Visible = false;
                            //btnResetData.Visible = false;

                        }
                        else
                        {

                        }
                    }


                    int _numberOfPcs = 0;


                    for (int _PcsNumberPosition = 0; _PcsNumberPosition < arrOfSelectionsPcsNumber.Length; _PcsNumberPosition++)
                    {
                        DataRow _dataRowItemsList = _dataTableItemsBreakageList.NewRow();
                        _dataRowItemsList["Pcs_Reject_id"] = _numberOfPcs + 1;
                        _dataRowItemsList["PcsNo"] = arrOfSelectionsPcsNumber[_PcsNumberPosition];
                        _dataRowItemsList["Reason"] = arrOfSelectionsBreakReason[_PcsNumberPosition];
                        _dataTableItemsBreakageList.Rows.Add(_dataRowItemsList);
                        ViewState["Row"] = _dataTableItemsBreakageList;

                    }

                    rptrBreakagePcsItemList.Visible = true;
                    rptrBreakagePcsItemList.DataSource = ViewState["Row"];
                    rptrBreakagePcsItemList.DataBind();
                }
            }
        }
        private void bindRejectReason(int _processTempering_d)
        {
            Int32 ProcessTemperingID = Convert.ToInt32(_processTempering_d);

            _objProcessTemperingBL = new ProcessTemperingBL();

            _objProcessTempering = _objProcessTemperingBL.GetAllProcessTemperingItems().Where(x => x.process_tempering_id == Convert.ToInt32(ProcessTemperingID)).FirstOrDefault();
            if (_objProcessTempering != null)
            {
                txtReject.Text = _objProcessTempering.total_reject.ToString();
                if (_objProcessTempering.total_pcs_transferred > 0)
                {

                    btnUpdateData.Visible = false;
                    btnResetData.Visible = false;
                }
                else
                {
                    txtFinalTransferred.Text = txtreceived.Text;
                }

                if (txtReject.Text == "0")
                {

                }
                else
                {

                    _dataTableItemsRejectList.Columns.Add("Pcs_Reject_id", typeof(int));
                    _dataTableItemsRejectList.Columns.Add("PcsNo", typeof(string));
                    _dataTableItemsRejectList.Columns.Add("Reason", typeof(string));

                    rptrRejectPcsItemList.DataSource = _dataTableItemsRejectList;
                    rptrRejectPcsItemList.DataBind();

                    if (_objProcessTempering.reject_pcs_number == null)
                    {
                    }
                    else
                    {
                        string rejectPcsNumber = _objProcessTempering.reject_pcs_number;
                        string lasttmPcsNumber = rejectPcsNumber.TrimEnd(',');
                        arrOfSelectionsRejectPcsNumber = lasttmPcsNumber.Split(',');
                    }
                    if (_objProcessTempering.reject_reason == null)
                    {

                    }
                    else
                    {
                        string rejectReason = _objProcessTempering.reject_reason;
                        string lasttm = rejectReason.TrimEnd(',');
                        arrOfSelectionsRejectReason = lasttm.Split(',');
                        if (_objProcessTempering.total_pcs_transferred > 0)
                        {

                            txtbreakage.ReadOnly = true;
                            txtReject.ReadOnly = txtRemarks.ReadOnly = true;
                            //btnUpdateData.Visible = false;
                            //btnResetData.Visible = false;

                        }
                        else
                        {

                        }
                    }


                    int _numberOfPcs = 0;


                    for (int _PcsNumberPosition = 0; _PcsNumberPosition < arrOfSelectionsRejectPcsNumber.Length; _PcsNumberPosition++)
                    {
                        DataRow _dataRowItemsList = _dataTableItemsRejectList.NewRow();
                        _dataRowItemsList["Pcs_Reject_id"] = _numberOfPcs + 1;
                        _dataRowItemsList["PcsNo"] = arrOfSelectionsRejectPcsNumber[_PcsNumberPosition];
                        _dataRowItemsList["Reason"] = arrOfSelectionsRejectReason[_PcsNumberPosition];
                        _dataTableItemsRejectList.Rows.Add(_dataRowItemsList);
                        ViewState["Row"] = _dataTableItemsRejectList;
                    }

                    rptrRejectPcsItemList.Visible = true;
                    rptrRejectPcsItemList.DataSource = ViewState["Row"];
                    rptrRejectPcsItemList.DataBind();
                }
            }
        }

        #endregion

        #region Create Item Table at Run Time
        /// <summary>
        /// This Method is Used to Create Item Table at Run Time for Reject Table
        /// </summary>
        public void createtable()
        {
            #region Get Data table Header Columns name/Text

            //for (int j = 0; j < _dataTableItemsList.Rows.Count; j++)
            //{
            //    for (int i = 0; i < _dataTableItemsList.Columns.Count; i++)
            //    {
            //        string _txt = _dataTableItemsList.Columns[i].ColumnName + " ";
            //        string _txt2 = _dataTableItemsList.Rows[j].ItemArray[i] + " ";

            //    }
            //}

            #endregion

            try
            {

                _dataTableItemsBreakageList.Columns.Add("Pcs_Breakage_id", typeof(int));
                _dataTableItemsBreakageList.Columns.Add("PcsNo", typeof(string));
                _dataTableItemsBreakageList.Columns.Add("Reason", typeof(string));

                rptrBreakagePcsItemList.DataSource = _dataTableItemsBreakageList;
                rptrBreakagePcsItemList.DataBind();
                if (ViewState["Row"] != null)
                {

                    if (txtbreakage.Text == "0" && txtbreakage.Text == "")
                    {
                    }
                    else
                    {
                        for (int _numberOfPcs = 0; _numberOfPcs < Convert.ToInt32(txtbreakage.Text); _numberOfPcs++)
                        {
                            DataRow _dataRowItemsList = _dataTableItemsBreakageList.NewRow();
                            _dataRowItemsList["Pcs_Breakage_id"] = _numberOfPcs + 1;
                            _dataRowItemsList["PcsNo"] = (_numberOfPcs + 1);

                            _dataTableItemsBreakageList.Rows.Add(_dataRowItemsList);
                            ViewState["Row"] = _dataTableItemsBreakageList;
                        }

                    }

                    rptrBreakagePcsItemList.DataSource = ViewState["Row"];
                    rptrBreakagePcsItemList.DataBind();
                    rptrBreakagePcsItemList.Visible = true;

                }
                else
                {

                    if (txtbreakage.Text == "0" && txtbreakage.Text == "")
                    {
                    }
                    else
                    {
                        for (int _numberOfPcs = 0; _numberOfPcs < Convert.ToInt32(txtbreakage.Text); _numberOfPcs++)
                        {
                            DataRow _dataRowItemsList = _dataTableItemsBreakageList.NewRow();
                            _dataRowItemsList["Pcs_Breakage_id"] = _numberOfPcs + 1;
                            _dataRowItemsList["PcsNo"] = (_numberOfPcs + 1);

                            _dataTableItemsBreakageList.Rows.Add(_dataRowItemsList);
                            ViewState["Row"] = _dataTableItemsBreakageList;
                        }
                    }


                    rptrBreakagePcsItemList.DataSource = ViewState["Row"];
                    rptrBreakagePcsItemList.DataBind();
                    rptrBreakagePcsItemList.Visible = true;
                }
            }
            catch(Exception ex)
            {
                ex.Message.ToString();
            }

        }


        /// <summary>
        /// This Method is Used to calculate Total Brakage,Reject and Total Transfer Pcs 
        /// </summary>
        public void calculate()
        {
            try
            {
                int _totalOkPcs, _finalReject, _finalBroken, _finalTransferred, _itemRawbalance = 0;
                if (txtTotalAllOkPcs.Text == null || txtTotalAllOkPcs.Text == "")
                {
                    txtTotalAllOkPcs.Text = "0";
                }
                if (txtbreakage.Text == null || txtbreakage.Text == "")
                {
                    txtbreakage.Text = "0";
                }
                if (txtReject.Text == null || txtReject.Text == "")
                {
                    txtReject.Text = "0";
                }
                if (txtItemRawBalance.Text == null || txtItemRawBalance.Text == "")
                {
                    txtItemRawBalance.Text = "0";
                }

                if (txtFinalTransferred.Text == null || txtFinalTransferred.Text == "")
                {
                    txtFinalTransferred.Text = "0";
                    txtFinalTransferred.Text = txtreceived.Text;

                }
                else
                {
                    txtFinalTransferred.Text = txtreceived.Text;
                }

                _totalOkPcs = Convert.ToInt32(txtTotalAllOkPcs.Text);
                _finalReject = Convert.ToInt32(txtReject.Text);
                _finalBroken = Convert.ToInt32(txtbreakage.Text);
                _finalTransferred = Convert.ToInt32(txtFinalTransferred.Text);
                _itemRawbalance = Convert.ToInt32(txtItemRawBalance.Text);

                if (_finalTransferred == (_totalOkPcs + _finalBroken + _finalReject + _itemRawbalance))
                {
                    _finalTransferred = _finalTransferred - (_finalBroken + _finalReject + _itemRawbalance);
                    txtFinalTransferred.Text = _finalTransferred.ToString();
                    txtFinalTransferred.ReadOnly = true;
                }
                else
                {
                    ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemQuantityValidationAlert();", true);

                }

            }
            catch (Exception ex)
            {
                ex.Message.ToString();
            }
           


        }


        /// <summary>
        /// This Method is Used to calculate Total Brakage,Reject and Total Transfer Pcs 
        /// </summary>
        public void calculateForPageLoad()
        {
            try
            {
                int _totalOkPcs, _finalReject, _finalBroken, _finalTransferred, _itemRawbalance = 0;
                if (txtTotalAllOkPcs.Text == null || txtTotalAllOkPcs.Text == "")
                {
                    txtTotalAllOkPcs.Text = "0";
                }
                if (txtTotalAllBreakagePcs.Text == null || txtTotalAllBreakagePcs.Text == "")
                {
                    txtTotalAllBreakagePcs.Text = "0";
                }
                if (txtTotalAllRejectPcs.Text == null || txtTotalAllRejectPcs.Text == "")
                {
                    txtTotalAllRejectPcs.Text = "0";
                }
                if (txtItemRawBalance.Text == null || txtItemRawBalance.Text == "")
                {
                    txtItemRawBalance.Text = "0";
                }

                if (txtFinalTransferred.Text == null || txtFinalTransferred.Text == "")
                {
                    txtFinalTransferred.Text = "0";
                    txtFinalTransferred.Text = txtreceived.Text;

                }
                else
                {
                    txtFinalTransferred.Text = txtreceived.Text;
                }

                _totalOkPcs = Convert.ToInt32(txtTotalAllOkPcs.Text);
                _finalReject = Convert.ToInt32(txtTotalAllRejectPcs.Text);
                _finalBroken = Convert.ToInt32(txtTotalAllBreakagePcs.Text);
                _finalTransferred = Convert.ToInt32(txtFinalTransferred.Text);
                _itemRawbalance = Convert.ToInt32(txtItemRawBalance.Text);

                if (_finalTransferred == (_totalOkPcs + _finalBroken + _finalReject + _itemRawbalance))
                {
                    _finalTransferred = _finalTransferred - (_finalBroken + _finalReject + _itemRawbalance);
                    txtFinalTransferred.Text = _finalTransferred.ToString();
                    txtFinalTransferred.ReadOnly = true;
                }
                else
                {
                    ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemQuantityValidationAlert();", true);

                }

            }
            catch (Exception ex)
            {
                ex.Message.ToString();
            }



        }


        /// <summary>
        /// This Method is Used to calculate Per Pcs Average Cost 
        /// </summary>
        public void calculatePerPcsAverageCost()
        {
            try
            {
                //calculate Time start
                TimeSpan tsProductionEndTime = TimeSpan.Parse(txtProductionEndTime.Text);

                TimeSpan tsProductionStartTime = TimeSpan.Parse(txtProductionStartTime.Text);
                int result = TimeSpan.Compare(tsProductionEndTime, tsProductionStartTime);
                if (result > 0)
                {
                    TimeSpan workedTime = new TimeSpan(00, 00, 00);
                    workedTime = (tsProductionEndTime.Subtract(tsProductionStartTime));


                    string _timeValue = workedTime.Hours > 0 ? workedTime.Hours.ToString() : "0";
                    if (workedTime.Minutes.ToString() == "0")
                    {
                    }
                    else
                    {
                        _timeValue = _timeValue + "." + workedTime.Minutes.ToString();
                    }
                    decimal _itemProductionHour = (Convert.ToInt32(txtTotalOkBreakReject.Text) / Convert.ToDecimal(_timeValue));

                    txtPerPcsAverageHours.Text = App.BusinessModel.CommonProperties.FormatDecimalNumber(_itemProductionHour, 2).ToString();
                }
                else
                {
                    txtPerPcsAverageHours.Text = "0";
                }

                //calculate Time End
            }
            catch (Exception ex)
            {
                ex.Message.ToString();
            }
            

        }


        /// <summary>
        /// This Method is Used to Create Item Table at Run Time for Reject Table
        /// </summary>
        public void createRejectTable()
        {
            try
            {
                _dataTableItemsRejectList.Columns.Add("Pcs_Reject_id", typeof(int));
                _dataTableItemsRejectList.Columns.Add("PcsNo", typeof(string));
                _dataTableItemsRejectList.Columns.Add("Reason", typeof(string));

                rptrRejectPcsItemList.DataSource = _dataTableItemsRejectList;
                rptrRejectPcsItemList.DataBind();

                if (ViewState["Row"] != null)
                {


                    if (txtReject.Text == "0" && txtReject.Text == "")
                    {
                    }
                    else
                    {

                        for (int _numberOfPcs = 0; _numberOfPcs < Convert.ToInt32(txtReject.Text); _numberOfPcs++)
                        {
                            DataRow _dataRowItemsList = _dataTableItemsRejectList.NewRow();
                            _dataRowItemsList["Pcs_Reject_id"] = _numberOfPcs + 1;
                            _dataRowItemsList["PcsNo"] = (_numberOfPcs + 1);

                            _dataTableItemsRejectList.Rows.Add(_dataRowItemsList);
                            ViewState["Row"] = _dataTableItemsRejectList;
                        }

                    }

                    rptrRejectPcsItemList.DataSource = ViewState["Row"];
                    rptrRejectPcsItemList.DataBind();
                    rptrRejectPcsItemList.Visible = true;

                }
                else
                {

                    if (txtReject.Text == "0" && txtReject.Text == "")
                    {
                    }
                    else
                    {
                        for (int _numberOfPcs = 0; _numberOfPcs < Convert.ToInt32(txtReject.Text); _numberOfPcs++)
                        {
                            DataRow _dataRowItemsList = _dataTableItemsRejectList.NewRow();
                            _dataRowItemsList["Pcs_Reject_id"] = _numberOfPcs + 1;
                            _dataRowItemsList["PcsNo"] = (_numberOfPcs + 1);

                            _dataTableItemsRejectList.Rows.Add(_dataRowItemsList);
                            ViewState["Row"] = _dataTableItemsRejectList;
                        }
                    }


                    rptrRejectPcsItemList.DataSource = ViewState["Row"];
                    rptrRejectPcsItemList.DataBind();
                    rptrRejectPcsItemList.Visible = true;
                }
            }
            catch(Exception ex)
            {
                ex.Message.ToString();
            }

            
        }

        /// <summary>
        /// This Method is Used to Delete Item from Table at Run Time
        /// </summary>
        public void deleteRowfromtable(int _itemIdForRemove)
        {
            // Get  Repeater Values From View to Data Table
            //_dataTableItemsList.Columns.Add("purchase_item_type_id", typeof(int));
            //_dataTableItemsList.Columns.Add("item_master_id", typeof(int));
            //_dataTableItemsList.Columns.Add("purchase_item_name", typeof(string));
            //_dataTableItemsList.Columns.Add("purchase_item_quantity", typeof(string));
            //_dataTableItemsList.Columns.Add("purchase_item_price", typeof(int));

            //rptrBreakagePcsItemList.DataSource = _dataTableItemsList;
            //rptrBreakagePcsItemList.DataBind();

            //_dataTableItemsList = (DataTable)ViewState["Row"];

            //// Create New DataTable and Columns At Run Time
            //DataTable _dataTableItemsListRemove = new DataTable();
            //_dataTableItemsListRemove.Columns.Add("purchase_item_type_id", typeof(int));
            //_dataTableItemsListRemove.Columns.Add("item_master_id", typeof(int));
            //_dataTableItemsListRemove.Columns.Add("purchase_item_name", typeof(string));
            //_dataTableItemsListRemove.Columns.Add("purchase_item_quantity", typeof(string));
            //_dataTableItemsListRemove.Columns.Add("purchase_item_price", typeof(int));


            //// Assing Datable Items To Another DataTable and Skip Selected Item  for Remove/Delete

            //for (int _datatableRowIndexPostion = 0; _datatableRowIndexPostion < _dataTableItemsList.Rows.Count; _datatableRowIndexPostion++)
            //{
            //    if (_dataTableItemsList.Rows[_datatableRowIndexPostion]["item_master_id"].ToString() != Convert.ToInt32(_itemIdForRemove).ToString())
            //    {
            //        DataRow _dataRowItemsListRemove = _dataTableItemsListRemove.NewRow();

            //        _dataRowItemsListRemove["purchase_item_type_id"] = Convert.ToInt32(_dataTableItemsList.Rows[_datatableRowIndexPostion]["purchase_item_type_id"]);
            //        _dataRowItemsListRemove["item_master_id"] = Convert.ToInt32(_dataTableItemsList.Rows[_datatableRowIndexPostion]["item_master_id"]);
            //        _dataRowItemsListRemove["purchase_item_name"] = _dataTableItemsList.Rows[_datatableRowIndexPostion]["purchase_item_name"];
            //        _dataRowItemsListRemove["purchase_item_quantity"] = _dataTableItemsList.Rows[_datatableRowIndexPostion]["purchase_item_quantity"];
            //        _dataRowItemsListRemove["purchase_item_price"] = _dataTableItemsList.Rows[_datatableRowIndexPostion]["purchase_item_price"];

            //        // Add Values one -by one to New DataTable 
            //        _dataTableItemsListRemove.Rows.Add(_dataRowItemsListRemove);

            //        if (_dataTableItemsListRemove.Rows.Count > 0)
            //        {
            //            int _totalPiad = 0;
            //            for (int RowIndexPostionForRemove = 0; RowIndexPostionForRemove < _dataTableItemsListRemove.Rows.Count; RowIndexPostionForRemove++)
            //            {
            //                _totalPiad += Convert.ToInt32(_dataTableItemsListRemove.Rows[RowIndexPostionForRemove]["purchase_item_price"].ToString());
            //            }
            //            txttotalAmount.Text = _totalPiad.ToString();
            //            txtPendingAmount.Text = "0";
            //            txtTotalPaid.Text = "0";

            //        }
            //    }
            //    else
            //    {
            //        _totalItemCount = _totalItemCount - Convert.ToInt32(_dataTableItemsList.Rows[_datatableRowIndexPostion]["purchase_item_quantity"]);
            //    }

            //}

            //if (_dataTableItemsListRemove.Rows.Count > 0)
            //{
            //    ViewState["Row"] = _dataTableItemsListRemove;
            //    rptrBreakagePcsItemList.DataSource = ViewState["Row"];
            //    rptrBreakagePcsItemList.DataBind();
            //    rptrBreakagePcsItemList.Visible = true;
            //    txtTotalPaid.Enabled = true;
            //}
            //else
            //{
            //    txttotalAmount.Text = "0";
            //    txtPendingAmount.Text = "0";
            //    txtTotalPaid.Text = "0";
            //    ViewState["Row"] = _dataTableItemsListRemove;
            //    rptrBreakagePcsItemList.DataSource = ViewState["Row"];
            //    rptrBreakagePcsItemList.DataBind();
            //    rptrBreakagePcsItemList.Visible = false;
            //    txtTotalPaid.Enabled = false;
            //}


        }


        #endregion


        #region Breakage/ Reject Repeater
        protected void rptrRejectPcsItemList_ItemCommand(object source, RepeaterCommandEventArgs e)
        {

        }

        protected void rptrRejectPcsItemList_ItemDataBound(object sender, RepeaterItemEventArgs e)
        {
            try
            {

                if (e.Item.ItemType == ListItemType.Item || e.Item.ItemType == ListItemType.AlternatingItem)
                {
                    DropDownList ddlRejectReason = (DropDownList)e.Item.FindControl("ddlRejectReason");
                    Label lblRejectPcsNo = (Label)e.Item.FindControl("lblRejectPcsNo");
                    TextBox txtRejectPcsNumber = (TextBox)e.Item.FindControl("txtRejectPcsNumber");
                    Label lblRejectReason = (Label)e.Item.FindControl("lblRejectReason");


                    //if (lblRejectPcsNo.Text == "")
                    //{

                    //    txtRejectPcsNumber.Visible = true;
                    //    lblRejectPcsNo.Visible = false;
                    //}
                    //else
                    //{
                    //    txtRejectPcsNumber.Visible = false;
                    //    lblRejectPcsNo.Visible = true;

                    //}
                    if (lblRejectReason.Text == "")
                    {

                        ddlRejectReason.Visible = true;
                        lblRejectReason.Visible = false;
                        txtRejectPcsNumber.Visible = true;
                        lblRejectPcsNo.Visible = false;
                    }
                    else
                    {
                        ddlRejectReason.Visible = false;
                        lblRejectReason.Visible = true;
                        ddlRejectReason.SelectedValue = lblRejectReason.Text;
                        txtRejectPcsNumber.Visible = false;
                        lblRejectPcsNo.Visible = true;
                    }
                }
            }
            catch (Exception ex)
            {
                ex.Message.ToString();
            }
        }

        protected void rptrBreakagePcsItemList_ItemDataBound(object sender, RepeaterItemEventArgs e)
        {
            try
            {

                if (e.Item.ItemType == ListItemType.Item || e.Item.ItemType == ListItemType.AlternatingItem)
                {
                    DropDownList ddlBreakageReason = (DropDownList)e.Item.FindControl("ddlBreakageReason");

                    Label lblBreakagePcsNo = (Label)e.Item.FindControl("lblBreakagePcsNo");
                    TextBox txtBreakagePcsNumber = (TextBox)e.Item.FindControl("txtBreakagePcsNumber");

                    Label lblBreakageReason = (Label)e.Item.FindControl("lblBreakageReason");


                    //if (lblBreakagePcsNo.Text == "")
                    //{

                    //    txtBreakagePcsNumber.Visible = true;
                    //    lblBreakagePcsNo.Visible = false;
                    //}
                    //else
                    //{
                    //    txtBreakagePcsNumber.Visible = false;
                    //    lblBreakagePcsNo.Visible = true;

                    //}
                    if (lblBreakageReason.Text == "")
                    {

                        ddlBreakageReason.Visible = true;
                        lblBreakageReason.Visible = false;
                        txtBreakagePcsNumber.Visible = true;
                        lblBreakagePcsNo.Visible = false;
                    }
                    else
                    {
                        ddlBreakageReason.Visible = false;
                        lblBreakageReason.Visible = true;
                        ddlBreakageReason.SelectedValue = lblBreakageReason.Text;
                        txtBreakagePcsNumber.Visible = false;
                        lblBreakagePcsNo.Visible = true;
                    }
                }
            }
            catch (Exception ex)
            {
                ex.Message.ToString();
            }
        }

        protected void rptrBreakagePcsItemList_ItemCommand(object source, RepeaterCommandEventArgs e)
        {
            
        }

        protected void txtbreakage_TextChanged(object sender, EventArgs e)
        {
            try
            {
                if (txtbreakage.Text == "0" || txtbreakage.Text == "")
                {
                    if (Convert.ToInt32(txtbreakage.Text) == Convert.ToInt32(txtTotalAllBreakagePcs.Text))
                    {
                        rptrBreakagePcsItemList.Visible = false;
                        calculate();
                    }
                    else
                    {
                        txtbreakage.Text = "0";
                        rptrBreakagePcsItemList.Visible = false;

                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemQuantityValidationAlert();", true);
                    }

                }
                else
                {
                    if (Convert.ToInt32(txtbreakage.Text) == Convert.ToInt32(txtTotalAllBreakagePcs.Text))
                    {
                        createtable();
                        calculate();
                    }
                    else
                    {
                        txtbreakage.Text = "0";
                        rptrBreakagePcsItemList.Visible = false;
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemQuantityValidationAlert();", true);
                    }

                }
            }
            catch(Exception ex)
            {
                ex.Message.ToString();
            }
           
        }

        protected void txtReject_TextChanged(object sender, EventArgs e)
        {
            try
            {
                if (txtReject.Text == "0" || txtReject.Text == "")
                {
                    if (Convert.ToInt32(txtbreakage.Text) == Convert.ToInt32(txtTotalAllBreakagePcs.Text))
                    {
                        rptrRejectPcsItemList.Visible = false;
                        calculate();
                    }
                    else
                    {
                        txtReject.Text = "0";
                        rptrRejectPcsItemList.Visible = false;
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showCuttingDetailError();", true);
                    }
                }
                else
                {
                    if (Convert.ToInt32(txtReject.Text) == Convert.ToInt32(txtTotalAllRejectPcs.Text)) 
                    {
                        
                        createRejectTable();
                        calculate();
                       
                    }
                    else
                    {
                        txtReject.Text = "0";
                        rptrRejectPcsItemList.Visible = false;
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showCuttingDetailError();", true);
                    }

                   
                }
            }
            catch(Exception ex)
            {
                ex.Message.ToString();
            }
            
        }

        #endregion


        protected void btnUpdateData_Click(object sender, EventArgs e)
        {
            txtreceived.Text = txtreceived.Text == "" ? "0" : txtreceived.Text;
            txtTotalAllOkPcs.Text = txtTotalAllOkPcs.Text == "" ? "0" : txtTotalAllOkPcs.Text;
            txtbreakage.Text = txtbreakage.Text == "" ? "0" : txtbreakage.Text;
            txtReject.Text = txtReject.Text == "" ? "0" : txtReject.Text;
            txtItemRawBalance.Text = txtItemRawBalance.Text == "" ? "0" : txtItemRawBalance.Text;
            txtPerPcsAverageHours.Text = txtPerPcsAverageHours.Text == "" ? "0" : txtPerPcsAverageHours.Text;

            if (txtPerPcsAverageHours.Text == "0")
            {
                ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showTemperingProductionTimeError();", true);
            }
            else if (txtTotalOkBreakReject.Text == "0")
            {
                ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemQuantityValidationAlert();", true);
            }
            else if (Convert.ToInt32(txtbreakage.Text) != Convert.ToInt32(txtTotalAllBreakagePcs.Text))
            {
                ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemQuantityValidationAlert();", true);
            }
            else if (Convert.ToInt32(txtreceived.Text) == (Convert.ToInt32(txtTotalAllOkPcs.Text) + Convert.ToInt32(txtbreakage.Text) + Convert.ToInt32(txtReject.Text) + Convert.ToInt32(txtItemRawBalance.Text)))
            {
                try
                {
                    Boolean _breakageRejectStatus = GetBreakageRejectRepeaterValue();
                    if (_breakageRejectStatus == false)
                    {
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showCuttingDetailError();", true);
                    }
                    else
                    {
                        _objProcessTemperingBL = new ProcessTemperingBL();
                        _objProcessTempering = _objProcessTemperingBL.GetAllProcessTemperingItems().Where(x => x.process_tempering_id == Convert.ToInt32(hdnItemId.Value)).FirstOrDefault();
                        if (_objProcessTempering.process_tempering_id > 0)
                        {
                            _objProcessTempering = _objProcessTemperingBL.UpdateProcessTempering(GetProcessTemperingUpdateObject());
                            if (_objProcessTempering.process_tempering_id > 0)
                            {

                                _objProcessTemperingReportBL = new ProcessTemperingReportBL();
                                //_objProcessTemperingReport = _objProcessTemperingReportBL.GetAllProcessTemperingReportItems().Where(x => x.process_tempering_id == Convert.ToInt32(_objProcessTempering.process_tempering_id)).FirstOrDefault();
                                _lstProcessTemperingReport = _objProcessTemperingReportBL.GetAllProcessTemperingReportItems().Where(x => x.process_tempering_id == Convert.ToInt32(_objProcessTempering.process_tempering_id)).ToList();
                                if (_lstProcessTemperingReport.Count > 0)
                                {

                                    foreach (var _itemofTempringReport in _lstProcessTemperingReport)
                                    {
                                        _objProcessTemperingReport.process_tempering_report_id = _itemofTempringReport.process_tempering_report_id;
                                        _objProcessTemperingReport.batch_number = _itemofTempringReport.batch_number;
                                        _objProcessTemperingReport.created_on = _itemofTempringReport.created_on;
                                        _objProcessTemperingReport.modified_on = _itemofTempringReport.modified_on;
                                        //_objProcessTemperingReport.heating_on = _itemofTempringReport.heating_on;
                                        //_objProcessTemperingReport.production_finish = _itemofTempringReport.production_finish;
                                        //_objProcessTemperingReport.production_start = _itemofTempringReport.production_start;
                                        //_objProcessTemperingReport.report_date = _itemofTempringReport.report_date;
                                        _objProcessTemperingReport.ok_total_pcs_in_hours = _itemofTempringReport.ok_total_pcs_in_hours;
                                        _objProcessTemperingReport.breakage_total_pcs = _itemofTempringReport.breakage_total_pcs;
                                        _objProcessTemperingReport.reject_total_pcs = _itemofTempringReport.reject_total_pcs;
                                        _objProcessTemperingReport.signature = _itemofTempringReport.signature;
                                        _objProcessTemperingReport.total_received = _itemofTempringReport.total_received;
                                        _objProcessTemperingReport.hour_name = _itemofTempringReport.hour_name;
                                        _objProcessTemperingReport.item_verify_status = _itemofTempringReport.item_verify_status;
                                        _objProcessTemperingReport = _objProcessTemperingReportBL.UpdateProcessTemperingReport(GetProcessTemperingReportDetailsForUpdate());

                                    }


                                    if (_objProcessTemperingReport.process_tempering_id > 0)
                                    {
                                        //int itemMasterId = _objProcessTempering.item_master_id;
                                        //string batchNumber = _objProcessTempering.batch_number;

                                        _objProductionBL = new ProductionBL();
                                        _objProduction = _objProductionBL.GetAllProductionItems().Where(x => x.item_master_id == _objProcessTempering.item_master_id && x.batch_number == _objProcessTempering.batch_number).FirstOrDefault();
                                        if (_objProduction.production_id > 0)
                                        {
                                            _objProduction.tempering_id = _objProcessTempering.process_tempering_id;
                                            _objProduction.tempering_quantity = _objProcessTempering.total_pcs_transferred;
                                            //_objProduction.is_under_tempering = true;
                                            _objProduction = _objProductionBL.UpdateProduction(_objProduction);
                                            if (_objProduction.production_id > 0)
                                            {
                                                string _productionId = _objProduction.production_id.ToString();
                                                string _itemMasterId = _objProduction.item_master_id.ToString();
                                                string _processName = "Tempering";
                                                string _heading = "Tempering Submitted Successfully";
                                                string _heading_class = "text-success";
                                                string _activity = "Tempering Submitted with Total Pcs Received:" + _objProcessTemperingReport.total_received + ", Breakage:" + _objProcessTemperingReport.total_broken + "" + ", Rejected:" + _objProcessTemperingReport.total_reject + "" + ",Raw Balance:" + _objProcessTemperingReport.item_raw_balance + ", Total Pcs Transfer:" + _objProcessTemperingReport.total_pcs_transferred;
                                                string _icon = "fas fa-add";
                                                string _iconClass = "timeline-icon themed-background-emerald themed-border-emerald";
                                                ProductionTrailLogs(_productionId, _itemMasterId, _processName, _heading, _heading_class, _activity, _icon, _iconClass);

                                                ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showTemperingProcessSuccess();", true);
                                                _itemVerifyStatusFinal = string.Empty;
                                                txtTotalAllOkPcs.Text = txtTotalAllBreakagePcs.Text = txtTotalAllRejectPcs.Text = txtTotalOkBreakReject.Text = "0";

                                                string _tempering_id = _objProduction.tempering_id.ToString();
                                                PopulateData(_tempering_id);
                                                txtRemarks.Text = string.Empty;
                                                txtreceived.Text = txtbreakage.Text = txtReject.Text = txtFinalTransferred.Text = "0";
                                                btnUpdateData.Visible = false;
                                                btnResetData.Visible = false;

                                            }

                                        }
                                    }
                                    else
                                    {

                                    }



                                }

                                //ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showCuttingProcessSuccess();", true);

                            }
                        }

                    }

                }
                catch(Exception ex)
                {
                    ex.Message.ToString();
                }
                _objProcessTempering = new ProcessTempering();
               

            }
            else
            {
                ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemQuantityValidationAlert();", true);
            }
           
        }

        private ProcessTempering GetProcessTemperingUpdateObject()
        {


            string breakReasonData = null;
            if (txtbreakage.Text == "0")
            {
                _objProcessTempering.breakage_reason = "";
            }
            else
            {

                foreach (RepeaterItem item in rptrBreakagePcsItemList.Items)
                {
                    //TextBox breakageReason = (TextBox)item.FindControl("txtBreakageReason");
                    //string selectedReason = breakageReason.Text + ",";
                    DropDownList ddlBreakageReason = (DropDownList)item.FindControl("ddlBreakageReason");
                    string selectedReason = ddlBreakageReason.SelectedValue + ",";
                    breakReasonData = breakReasonData + selectedReason;
                }
                string totalBreakReasonData = breakReasonData.TrimEnd(',');
                _objProcessTempering.breakage_reason = totalBreakReasonData;

                string breakagePcsNumber = null;
                foreach (RepeaterItem item in rptrBreakagePcsItemList.Items)
                {
                    TextBox txtBreakagePcsNumber = (TextBox)item.FindControl("txtBreakagePcsNumber");
                    string selectedPcsNumber = txtBreakagePcsNumber.Text + ",";
                    breakagePcsNumber = breakagePcsNumber + selectedPcsNumber;
                }
                string totalBreakagePcsNumber = breakagePcsNumber.TrimEnd(',');
                _objProcessTempering.breakage_pcs_number = totalBreakagePcsNumber;
                _objProcessTempering.tempering_status = App.Helper.Utils.OrderStatus.progress.ToString();

            }



            string rejectReasonData = null;
            if (txtReject.Text == "0")
            {
                _objProcessTempering.reject_reason = "";
            }
            else
            {
                foreach (RepeaterItem item in rptrRejectPcsItemList.Items)
                {
                    //TextBox rejectReason = (TextBox)item.FindControl("txtRejectReason");
                    //string selectedReason = rejectReason.Text + ",";
                    DropDownList ddlRejectReason = (DropDownList)item.FindControl("ddlRejectReason");
                    string selectedReason = ddlRejectReason.SelectedValue + ",";
                    rejectReasonData = rejectReasonData + selectedReason;
                }
                string totalRejectReasonData = rejectReasonData.TrimEnd(',');

                _objProcessTempering.reject_reason = totalRejectReasonData;

                string rejectPcsNumber = null;
                foreach (RepeaterItem item in rptrRejectPcsItemList.Items)
                {
                    TextBox txtRejectPcsNumber = (TextBox)item.FindControl("txtRejectPcsNumber");
                    string selectedPcsNumber = txtRejectPcsNumber.Text + ",";
                    rejectPcsNumber = rejectPcsNumber + selectedPcsNumber;
                }
                string totalRejectPcsNumber = rejectPcsNumber.TrimEnd(',');
                _objProcessTempering.reject_pcs_number = totalRejectPcsNumber;


            }

            _objProcessTempering.total_received = _objProcessTempering.total_received;
            // _objProcessHole.total_received = Convert.ToInt32(txtreceived.Text);
            _objProcessTempering.total_broken = Convert.ToInt32(txtbreakage.Text);
            _objProcessTempering.total_reject = Convert.ToInt32(txtReject.Text);
            _objProcessTempering.total_pcs_transferred = Convert.ToInt32(txtFinalTransferred.Text);

            _objProcessTempering.signature = Convert.ToInt32(ddlSignature.SelectedValue);
            _objProcessTempering.tempering_ended_on = System.DateTime.Now;
            _objProcessTempering.remarks = txtRemarks.Text;
            _objProcessTempering.tempering_status = App.Helper.Utils.OrderStatus.complete.ToString();

            return _objProcessTempering;
        }

        #region Get item DetailFor Add ProcessTemperingReport
        /// <summary>
        /// This Method is Used to Get ProcessTemperingReport Details
        /// </summary>
        /// <returns></returns>
        private App.BusinessModel.ProcessTemperingReport GetProcessTemperingReportDetailsForUpdate()
        {
            try
            {


                _objProcessTemperingReport.guid = System.Guid.NewGuid();
                _objProcessTemperingReport.process_tempering_id = _objProcessTempering.process_tempering_id;

                _objProcessTemperingReport.item_master_id = _objProcessTempering.item_master_id;
                _objProcessTemperingReport.item_brand = _objProcessTempering.item_brand;
                _objProcessTemperingReport.item_model = _objProcessTempering.item_model;
                _objProcessTemperingReport.item_type_name = _objProcessTempering.item_type_name;
                _objProcessTemperingReport.item_glass_color = _objProcessTempering.item_glass_color;
                _objProcessTemperingReport.sale_header_master_id = _objProcessTempering.sale_header_master_id.ToString();
                _objProcessTemperingReport.party_master_id = _objProcessTempering.party_master_id.ToString();

                //_objProcessTemperingReport.report_date = DateTime.ParseExact(txtReportDate.Text, "dd/MM/yyyy", null); 


                DateTime __report_Date = Convert.ToDateTime(txtReportDate.Text);
                _objProcessTemperingReport.report_date = __report_Date;
                _objProcessTemperingReport.htf_shift_from = txtHtfShiftFrom.Text;
                _objProcessTemperingReport.htf_shift_to = txtHtfShiftTo.Text;
                _objProcessTemperingReport.plant_number = txtPlantName.Text;
                _objProcessTemperingReport.report_shift = ddlProductionShift.SelectedValue;


                _objProcessTemperingReport.quantity_in_pcs = Convert.ToInt32(txtQuantityInPcs.Text);
                _objProcessTemperingReport.production_target_in_pcs = Convert.ToInt32(txtProductionTargetInPcs.Text);
                _objProcessTemperingReport.production_target_in_percentage = Convert.ToDecimal(txtProductionTargetInPercentage.Text);

                _objProcessTemperingReport.operator_name = txtOperatorName.Text;
                _objProcessTemperingReport.line_incharge = txtLineIncharge.Text;
                string _helpersName = txtHelperOne.Text + "," + txtHelperTwo.Text + "," + txtHelperThree.Text + "," + txtHelperFour.Text + "," + txtHelperFive.Text;
                _objProcessTemperingReport.helper_name = _helpersName;
                _objProcessTemperingReport.supervisor_name = txtSupervisor.Text;



                DateTime _currentDate = System.DateTime.Now;
                DateTime _heating_time = Convert.ToDateTime(txtHeatingOn.Text);

                DateTime _heatingOn = new DateTime(_currentDate.Year, _currentDate.Month, _currentDate.Day, _heating_time.Hour, _heating_time.Minute, _heating_time.Second);

                _objProcessTemperingReport.heating_on = _heatingOn;
                _objProcessTemperingReport.furnace_meter_on_heating = Convert.ToDecimal(txtFurnaceMeterOnHeating.Text);
                _objProcessTemperingReport.big_blower_on_heating = Convert.ToDecimal(txtBigBlowerOnHeating.Text);
                _objProcessTemperingReport.small_blower_on_heating = Convert.ToDecimal(txtSmallBlowerOnHeating.Text);

                //_objProcessTemperingReport.production_start = DateTime.ParseExact(txtProductionStartTime.Text, "dd/MM/yyyy", null);

                DateTime _production_time = Convert.ToDateTime(txtProductionStartTime.Text);
                DateTime _productionStart = new DateTime(_currentDate.Year, _currentDate.Month, _currentDate.Day, _production_time.Hour, _production_time.Minute, _production_time.Second);
                _objProcessTemperingReport.production_start = _productionStart;
                _objProcessTemperingReport.furnace_meter_start_production = Convert.ToDecimal(txtFurnaceMeterStartProduction.Text);
                _objProcessTemperingReport.big_blower_start_production = Convert.ToDecimal(txtBigBlowerStartProduction.Text);
                _objProcessTemperingReport.small_blower_start_production = Convert.ToDecimal(txtSmallBlowerStartProduction.Text);

                DateTime _production_End_time = Convert.ToDateTime(txtProductionEndTime.Text);
                DateTime _productionFinish = new DateTime(_currentDate.Year, _currentDate.Month, _currentDate.Day, _production_End_time.Hour, _production_End_time.Minute, _production_End_time.Second);

                _objProcessTemperingReport.production_finish = _productionFinish;
                _objProcessTemperingReport.furnace_meter_finish_production = Convert.ToDecimal(txtFurnaceMeterFinishProduction.Text);
                _objProcessTemperingReport.big_blower_finish_production = Convert.ToDecimal(txtBigBlowerFinishProduction.Text);
                _objProcessTemperingReport.small_blower_finish_production = Convert.ToDecimal(txtSmallBlowerFinishProduction.Text);
                _objProcessTemperingReport.hour_name = _objProcessTemperingReport.hour_name;
                _objProcessTemperingReport.item_verify_status = _objProcessTemperingReport.item_verify_status;

                _objProcessTemperingReport.ok_total_pcs_in_hours = _objProcessTemperingReport.ok_total_pcs_in_hours;
                _objProcessTemperingReport.breakage_total_pcs = _objProcessTemperingReport.breakage_total_pcs;
                _objProcessTemperingReport.reject_total_pcs = _objProcessTemperingReport.reject_total_pcs;
                _objProcessTemperingReport.signature = _objProcessTemperingReport.signature;

                _objProcessTemperingReport.item_average_hours_cost = Convert.ToDecimal(txtPerPcsAverageHours.Text);
                _objProcessTemperingReport.item_raw_balance = Convert.ToInt32(txtItemRawBalance.Text);

                _objProcessTemperingReport.total_received = _objProcessTemperingReport.total_received;
                _objProcessTemperingReport.total_broken = Convert.ToInt32(txtbreakage.Text);
                _objProcessTemperingReport.total_reject = Convert.ToInt32(txtReject.Text);
                _objProcessTemperingReport.total_pcs_transferred = Convert.ToInt32(txtFinalTransferred.Text);

                string breakReasonData = null;
                if (txtbreakage.Text == "0")
                {
                    _objProcessTemperingReport.breakage_reason = "";
                }
                else
                {

                    foreach (RepeaterItem item in rptrBreakagePcsItemList.Items)
                    {
                        //TextBox breakageReason = (TextBox)item.FindControl("txtBreakageReason");
                        //string selectedReason = breakageReason.Text + ",";
                        DropDownList ddlBreakageReason = (DropDownList)item.FindControl("ddlBreakageReason");
                        string selectedReason = ddlBreakageReason.SelectedValue + ",";
                        breakReasonData = breakReasonData + selectedReason;
                    }
                    string totalBreakReasonData = breakReasonData.TrimEnd(',');
                    _objProcessTemperingReport.breakage_reason = totalBreakReasonData;

                    //string breakagePcsNumber = null;
                    //foreach (RepeaterItem item in rptrBreakagePcsItemList.Items)
                    //{
                    //    TextBox txtBreakagePcsNumber = (TextBox)item.FindControl("txtBreakagePcsNumber");
                    //    string selectedPcsNumber = txtBreakagePcsNumber.Text + ",";
                    //    breakagePcsNumber = breakagePcsNumber + selectedPcsNumber;
                    //}
                    //string totalBreakagePcsNumber = breakagePcsNumber.TrimEnd(',');
                    //_objProcessTempering.breakage_pcs_number = totalBreakagePcsNumber;
                    //_objProcessTempering.tempering_status = App.Helper.Utils.OrderStatus.progress.ToString();

                }



                string rejectReasonData = null;
                if (txtReject.Text == "0")
                {
                    _objProcessTemperingReport.reject_reason = "";
                }
                else
                {
                    foreach (RepeaterItem item in rptrRejectPcsItemList.Items)
                    {
                        //TextBox rejectReason = (TextBox)item.FindControl("txtRejectReason");
                        //string selectedReason = rejectReason.Text + ",";
                        DropDownList ddlRejectReason = (DropDownList)item.FindControl("ddlRejectReason");
                        string selectedReason = ddlRejectReason.SelectedValue + ",";
                        rejectReasonData = rejectReasonData + selectedReason;
                    }
                    string totalRejectReasonData = rejectReasonData.TrimEnd(',');

                    _objProcessTemperingReport.reject_reason = totalRejectReasonData;

                    //string rejectPcsNumber = null;
                    //foreach (RepeaterItem item in rptrBreakagePcsItemList.Items)
                    //{
                    //    TextBox txtRejectPcsNumber = (TextBox)item.FindControl("txtRejectPcsNumber");
                    //    string selectedPcsNumber = txtRejectPcsNumber.Text + ",";
                    //    rejectPcsNumber = rejectPcsNumber + selectedPcsNumber;
                    //}
                    //string totalRejectPcsNumber = rejectPcsNumber.TrimEnd(',');
                    //_objProcessTemperingReport.reject_pcs_number = totalRejectPcsNumber;


                }

                _objProcessTemperingReport.remarks = txtRemarks.Text;



            }
            catch (Exception ex)
            {
                ex.Message.ToString();
                ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showException();", true);
            }
            return _objProcessTemperingReport;
        }
        #endregion


        #region All CheckBox  Checked Events
        protected void chkPcsOne_CheckedChanged(object sender, EventArgs e)
        {

            CheckBox _checkboxOne = (CheckBox)sender;
            RepeaterItem item = (RepeaterItem)_checkboxOne.NamingContainer;
            Int32 itemCheckboxindex = ((RepeaterItem)_checkboxOne.NamingContainer).ItemIndex;
            //Int32 itemindex = ((RepeaterItem)_checkboxOne.NamingContainer).ItemIndex;
            Label lblOkTotalPcsRepeater = (Label)item.FindControl("lblOkTotalPcsRepeater");
            Label lblBreakageTotalPcsRepeater = (Label)item.FindControl("lblBreakageTotalPcsRepeater");

            int _totalAllPcs = Convert.ToInt32(txtTotalOkBreakReject.Text == "" ? "0" : txtTotalOkBreakReject.Text);
            int _totalRecieved = Convert.ToInt32(txtreceived.Text == "" ? "0" : txtreceived.Text);


            if (lblOkTotalPcsRepeater.Text == "")
            {
                lblOkTotalPcsRepeater.Text = "0";
            }

            if (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) > 0)
            {
                if (_checkboxOne.Checked == false)
                {
                    lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) + 1).ToString();
                    lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) - 1).ToString();
                    OverAllTotalPcs();
                    _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];

                    _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("fourteen_pcs" /*column index*/, "breakage");
                    _dataTableItemStatusList.AcceptChanges();
                    btnUpdateData.Visible = false;
                   
                }
            }
            else
            {

                if (_checkboxOne.Checked == false)
                {
                    lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) + 1).ToString();
                    lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) - 1).ToString();
                    OverAllTotalPcs();
                    _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];

                    _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("fourteen_pcs" /*column index*/, "breakage");
                    _dataTableItemStatusList.AcceptChanges();
                    btnUpdateData.Visible = false;
                   
                }
            }
            if (Convert.ToInt32(lblOkTotalPcsRepeater.Text) >= 0)
            {


                if (_checkboxOne.Checked == true)
                {

                    if (_totalAllPcs  > _totalRecieved)
                    {
                        _checkboxOne.Checked = false;
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);

                    }
                    else if (_totalAllPcs == _totalRecieved)
                    {
                       
                       // lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) - 1).ToString();
                        _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];
                        if (_dataTableItemStatusList.Rows[itemCheckboxindex]["fourteen_pcs"].ToString() == "breakage")
                        {
                            if (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) > 0)
                            {
                                lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) + 1).ToString();
                                if (lblBreakageTotalPcsRepeater.Text == "0" || lblBreakageTotalPcsRepeater.Text=="")
                                {

                                }
                                else
                                {
                                    lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) - 1).ToString();
                                }
                               

                                _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("fourteen_pcs" /*column Name*/, "ok");
                                _dataTableItemStatusList.AcceptChanges();
                                OverAllTotalPcs();
                                btnUpdateData.Visible = false;
                            }
                            else
                            { }
                        }
                        else
                        {
                            _checkboxOne.Checked = false;
                            ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);

                        }

                    }
                    else
                    {
                        lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) + 1).ToString();

                        _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];

                        if (_dataTableItemStatusList.Rows[itemCheckboxindex]["fourteen_pcs"].ToString() == "breakage")
                        {
                            if (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) > 0)
                            {
                                lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) - 1).ToString();
                            }
                            else
                            { }
                        }
                        else
                        { }

                        _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("fourteen_pcs" /*column Name*/, "ok");
                        _dataTableItemStatusList.AcceptChanges();

                        OverAllTotalPcs();
                        btnUpdateData.Visible = false;
                        btnUpdateData.Enabled = false;
                    }
                }
                else
                { }


            }
            else
            {

            }


            //if(itemindex==0)
            //{
            //String.Concat(_itemPcsCounting + itemindex.ToString())+1;
            //_itemPcsCounting1++;

            //}
            //if (_checkboxOne.Checked == true)
            //{
            //    _itemPcsCounting++;
            //    lblOkTotalPcsRepeater.Text = _itemPcsCounting.ToString();


            //}
            //else
            //{
            //    _itemPcsCounting--;
            //    if (_itemPcsCounting < 0)
            //    {
            //        lblOkTotalPcsRepeater.Text = "0";
            //    }
            //    else
            //    {
            //        lblOkTotalPcsRepeater.Text = _itemPcsCounting.ToString();
            //    }
            //}
        }

        protected void chkPcsTwo_CheckedChanged(object sender, EventArgs e)
        {
            CheckBox _checkboxtwo = (CheckBox)sender;
            RepeaterItem item = (RepeaterItem)_checkboxtwo.NamingContainer;
            Int32 itemCheckboxindex = ((RepeaterItem)_checkboxtwo.NamingContainer).ItemIndex;
            Label lblOkTotalPcsRepeater = (Label)item.FindControl("lblOkTotalPcsRepeater");
            Label lblBreakageTotalPcsRepeater = (Label)item.FindControl("lblBreakageTotalPcsRepeater");

            int _totalAllPcs = Convert.ToInt32(txtTotalOkBreakReject.Text == "" ? "0" : txtTotalOkBreakReject.Text);
            int _totalRecieved = Convert.ToInt32(txtreceived.Text == "" ? "0" : txtreceived.Text);

            
                if (lblOkTotalPcsRepeater.Text == "")
                {
                    lblOkTotalPcsRepeater.Text = "0";
                }

                if (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) > 0)
                {
                    if (_checkboxtwo.Checked == false)
                    {
                        lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) + 1).ToString();
                        lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) - 1).ToString();
                        OverAllTotalPcs();
                        _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];

                        _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("second_pcs" /*column index*/, "breakage");
                        _dataTableItemStatusList.AcceptChanges();
                    btnUpdateData.Visible = false;
                }
                }
                else
                {
                    if (_checkboxtwo.Checked == false)
                    {
                        lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) + 1).ToString();
                        lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) - 1).ToString();
                        OverAllTotalPcs();
                        _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];

                        _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("second_pcs" /*column index*/, "breakage");
                        _dataTableItemStatusList.AcceptChanges();
                    btnUpdateData.Visible = false;
                }
                }
                if (Convert.ToInt32(lblOkTotalPcsRepeater.Text) >= 0)
                {
                    if (_checkboxtwo.Checked == true)
                    {

                    if (_totalAllPcs  > _totalRecieved)
                    {
                        _checkboxtwo.Checked = false;
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);

                    }
                    else if(_totalAllPcs  == _totalRecieved)
                    {
                        _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];
                        if (_dataTableItemStatusList.Rows[itemCheckboxindex]["second_pcs"].ToString() == "breakage")
                        {
                            if (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) > 0)
                            {
                                lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) + 1).ToString();
                                if (lblBreakageTotalPcsRepeater.Text == "0" || lblBreakageTotalPcsRepeater.Text == "")
                                {

                                }
                                else
                                {
                                    lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) - 1).ToString();
                                }


                                _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("second_pcs" /*column Name*/, "ok");
                                _dataTableItemStatusList.AcceptChanges();
                                OverAllTotalPcs();
                                btnUpdateData.Visible = false;
                            }
                            else
                            { }
                        }
                        else
                        {
                            _checkboxtwo.Checked = false;
                            ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);

                        }
                    }
                    else
                    {
                        lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) + 1).ToString();
                        _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];

                        if (_dataTableItemStatusList.Rows[itemCheckboxindex]["second_pcs"].ToString() == "breakage")
                        {
                            if (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) > 0)
                            {
                                lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) - 1).ToString();


                            }
                            else
                            {

                            }
                        }
                        else
                        {

                        }


                        _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("second_pcs" /*column Name*/, "ok");
                        _dataTableItemStatusList.AcceptChanges();
                        OverAllTotalPcs();
                        btnUpdateData.Visible = false;
                    }
                   
                }
                    else
                    { }

                }
                else
                {

                }
            
        }

        protected void chkPcsThree_CheckedChanged(object sender, EventArgs e)
        {
            CheckBox _checkboxthree = (CheckBox)sender;
            RepeaterItem item = (RepeaterItem)_checkboxthree.NamingContainer;
            Int32 itemCheckboxindex = ((RepeaterItem)_checkboxthree.NamingContainer).ItemIndex;
            Label lblOkTotalPcsRepeater = (Label)item.FindControl("lblOkTotalPcsRepeater");
            Label lblBreakageTotalPcsRepeater = (Label)item.FindControl("lblBreakageTotalPcsRepeater");

            int _totalAllPcs = Convert.ToInt32(txtTotalOkBreakReject.Text == "" ? "0" : txtTotalOkBreakReject.Text);
            int _totalRecieved = Convert.ToInt32(txtreceived.Text == "" ? "0" : txtreceived.Text);

           

                if (lblOkTotalPcsRepeater.Text == "")
                {
                    lblOkTotalPcsRepeater.Text = "0";
                }

                if (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) > 0)
                {
                    if (_checkboxthree.Checked == false)
                    {
                        lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) + 1).ToString();
                        lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) - 1).ToString();
                        OverAllTotalPcs();
                        _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];

                        _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("third_pcs" /*column index*/, "breakage");
                        _dataTableItemStatusList.AcceptChanges();
                        btnUpdateData.Visible = false;
                }
                }
                else
                {
                    if (_checkboxthree.Checked == false)
                    {
                        lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) + 1).ToString();
                        lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) - 1).ToString();
                        OverAllTotalPcs();
                        _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];

                        _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("third_pcs" /*column index*/, "breakage");
                        _dataTableItemStatusList.AcceptChanges();
                    btnUpdateData.Visible = false;
                }
                }
                if (Convert.ToInt32(lblOkTotalPcsRepeater.Text) >= 0)
                {
                    if (_checkboxthree.Checked == true)
                    {
                    if (_totalAllPcs > _totalRecieved)
                    {
                        _checkboxthree.Checked = false;
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);

                    }
                    else if (_totalAllPcs == _totalRecieved)
                    {
                        _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];
                        if (_dataTableItemStatusList.Rows[itemCheckboxindex]["third_pcs"].ToString() == "breakage")
                        {
                            if (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) > 0)
                            {
                                lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) + 1).ToString();
                                if (lblBreakageTotalPcsRepeater.Text == "0" || lblBreakageTotalPcsRepeater.Text == "")
                                {

                                }
                                else
                                {
                                    lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) - 1).ToString();
                                }


                                _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("third_pcs" /*column Name*/, "ok");
                                _dataTableItemStatusList.AcceptChanges();
                                OverAllTotalPcs();
                                btnUpdateData.Visible = false;
                            }
                            else
                            { }
                        }
                        else
                        {
                            _checkboxthree.Checked = false;
                            ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);

                        }
                    }
                    else
                    {
                        lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) + 1).ToString();

                        _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];

                        if (_dataTableItemStatusList.Rows[itemCheckboxindex]["third_pcs"].ToString() == "breakage")
                        {
                            if (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) > 0)
                            {
                                lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) - 1).ToString();


                            }
                            else
                            {

                            }
                        }
                        else
                        {

                        }

                        _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("third_pcs" /*column Name*/, "ok");
                        _dataTableItemStatusList.AcceptChanges();
                        OverAllTotalPcs();
                        btnUpdateData.Visible = false;
                    }
                    }
                    else
                    {
                        //lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) - 1).ToString();
                        //lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) + 1).ToString();
                        //OverAllTotalPcs();
                    }

                }
                else
                {

                }
            

        }

        protected void chkPcsfour_CheckedChanged(object sender, EventArgs e)
        {
            CheckBox _checkboxfour = (CheckBox)sender;
            RepeaterItem item = (RepeaterItem)_checkboxfour.NamingContainer;
            Int32 itemCheckboxindex = ((RepeaterItem)_checkboxfour.NamingContainer).ItemIndex;
            Label lblOkTotalPcsRepeater = (Label)item.FindControl("lblOkTotalPcsRepeater");
            Label lblBreakageTotalPcsRepeater = (Label)item.FindControl("lblBreakageTotalPcsRepeater");

            int _totalAllPcs = Convert.ToInt32(txtTotalOkBreakReject.Text == "" ? "0" : txtTotalOkBreakReject.Text);
            int _totalRecieved = Convert.ToInt32(txtreceived.Text == "" ? "0" : txtreceived.Text);

            
                if (lblOkTotalPcsRepeater.Text == "")
                {
                    lblOkTotalPcsRepeater.Text = "0";
                }

                if (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) > 0)
                {
                    if (_checkboxfour.Checked == false)
                    {
                        lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) + 1).ToString();
                        lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) - 1).ToString();
                        OverAllTotalPcs();
                        _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];

                        _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("fourth_pcs" /*column index*/, "breakage");
                        _dataTableItemStatusList.AcceptChanges();
                    btnUpdateData.Visible = false;
                }
                }
                else
                {
                    if (_checkboxfour.Checked == false)
                    {
                        lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) + 1).ToString();
                        lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) - 1).ToString();
                        OverAllTotalPcs();
                        _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];

                        _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("fourth_pcs" /*column index*/, "breakage");
                        _dataTableItemStatusList.AcceptChanges();
                    btnUpdateData.Visible = false;
                }
                }
                if (Convert.ToInt32(lblOkTotalPcsRepeater.Text) >= 0)
                {
                    if (_checkboxfour.Checked == true)
                    {
                    if (_totalAllPcs > _totalRecieved)
                    {
                        _checkboxfour.Checked = false;
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);
                       

                    }
                    else if (_totalAllPcs == _totalRecieved)
                    {
                        _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];
                        if (_dataTableItemStatusList.Rows[itemCheckboxindex]["fourth_pcs"].ToString() == "breakage")
                        {
                            if (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) > 0)
                            {
                                lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) + 1).ToString();
                                if (lblBreakageTotalPcsRepeater.Text == "0" || lblBreakageTotalPcsRepeater.Text == "")
                                {

                                }
                                else
                                {
                                    lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) - 1).ToString();
                                }


                                _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("fourth_pcs" /*column Name*/, "ok");
                                _dataTableItemStatusList.AcceptChanges();
                                OverAllTotalPcs();
                                btnUpdateData.Visible = false;
                            }
                            else
                            { }
                        }
                        else
                        {
                            _checkboxfour.Checked = false;
                            ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);

                        }
                    }
                    else
                    {

                        lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) + 1).ToString();
                        _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];

                        if (_dataTableItemStatusList.Rows[itemCheckboxindex]["fourth_pcs"].ToString() == "breakage")
                        {
                            if (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) > 0)
                            {
                                lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) - 1).ToString();
                            }
                            else { }
                        }
                        else { }
                        _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("fourth_pcs" /*column Name*/, "ok");
                        _dataTableItemStatusList.AcceptChanges();
                        OverAllTotalPcs();
                        btnUpdateData.Visible = false;
                    }
                    }
                    else { }

                }
                else { }

           
        }

        protected void chkPcsFive_CheckedChanged(object sender, EventArgs e)
        {
            CheckBox _checkboxfive = (CheckBox)sender;
            RepeaterItem item = (RepeaterItem)_checkboxfive.NamingContainer;
            Int32 itemCheckboxindex = ((RepeaterItem)_checkboxfive.NamingContainer).ItemIndex;
            Label lblOkTotalPcsRepeater = (Label)item.FindControl("lblOkTotalPcsRepeater");
            Label lblBreakageTotalPcsRepeater = (Label)item.FindControl("lblBreakageTotalPcsRepeater");

            int _totalAllPcs = Convert.ToInt32(txtTotalOkBreakReject.Text == "" ? "0" : txtTotalOkBreakReject.Text);
            int _totalRecieved = Convert.ToInt32(txtreceived.Text == "" ? "0" : txtreceived.Text);

            
                if (lblOkTotalPcsRepeater.Text == "")
                {
                    lblOkTotalPcsRepeater.Text = "0";
                }

                if (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) > 0)
                {
                    if (_checkboxfive.Checked == false)
                    {
                        lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) + 1).ToString();
                        lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) - 1).ToString();
                        OverAllTotalPcs();
                        _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];

                        _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("fifth_pcs" /*column index*/, "breakage");
                        _dataTableItemStatusList.AcceptChanges();
                    btnUpdateData.Visible = false;
                }
                }
                else
                {
                    if (_checkboxfive.Checked == false)
                    {
                        lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) + 1).ToString();
                        lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) - 1).ToString();
                        OverAllTotalPcs();
                        _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];

                        _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("fifth_pcs" /*column index*/, "breakage");
                        _dataTableItemStatusList.AcceptChanges();
                    btnUpdateData.Visible = false;
                }
                }
                if (Convert.ToInt32(lblOkTotalPcsRepeater.Text) >= 0)
                {
                    if (_checkboxfive.Checked == true)
                    {
                    if (_totalAllPcs > _totalRecieved)
                    {
                        _checkboxfive.Checked = false;
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);

                    }
                    else if (_totalAllPcs == _totalRecieved)
                    {
                        _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];
                        if (_dataTableItemStatusList.Rows[itemCheckboxindex]["fifth_pcs"].ToString() == "breakage")
                        {
                            if (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) > 0)
                            {
                                lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) + 1).ToString();
                                if (lblBreakageTotalPcsRepeater.Text == "0" || lblBreakageTotalPcsRepeater.Text == "")
                                {

                                }
                                else
                                {
                                    lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) - 1).ToString();
                                }


                                _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("fifth_pcs" /*column Name*/, "ok");
                                _dataTableItemStatusList.AcceptChanges();
                                OverAllTotalPcs();
                                btnUpdateData.Visible = false;
                            }
                            else
                            { }
                        }
                        else
                        {
                            _checkboxfive.Checked = false;
                            ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);

                        }
                    }
                    else
                    {

                        lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) + 1).ToString();
                        _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];

                        if (_dataTableItemStatusList.Rows[itemCheckboxindex]["fifth_pcs"].ToString() == "breakage")
                        {
                            if (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) > 0)
                            {
                                lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) - 1).ToString();
                            }
                            else { }
                        }
                        else { }
                        _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("fifth_pcs" /*column Name*/, "ok");
                        _dataTableItemStatusList.AcceptChanges();
                        OverAllTotalPcs();
                        btnUpdateData.Visible = false;
                    }
                    }
                    else
                    { }

                }
                else
                {

                }

          


        }

        protected void chkPcsSix_CheckedChanged(object sender, EventArgs e)
        {
            CheckBox _checkboxsix = (CheckBox)sender;
            RepeaterItem item = (RepeaterItem)_checkboxsix.NamingContainer;
            Int32 itemCheckboxindex = ((RepeaterItem)_checkboxsix.NamingContainer).ItemIndex;
            Label lblOkTotalPcsRepeater = (Label)item.FindControl("lblOkTotalPcsRepeater");
            Label lblBreakageTotalPcsRepeater = (Label)item.FindControl("lblBreakageTotalPcsRepeater");
            int _totalAllPcs = Convert.ToInt32(txtTotalOkBreakReject.Text == "" ? "0" : txtTotalOkBreakReject.Text);
            int _totalRecieved = Convert.ToInt32(txtreceived.Text == "" ? "0" : txtreceived.Text);

           
                if (lblOkTotalPcsRepeater.Text == "")
                {
                    lblOkTotalPcsRepeater.Text = "0";
                }

                if (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) > 0)
                {

                    if (_checkboxsix.Checked == false)
                    {
                        lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) + 1).ToString();
                        lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) - 1).ToString();
                        OverAllTotalPcs();
                        _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];

                        _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("sixth_pcs" /*column index*/, "breakage");
                        _dataTableItemStatusList.AcceptChanges();
                    btnUpdateData.Visible = false;
                }
                }
                else
                {
                    if (_checkboxsix.Checked == false)
                    {
                        lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) + 1).ToString();
                        lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) - 1).ToString();
                        OverAllTotalPcs();
                        _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];

                        _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("sixth_pcs" /*column index*/, "breakage");
                        _dataTableItemStatusList.AcceptChanges();
                    btnUpdateData.Visible = false;
                }
                }
                if (Convert.ToInt32(lblOkTotalPcsRepeater.Text) >= 0)
                {
                    if (_checkboxsix.Checked == true)
                    {
                    if (_totalAllPcs > _totalRecieved)
                    {
                        _checkboxsix.Checked = false;
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);

                    }
                    else if (_totalAllPcs == _totalRecieved)
                    {
                        _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];
                        if (_dataTableItemStatusList.Rows[itemCheckboxindex]["sixth_pcs"].ToString() == "breakage")
                        {
                            if (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) > 0)
                            {
                                lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) + 1).ToString();
                                if (lblBreakageTotalPcsRepeater.Text == "0" || lblBreakageTotalPcsRepeater.Text == "")
                                {

                                }
                                else
                                {
                                    lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) - 1).ToString();
                                }


                                _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("sixth_pcs" /*column Name*/, "ok");
                                _dataTableItemStatusList.AcceptChanges();
                                OverAllTotalPcs();
                                btnUpdateData.Visible = false;
                            }
                            else
                            { }
                        }
                        else
                        {
                            _checkboxsix.Checked = false;
                            ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);

                        }
                    }
                    else
                    {
                        lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) + 1).ToString();

                        _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];
                        if (_dataTableItemStatusList.Rows[itemCheckboxindex]["sixth_pcs"].ToString() == "breakage")
                        {
                            if (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) > 0)
                            {
                                lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) - 1).ToString();
                            }
                            else { }
                        }
                        else { }
                        _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("sixth_pcs" /*column Name*/, "ok");
                        _dataTableItemStatusList.AcceptChanges();
                        OverAllTotalPcs();
                        btnUpdateData.Visible = false;
                    }
                    }
                    else
                    {

                    }

                }
                else
                {

                }
            
        }

        protected void chkPcsSeven_CheckedChanged(object sender, EventArgs e)
        {
            CheckBox _checkboxseven = (CheckBox)sender;
            RepeaterItem item = (RepeaterItem)_checkboxseven.NamingContainer;
            Int32 itemCheckboxindex = ((RepeaterItem)_checkboxseven.NamingContainer).ItemIndex;
            Label lblOkTotalPcsRepeater = (Label)item.FindControl("lblOkTotalPcsRepeater");
            Label lblBreakageTotalPcsRepeater = (Label)item.FindControl("lblBreakageTotalPcsRepeater");

            int _totalAllPcs = Convert.ToInt32(txtTotalOkBreakReject.Text == "" ? "0" : txtTotalOkBreakReject.Text);
            int _totalRecieved = Convert.ToInt32(txtreceived.Text == "" ? "0" : txtreceived.Text);

                if (lblOkTotalPcsRepeater.Text == "")
                {
                    lblOkTotalPcsRepeater.Text = "0";
                }

                if (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) > 0)
                {

                    if (_checkboxseven.Checked == false)
                    {
                        lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) + 1).ToString();
                        lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) - 1).ToString();
                        OverAllTotalPcs();
                        _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];

                        _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("seventh_pcs" /*column index*/, "breakage");
                        _dataTableItemStatusList.AcceptChanges();
                    btnUpdateData.Visible = false;
                }
                }
                else
                {
                    if (_checkboxseven.Checked == false)
                    {
                        lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) + 1).ToString();
                        lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) - 1).ToString();
                        OverAllTotalPcs();
                        _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];

                        _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("seventh_pcs" /*column index*/, "breakage");
                        _dataTableItemStatusList.AcceptChanges();
                    btnUpdateData.Visible = false;
                }
                }
                if (Convert.ToInt32(lblOkTotalPcsRepeater.Text) >= 0)
                {
                    if (_checkboxseven.Checked == true)
                    {
                    if (_totalAllPcs > _totalRecieved)
                    {
                        _checkboxseven.Checked = false;
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);

                    }
                    else if (_totalAllPcs == _totalRecieved)
                    {
                        _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];
                        if (_dataTableItemStatusList.Rows[itemCheckboxindex]["seventh_pcs"].ToString() == "breakage")
                        {
                            if (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) > 0)
                            {
                                lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) + 1).ToString();
                                if (lblBreakageTotalPcsRepeater.Text == "0" || lblBreakageTotalPcsRepeater.Text == "")
                                {

                                }
                                else
                                {
                                    lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) - 1).ToString();
                                }


                                _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("seventh_pcs" /*column Name*/, "ok");
                                _dataTableItemStatusList.AcceptChanges();
                                OverAllTotalPcs();
                                btnUpdateData.Visible = false;
                            }
                            else
                            { }
                        }
                        else
                        {
                            _checkboxseven.Checked = false;
                            ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);

                        }
                    }
                    else
                    {
                        lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) + 1).ToString();
                        _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];
                        if (_dataTableItemStatusList.Rows[itemCheckboxindex]["seventh_pcs"].ToString() == "breakage")
                        {
                            if (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) > 0)
                            {
                                lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) - 1).ToString();
                            }
                            else { }
                        }
                        else { }
                        _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("seventh_pcs" /*column Name*/, "ok");
                        _dataTableItemStatusList.AcceptChanges();
                        OverAllTotalPcs();
                        btnUpdateData.Visible = false;
                    }
                    }
                    else
                    {

                    }

                }
                else
                {

                }
            
        }

        protected void chkPcsEight_CheckedChanged(object sender, EventArgs e)
        {
            CheckBox _checkboxeight = (CheckBox)sender;
            RepeaterItem item = (RepeaterItem)_checkboxeight.NamingContainer;
            Int32 itemCheckboxindex = ((RepeaterItem)_checkboxeight.NamingContainer).ItemIndex;
            Label lblOkTotalPcsRepeater = (Label)item.FindControl("lblOkTotalPcsRepeater");
            Label lblBreakageTotalPcsRepeater = (Label)item.FindControl("lblBreakageTotalPcsRepeater");
            int _totalAllPcs = Convert.ToInt32(txtTotalOkBreakReject.Text == "" ? "0" : txtTotalOkBreakReject.Text);
            int _totalRecieved = Convert.ToInt32(txtreceived.Text == "" ? "0" : txtreceived.Text);

          
                if (lblOkTotalPcsRepeater.Text == "")
                {
                    lblOkTotalPcsRepeater.Text = "0";
                }

                if (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) > 0)
                {

                    if (_checkboxeight.Checked == false)
                    {
                        lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) + 1).ToString();
                        lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) - 1).ToString();
                        OverAllTotalPcs();
                        _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];

                        _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("eight_pcs" /*column index*/, "breakage");
                        _dataTableItemStatusList.AcceptChanges();
                    btnUpdateData.Visible = false;
                }
                }
                else
                {
                    if (_checkboxeight.Checked == false)
                    {
                        lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) + 1).ToString();
                        lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) - 1).ToString();
                        OverAllTotalPcs();
                        _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];

                        _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("eight_pcs" /*column index*/, "breakage");
                        _dataTableItemStatusList.AcceptChanges();
                    btnUpdateData.Visible = false;
                }
                }
            if (Convert.ToInt32(lblOkTotalPcsRepeater.Text) >= 0)
            {
                if (_checkboxeight.Checked == true)
                {
                    if (_totalAllPcs > _totalRecieved)
                    {
                        _checkboxeight.Checked = false;
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);

                    }
                    else if (_totalAllPcs == _totalRecieved)
                    {
                        _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];
                        if (_dataTableItemStatusList.Rows[itemCheckboxindex]["eight_pcs"].ToString() == "breakage")
                        {
                            if (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) > 0)
                            {
                                lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) + 1).ToString();
                                if (lblBreakageTotalPcsRepeater.Text == "0" || lblBreakageTotalPcsRepeater.Text == "")
                                {

                                }
                                else
                                {
                                    lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) - 1).ToString();
                                }


                                _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("eight_pcs" /*column Name*/, "ok");
                                _dataTableItemStatusList.AcceptChanges();
                                OverAllTotalPcs();
                                btnUpdateData.Visible = false;
                            }
                            else
                            { }
                        }
                        else
                        {
                            _checkboxeight.Checked = false;
                            ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);

                        }
                    }
                    else
                    {
                        lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) + 1).ToString();
                        _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];
                        if (_dataTableItemStatusList.Rows[itemCheckboxindex]["eight_pcs"].ToString() == "breakage")
                        {
                            if (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) > 0)
                            {
                                lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) - 1).ToString();
                            }
                            else { }
                        }
                        else { }
                        _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("eight_pcs" /*column Name*/, "ok");
                        _dataTableItemStatusList.AcceptChanges();
                        OverAllTotalPcs();
                        btnUpdateData.Visible = false;
                    }
                }
                else
                {

                }

            }
            else
            {

            }

        }

        protected void chkPcsNine_CheckedChanged(object sender, EventArgs e)
        {
            CheckBox _checkboxnine = (CheckBox)sender;
            RepeaterItem item = (RepeaterItem)_checkboxnine.NamingContainer;
            Int32 itemCheckboxindex = ((RepeaterItem)_checkboxnine.NamingContainer).ItemIndex;
            Label lblOkTotalPcsRepeater = (Label)item.FindControl("lblOkTotalPcsRepeater");
            Label lblBreakageTotalPcsRepeater = (Label)item.FindControl("lblBreakageTotalPcsRepeater");

            int _totalAllPcs = Convert.ToInt32(txtTotalOkBreakReject.Text == "" ? "0" : txtTotalOkBreakReject.Text);
            int _totalRecieved = Convert.ToInt32(txtreceived.Text == "" ? "0" : txtreceived.Text);

           
                if (lblOkTotalPcsRepeater.Text == "")
                {
                    lblOkTotalPcsRepeater.Text = "0";
                }

                if (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) > 0)
                {

                    if (_checkboxnine.Checked == false)
                    {
                        lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) + 1).ToString();
                        lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) - 1).ToString();
                        OverAllTotalPcs();
                        _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];

                        _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("ninth_pcs" /*column index*/, "breakage");
                        _dataTableItemStatusList.AcceptChanges();
                    btnUpdateData.Visible = false;
                }
                }
                else
                {
                    if (_checkboxnine.Checked == false)
                    {
                        lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) + 1).ToString();
                        lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) - 1).ToString();
                        OverAllTotalPcs();
                        _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];

                        _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("ninth_pcs" /*column index*/, "breakage");
                        _dataTableItemStatusList.AcceptChanges();
                    btnUpdateData.Visible = false;
                }
                }
                if (Convert.ToInt32(lblOkTotalPcsRepeater.Text) >= 0)
                {
                    if (_checkboxnine.Checked == true)
                    {
                    if (_totalAllPcs > _totalRecieved)
                    {
                        _checkboxnine.Checked = false;
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);

                    }
                    else if (_totalAllPcs == _totalRecieved)
                    {
                        _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];
                        if (_dataTableItemStatusList.Rows[itemCheckboxindex]["ninth_pcs"].ToString() == "breakage")
                        {
                            if (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) > 0)
                            {
                                lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) + 1).ToString();
                                if (lblBreakageTotalPcsRepeater.Text == "0" || lblBreakageTotalPcsRepeater.Text == "")
                                {

                                }
                                else
                                {
                                    lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) - 1).ToString();
                                }


                                _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("ninth_pcs" /*column Name*/, "ok");
                                _dataTableItemStatusList.AcceptChanges();
                                OverAllTotalPcs();
                                btnUpdateData.Visible = false;
                            }
                            else
                            { }
                        }
                        else
                        {
                            _checkboxnine.Checked = false;
                            ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);

                        }
                    }
                    else
                    {
                        lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) + 1).ToString();
                        _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];
                        if (_dataTableItemStatusList.Rows[itemCheckboxindex]["ninth_pcs"].ToString() == "breakage")
                        {
                            if (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) > 0)
                            {
                                lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) - 1).ToString();
                            }
                            else { }
                        }
                        else { }
                        _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("ninth_pcs" /*column Name*/, "ok");
                        _dataTableItemStatusList.AcceptChanges();
                        OverAllTotalPcs();
                        btnUpdateData.Visible = false;
                    }
                    }
                    else
                    {

                    }

                }
                else
                {

                }
           
        }

        protected void chkPcsTen_CheckedChanged(object sender, EventArgs e)
        {
            CheckBox _checkboxten = (CheckBox)sender;
            RepeaterItem item = (RepeaterItem)_checkboxten.NamingContainer;
            Int32 itemCheckboxindex = ((RepeaterItem)_checkboxten.NamingContainer).ItemIndex;
            Label lblOkTotalPcsRepeater = (Label)item.FindControl("lblOkTotalPcsRepeater");
            Label lblBreakageTotalPcsRepeater = (Label)item.FindControl("lblBreakageTotalPcsRepeater");

            int _totalAllPcs = Convert.ToInt32(txtTotalOkBreakReject.Text == "" ? "0" : txtTotalOkBreakReject.Text);
            int _totalRecieved = Convert.ToInt32(txtreceived.Text == "" ? "0" : txtreceived.Text);

            
                if (lblOkTotalPcsRepeater.Text == "")
                {
                    lblOkTotalPcsRepeater.Text = "0";
                }

                if (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) > 0)
                {

                    if (_checkboxten.Checked == false)
                    {
                        lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) + 1).ToString();
                        lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) - 1).ToString();
                        OverAllTotalPcs();
                        _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];

                        _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("tenth_pcs" /*column index*/, "breakage");
                        _dataTableItemStatusList.AcceptChanges();
                    btnUpdateData.Visible = false;
                }
                }
                else
                {
                    if (_checkboxten.Checked == false)
                    {
                        lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) + 1).ToString();
                        lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) - 1).ToString();
                        OverAllTotalPcs();
                        _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];

                        _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("tenth_pcs" /*column index*/, "breakage");
                        _dataTableItemStatusList.AcceptChanges();
                    btnUpdateData.Visible = false;
                }
                }
                if (Convert.ToInt32(lblOkTotalPcsRepeater.Text) >= 0)
                {
                    if (_checkboxten.Checked == true)
                    {
                    if (_totalAllPcs > _totalRecieved)
                    {
                        _checkboxten.Checked = false;
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);

                    }
                    else if (_totalAllPcs == _totalRecieved)
                    {
                        _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];
                        if (_dataTableItemStatusList.Rows[itemCheckboxindex]["tenth_pcs"].ToString() == "breakage")
                        {
                            if (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) > 0)
                            {
                                lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) + 1).ToString();
                                if (lblBreakageTotalPcsRepeater.Text == "0" || lblBreakageTotalPcsRepeater.Text == "")
                                {
                                }
                                else
                                {
                                    lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) - 1).ToString();
                                }

                                _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("tenth_pcs" /*column Name*/, "ok");
                                _dataTableItemStatusList.AcceptChanges();
                                OverAllTotalPcs();
                                btnUpdateData.Visible = false;
                            }
                            else
                            { }
                        }
                        else
                        {
                            _checkboxten.Checked = false;
                            ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);
                        }
                    }
                    else
                    {
                        lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) + 1).ToString();
                        _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];
                        if (_dataTableItemStatusList.Rows[itemCheckboxindex]["tenth_pcs"].ToString() == "breakage")
                        {
                            if (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) > 0)
                            {
                                lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) - 1).ToString();
                            }
                            else { }
                        }
                        else { }
                        _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("tenth_pcs" /*column Name*/, "ok");
                        _dataTableItemStatusList.AcceptChanges();
                        OverAllTotalPcs();
                        btnUpdateData.Visible = false;
                    }
                    }
                    else
                    {

                    }

                }
                else
                {

                }
            
        }

        protected void chkPcsEleven_CheckedChanged(object sender, EventArgs e)
        {
            CheckBox _checkboxeleven = (CheckBox)sender;
            RepeaterItem item = (RepeaterItem)_checkboxeleven.NamingContainer;
            Int32 itemCheckboxindex = ((RepeaterItem)_checkboxeleven.NamingContainer).ItemIndex;
            Label lblOkTotalPcsRepeater = (Label)item.FindControl("lblOkTotalPcsRepeater");
            Label lblBreakageTotalPcsRepeater = (Label)item.FindControl("lblBreakageTotalPcsRepeater");
            int _totalAllPcs = Convert.ToInt32(txtTotalOkBreakReject.Text == "" ? "0" : txtTotalOkBreakReject.Text);
            int _totalRecieved = Convert.ToInt32(txtreceived.Text == "" ? "0" : txtreceived.Text);

           
                if (lblOkTotalPcsRepeater.Text == "")
                {
                    lblOkTotalPcsRepeater.Text = "0";
                }

                if (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) > 0)
                {

                    if (_checkboxeleven.Checked == false)
                    {
                        lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) + 1).ToString();
                        lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) - 1).ToString();
                        OverAllTotalPcs();
                        _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];

                        _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("eleven_pcs" /*column index*/, "breakage");
                        _dataTableItemStatusList.AcceptChanges();
                    btnUpdateData.Visible = false;
                }
                }
                else
                {
                    if (_checkboxeleven.Checked == false)
                    {
                        lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) + 1).ToString();
                        lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) - 1).ToString();
                        OverAllTotalPcs();
                        _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];

                        _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("eleven_pcs" /*column index*/, "breakage");
                        _dataTableItemStatusList.AcceptChanges();
                    btnUpdateData.Visible = false;
                }
                }
                if (Convert.ToInt32(lblOkTotalPcsRepeater.Text) >= 0)
                {
                    if (_checkboxeleven.Checked == true)
                    {
                    if (_totalAllPcs > _totalRecieved)
                    {
                        _checkboxeleven.Checked = false;
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);

                    }
                    else if (_totalAllPcs == _totalRecieved)
                    {
                        _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];
                        if (_dataTableItemStatusList.Rows[itemCheckboxindex]["eleven_pcs"].ToString() == "breakage")
                        {
                            if (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) > 0)
                            {
                                lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) + 1).ToString();
                                if (lblBreakageTotalPcsRepeater.Text == "0" || lblBreakageTotalPcsRepeater.Text == "")
                                {
                                }
                                else
                                {
                                    lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) - 1).ToString();
                                }

                                _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("eleven_pcs" /*column Name*/, "ok");
                                _dataTableItemStatusList.AcceptChanges();
                                OverAllTotalPcs();
                                btnUpdateData.Visible = false;
                            }
                            else
                            { }
                        }
                        else
                        {
                            _checkboxeleven.Checked = false;
                            ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);
                        }
                    }
                    else
                    {

                        lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) + 1).ToString();
                        _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];
                        if (_dataTableItemStatusList.Rows[itemCheckboxindex]["eleven_pcs"].ToString() == "breakage")
                        {
                            if (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) > 0)
                            {
                                lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) - 1).ToString();
                            }
                            else { }
                        }
                        else { }
                        _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("eleven_pcs" /*column Name*/, "ok");
                        _dataTableItemStatusList.AcceptChanges();
                        OverAllTotalPcs();
                        btnUpdateData.Visible = false;
                    }
                    }
                    else
                    {

                    }

                }
                else
                {

                }
           

        }

        protected void chkPcsTwelve_CheckedChanged(object sender, EventArgs e)
        {
            CheckBox _checkboxtwelve = (CheckBox)sender;
            RepeaterItem item = (RepeaterItem)_checkboxtwelve.NamingContainer;
            Int32 itemCheckboxindex = ((RepeaterItem)_checkboxtwelve.NamingContainer).ItemIndex;
            Label lblOkTotalPcsRepeater = (Label)item.FindControl("lblOkTotalPcsRepeater");
            Label lblBreakageTotalPcsRepeater = (Label)item.FindControl("lblBreakageTotalPcsRepeater");
            int _totalAllPcs = Convert.ToInt32(txtTotalOkBreakReject.Text == "" ? "0" : txtTotalOkBreakReject.Text);
            int _totalRecieved = Convert.ToInt32(txtreceived.Text == "" ? "0" : txtreceived.Text);

           
                if (lblOkTotalPcsRepeater.Text == "")
                {
                    lblOkTotalPcsRepeater.Text = "0";
                }

                if (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) > 0)
                {

                    if (_checkboxtwelve.Checked == false)
                    {
                        lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) + 1).ToString();
                        lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) - 1).ToString();
                        OverAllTotalPcs();
                        _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];

                        _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("twelve_pcs" /*column index*/, "breakage");
                        _dataTableItemStatusList.AcceptChanges();
                    btnUpdateData.Visible = false;
                }
                }
                else
                {
                    if (_checkboxtwelve.Checked == false)
                    {
                        lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) + 1).ToString();
                        lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) - 1).ToString();
                        OverAllTotalPcs();
                        _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];

                        _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("twelve_pcs" /*column index*/, "breakage");
                        _dataTableItemStatusList.AcceptChanges();
                    btnUpdateData.Visible = false;
                }
                }
                if (Convert.ToInt32(lblOkTotalPcsRepeater.Text) >= 0)
                {
                    if (_checkboxtwelve.Checked == true)
                    {
                    if (_totalAllPcs > _totalRecieved)
                    {
                        _checkboxtwelve.Checked = false;
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);

                    }
                    else if (_totalAllPcs == _totalRecieved)
                    {
                        _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];
                        if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twelve_pcs"].ToString() == "breakage")
                        {
                            if (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) > 0)
                            {
                                lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) + 1).ToString();
                                if (lblBreakageTotalPcsRepeater.Text == "0" || lblBreakageTotalPcsRepeater.Text == "")
                                {
                                }
                                else
                                {
                                    lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) - 1).ToString();
                                }

                                _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("twelve_pcs" /*column Name*/, "ok");
                                _dataTableItemStatusList.AcceptChanges();
                                OverAllTotalPcs();
                                btnUpdateData.Visible = false;
                            }
                            else
                            { }
                        }
                        else
                        {
                            _checkboxtwelve.Checked = false;
                            ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);
                        }
                    }
                    else
                    {
                        lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) + 1).ToString();
                        _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];
                        if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twelve_pcs"].ToString() == "breakage")
                        {
                            if (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) > 0)
                            {
                                lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) - 1).ToString();
                            }
                            else { }
                        }
                        else { }
                        _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("twelve_pcs" /*column Name*/, "ok");
                        _dataTableItemStatusList.AcceptChanges();

                        OverAllTotalPcs();
                        btnUpdateData.Visible = false;
                    }
                    }
                    else
                    {

                    }

                }
                else
                {

                }
            
        }

        protected void chkPcsThirteen_CheckedChanged(object sender, EventArgs e)
        {
            CheckBox _checkboxthirteen = (CheckBox)sender;
            RepeaterItem item = (RepeaterItem)_checkboxthirteen.NamingContainer;
            Int32 itemCheckboxindex = ((RepeaterItem)_checkboxthirteen.NamingContainer).ItemIndex;
            Label lblOkTotalPcsRepeater = (Label)item.FindControl("lblOkTotalPcsRepeater");
            Label lblBreakageTotalPcsRepeater = (Label)item.FindControl("lblBreakageTotalPcsRepeater");
            int _totalAllPcs = Convert.ToInt32(txtTotalOkBreakReject.Text == "" ? "0" : txtTotalOkBreakReject.Text);
            int _totalRecieved = Convert.ToInt32(txtreceived.Text == "" ? "0" : txtreceived.Text);

                if (lblOkTotalPcsRepeater.Text == "")
                {
                    lblOkTotalPcsRepeater.Text = "0";
                }

                if (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) > 0)
                {

                    if (_checkboxthirteen.Checked == false)
                    {
                        lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) + 1).ToString();
                        lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) - 1).ToString();
                        OverAllTotalPcs();
                        _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];

                        _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("thirteen_pcs" /*column index*/, "breakage");
                        _dataTableItemStatusList.AcceptChanges();
                    btnUpdateData.Visible = false;
                }
                }
                else
                {
                    if (_checkboxthirteen.Checked == false)
                    {
                        lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) + 1).ToString();
                        lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) - 1).ToString();
                        OverAllTotalPcs();
                        _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];

                        _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("thirteen_pcs" /*column index*/, "breakage");
                        _dataTableItemStatusList.AcceptChanges();
                    btnUpdateData.Visible = false;
                }
                }
                if (Convert.ToInt32(lblOkTotalPcsRepeater.Text) >= 0)
                {
                    if (_checkboxthirteen.Checked == true)
                    {
                    if (_totalAllPcs > _totalRecieved)
                    {
                        _checkboxthirteen.Checked = false;
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);

                    }
                    else if (_totalAllPcs == _totalRecieved)
                    {
                        _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];
                        if (_dataTableItemStatusList.Rows[itemCheckboxindex]["thirteen_pcs"].ToString() == "breakage")
                        {
                            if (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) > 0)
                            {
                                lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) + 1).ToString();
                                if (lblBreakageTotalPcsRepeater.Text == "0" || lblBreakageTotalPcsRepeater.Text == "")
                                {
                                }
                                else
                                {
                                    lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) - 1).ToString();
                                }

                                _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("thirteen_pcs" /*column Name*/, "ok");
                                _dataTableItemStatusList.AcceptChanges();
                                OverAllTotalPcs();
                                btnUpdateData.Visible = false;
                            }
                            else
                            { }
                        }
                        else
                        {
                            _checkboxthirteen.Checked = false;
                            ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);
                        }
                    }
                    else
                    {
                        lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) + 1).ToString();
                        _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];
                        if (_dataTableItemStatusList.Rows[itemCheckboxindex]["thirteen_pcs"].ToString() == "breakage")
                        {
                            if (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) > 0)
                            {
                                lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) - 1).ToString();
                            }
                            else { }
                        }
                        else { }
                        _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("thirteen_pcs" /*column Name*/, "ok");
                        _dataTableItemStatusList.AcceptChanges();

                        OverAllTotalPcs();
                        btnUpdateData.Visible = false;
                    }
                    }
                    else
                    {

                    }

                }
                else
                {

                }
           
        }

        protected void chkPcsFourteen_CheckedChanged(object sender, EventArgs e)
        {
            CheckBox _checkboxfourteen = (CheckBox)sender;
            RepeaterItem item = (RepeaterItem)_checkboxfourteen.NamingContainer;
            Int32 itemCheckboxindex = ((RepeaterItem)_checkboxfourteen.NamingContainer).ItemIndex;
            Label lblOkTotalPcsRepeater = (Label)item.FindControl("lblOkTotalPcsRepeater");
            Label lblBreakageTotalPcsRepeater = (Label)item.FindControl("lblBreakageTotalPcsRepeater");
            int _totalAllPcs = Convert.ToInt32(txtTotalOkBreakReject.Text == "" ? "0" : txtTotalOkBreakReject.Text);
            int _totalRecieved = Convert.ToInt32(txtreceived.Text == "" ? "0" : txtreceived.Text);

                if (lblOkTotalPcsRepeater.Text == "")
                {
                    lblOkTotalPcsRepeater.Text = "0";
                }

                if (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) > 0)
                {

                    if (_checkboxfourteen.Checked == false)
                    {
                        lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) + 1).ToString();
                        lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) - 1).ToString();
                        OverAllTotalPcs();
                        _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];

                        _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("fourteen_pcs" /*column index*/, "breakage");
                        _dataTableItemStatusList.AcceptChanges();
                    btnUpdateData.Visible = false;
                }

                }
                else
                {
                    if (_checkboxfourteen.Checked == false)
                    {
                        lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) + 1).ToString();
                        lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) - 1).ToString();
                        OverAllTotalPcs();
                        _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];

                        _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("fourteen_pcs" /*column index*/, "breakage");
                        _dataTableItemStatusList.AcceptChanges();
                    btnUpdateData.Visible = false;
                }
                }
                if (Convert.ToInt32(lblOkTotalPcsRepeater.Text) >= 0)
                {
                    if (_checkboxfourteen.Checked == true)
                    {
                    if (_totalAllPcs > _totalRecieved)
                    {
                        _checkboxfourteen.Checked = false;
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);

                    }
                    else if (_totalAllPcs == _totalRecieved)
                    {
                        _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];
                        if (_dataTableItemStatusList.Rows[itemCheckboxindex]["fourteen_pcs"].ToString() == "breakage")
                        {
                            if (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) > 0)
                            {
                                lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) + 1).ToString();
                                if (lblBreakageTotalPcsRepeater.Text == "0" || lblBreakageTotalPcsRepeater.Text == "")
                                {
                                }
                                else
                                {
                                    lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) - 1).ToString();
                                }

                                _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("fourteen_pcs" /*column Name*/, "ok");
                                _dataTableItemStatusList.AcceptChanges();
                                OverAllTotalPcs();
                                btnUpdateData.Visible = false;
                            }
                            else
                            { }
                        }
                        else
                        {
                            _checkboxfourteen.Checked = false;
                            ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);
                        }
                    }
                    else
                    {
                        lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) + 1).ToString();
                        _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];
                        if (_dataTableItemStatusList.Rows[itemCheckboxindex]["fourteen_pcs"].ToString() == "breakage")
                        {
                            if (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) > 0)
                            {
                                lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) - 1).ToString();
                            }
                            else { }
                        }
                        else { }
                        _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("fourteen_pcs" /*column Name*/, "ok");
                        _dataTableItemStatusList.AcceptChanges();
                        OverAllTotalPcs();
                        btnUpdateData.Visible = false;
                    }
                    }
                    else
                    {

                    }

                }
                else
                {

                }
            
        }

        protected void chkPcsFifteen_CheckedChanged(object sender, EventArgs e)
        {
            CheckBox _checkboxfifteen = (CheckBox)sender;
            RepeaterItem item = (RepeaterItem)_checkboxfifteen.NamingContainer;
            Int32 itemCheckboxindex = ((RepeaterItem)_checkboxfifteen.NamingContainer).ItemIndex;
            Label lblOkTotalPcsRepeater = (Label)item.FindControl("lblOkTotalPcsRepeater");
            Label lblBreakageTotalPcsRepeater = (Label)item.FindControl("lblBreakageTotalPcsRepeater");
            int _totalAllPcs = Convert.ToInt32(txtTotalOkBreakReject.Text == "" ? "0" : txtTotalOkBreakReject.Text);
            int _totalRecieved = Convert.ToInt32(txtreceived.Text == "" ? "0" : txtreceived.Text);

           
                if (lblOkTotalPcsRepeater.Text == "")
                {
                    lblOkTotalPcsRepeater.Text = "0";
                }

                if (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) > 0)
                {

                    if (_checkboxfifteen.Checked == false)
                    {
                        lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) + 1).ToString();
                        lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) - 1).ToString();
                        OverAllTotalPcs();
                        _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];

                        _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("fifteen_pcs" /*column index*/, "breakage");
                        _dataTableItemStatusList.AcceptChanges();
                    btnUpdateData.Visible = false;
                }
                }
                else
                {
                    if (_checkboxfifteen.Checked == false)
                    {
                        lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) + 1).ToString();
                        lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) - 1).ToString();
                        OverAllTotalPcs();
                        _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];

                        _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("fifteen_pcs" /*column index*/, "breakage");
                        _dataTableItemStatusList.AcceptChanges();
                    btnUpdateData.Visible = false;
                }
                }
                if (Convert.ToInt32(lblOkTotalPcsRepeater.Text) >= 0)
                {
                    if (_checkboxfifteen.Checked == true)
                    {
                    if (_totalAllPcs > _totalRecieved)
                    {
                        _checkboxfifteen.Checked = false;
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);

                    }
                    else if (_totalAllPcs == _totalRecieved)
                    {
                        _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];
                        if (_dataTableItemStatusList.Rows[itemCheckboxindex]["fifteen_pcs"].ToString() == "breakage")
                        {
                            if (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) > 0)
                            {
                                lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) + 1).ToString();
                                if (lblBreakageTotalPcsRepeater.Text == "0" || lblBreakageTotalPcsRepeater.Text == "")
                                {
                                }
                                else
                                {
                                    lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) - 1).ToString();
                                }

                                _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("fifteen_pcs" /*column Name*/, "ok");
                                _dataTableItemStatusList.AcceptChanges();
                                OverAllTotalPcs();
                                btnUpdateData.Visible = false;
                            }
                            else
                            { }
                        }
                        else
                        {
                            _checkboxfifteen.Checked = false;
                            ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);
                        }
                    }
                    else
                    {
                        lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) + 1).ToString();
                        _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];
                        if (_dataTableItemStatusList.Rows[itemCheckboxindex]["fifteen_pcs"].ToString() == "breakage")
                        {
                            if (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) > 0)
                            {
                                lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) - 1).ToString();
                            }
                            else { }
                        }
                        else { }
                        _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("fifteen_pcs" /*column Name*/, "ok");
                        _dataTableItemStatusList.AcceptChanges();
                        OverAllTotalPcs();
                        btnUpdateData.Visible = false;
                    }
                    }
                    else
                    {

                    }

                }
                else
                {

                }
           
        }

        protected void chkPcsSixteen_CheckedChanged(object sender, EventArgs e)
        {
            CheckBox _checkboxsixteen = (CheckBox)sender;
            RepeaterItem item = (RepeaterItem)_checkboxsixteen.NamingContainer;
            Int32 itemCheckboxindex = ((RepeaterItem)_checkboxsixteen.NamingContainer).ItemIndex;
            Label lblOkTotalPcsRepeater = (Label)item.FindControl("lblOkTotalPcsRepeater");
            Label lblBreakageTotalPcsRepeater = (Label)item.FindControl("lblBreakageTotalPcsRepeater");
            int _totalAllPcs = Convert.ToInt32(txtTotalOkBreakReject.Text == "" ? "0" : txtTotalOkBreakReject.Text);
            int _totalRecieved = Convert.ToInt32(txtreceived.Text == "" ? "0" : txtreceived.Text);

                if (lblOkTotalPcsRepeater.Text == "")
                {
                    lblOkTotalPcsRepeater.Text = "0";
                }

                if (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) > 0)
                {

                    if (_checkboxsixteen.Checked == false)
                    {
                        lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) + 1).ToString();
                        lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) - 1).ToString();
                        OverAllTotalPcs();
                        _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];

                        _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("sixteen_pcs" /*column index*/, "breakage");
                        _dataTableItemStatusList.AcceptChanges();
                    btnUpdateData.Visible = false;
                }
                }
                else
                {
                    if (_checkboxsixteen.Checked == false)
                    {
                        lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) + 1).ToString();
                        lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) - 1).ToString();
                        OverAllTotalPcs();
                        _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];

                        _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("sixteen_pcs" /*column index*/, "breakage");
                        _dataTableItemStatusList.AcceptChanges();
                    btnUpdateData.Visible = false;
                }
                }
                if (Convert.ToInt32(lblOkTotalPcsRepeater.Text) >= 0)
                {
                    if (_checkboxsixteen.Checked == true)
                    {
                    if (_totalAllPcs > _totalRecieved)
                    {
                        _checkboxsixteen.Checked = false;
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);

                    }
                    else if (_totalAllPcs == _totalRecieved)
                    {
                        _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];
                        if (_dataTableItemStatusList.Rows[itemCheckboxindex]["sixteen_pcs"].ToString() == "breakage")
                        {
                            if (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) > 0)
                            {
                                lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) + 1).ToString();
                                if (lblBreakageTotalPcsRepeater.Text == "0" || lblBreakageTotalPcsRepeater.Text == "")
                                {
                                }
                                else
                                {
                                    lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) - 1).ToString();
                                }

                                _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("sixteen_pcs" /*column Name*/, "ok");
                                _dataTableItemStatusList.AcceptChanges();
                                OverAllTotalPcs();
                                btnUpdateData.Visible = false;
                            }
                            else
                            { }
                        }
                        else
                        {
                            _checkboxsixteen.Checked = false;
                            ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);
                        }
                    }
                    else
                    {
                        lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) + 1).ToString();
                        _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];
                        if (_dataTableItemStatusList.Rows[itemCheckboxindex]["sixteen_pcs"].ToString() == "breakage")
                        {
                            if (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) > 0)
                            {
                                lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) - 1).ToString();
                            }
                            else { }
                        }
                        else { }
                        _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("sixteen_pcs" /*column Name*/, "ok");
                        _dataTableItemStatusList.AcceptChanges();
                        OverAllTotalPcs();
                        btnUpdateData.Visible = false;
                    }
                    }
                    else
                    {

                    }

                }
                else
                {

                }
           
        }

        protected void chkPcsSeventeen_CheckedChanged(object sender, EventArgs e)
        {
            CheckBox _checkboxseventeen = (CheckBox)sender;
            RepeaterItem item = (RepeaterItem)_checkboxseventeen.NamingContainer;
            Int32 itemCheckboxindex = ((RepeaterItem)_checkboxseventeen.NamingContainer).ItemIndex;
            Label lblOkTotalPcsRepeater = (Label)item.FindControl("lblOkTotalPcsRepeater");
            Label lblBreakageTotalPcsRepeater = (Label)item.FindControl("lblBreakageTotalPcsRepeater");

            int _totalAllPcs = Convert.ToInt32(txtTotalOkBreakReject.Text == "" ? "0" : txtTotalOkBreakReject.Text);
            int _totalRecieved = Convert.ToInt32(txtreceived.Text == "" ? "0" : txtreceived.Text);

           
                if (lblOkTotalPcsRepeater.Text == "")
                {
                    lblOkTotalPcsRepeater.Text = "0";
                }

                if (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) > 0)
                {

                    if (_checkboxseventeen.Checked == false)
                    {
                        lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) + 1).ToString();
                        lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) - 1).ToString();
                        OverAllTotalPcs();
                        _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];

                        _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("seventeen_pcs" /*column index*/, "breakage");
                        _dataTableItemStatusList.AcceptChanges();
                    btnUpdateData.Visible = false;
                }
                }
                else
                {
                    if (_checkboxseventeen.Checked == false)
                    {
                        lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) + 1).ToString();
                        lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) - 1).ToString();
                        OverAllTotalPcs();
                        _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];

                        _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("seventeen_pcs" /*column index*/, "breakage");
                        _dataTableItemStatusList.AcceptChanges();
                    btnUpdateData.Visible = false;
                }
                }
                if (Convert.ToInt32(lblOkTotalPcsRepeater.Text) >= 0)
                {
                    if (_checkboxseventeen.Checked == true)
                    {
                    if (_totalAllPcs > _totalRecieved)
                    {
                        _checkboxseventeen.Checked = false;
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);

                    }
                    else if (_totalAllPcs == _totalRecieved)
                    {
                        _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];
                        if (_dataTableItemStatusList.Rows[itemCheckboxindex]["seventeen_pcs"].ToString() == "breakage")
                        {
                            if (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) > 0)
                            {
                                lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) + 1).ToString();
                                if (lblBreakageTotalPcsRepeater.Text == "0" || lblBreakageTotalPcsRepeater.Text == "")
                                {
                                }
                                else
                                {
                                    lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) - 1).ToString();
                                }

                                _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("seventeen_pcs" /*column Name*/, "ok");
                                _dataTableItemStatusList.AcceptChanges();
                                OverAllTotalPcs();
                                btnUpdateData.Visible = false;
                            }
                            else
                            { }
                        }
                        else
                        {
                            _checkboxseventeen.Checked = false;
                            ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);
                        }
                    }
                    else
                    {
                        lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) + 1).ToString();
                        _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];
                        if (_dataTableItemStatusList.Rows[itemCheckboxindex]["seventeen_pcs"].ToString() == "breakage")
                        {
                            if (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) > 0)
                            {
                                lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) - 1).ToString();
                            }
                            else { }
                        }
                        else { }
                        _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("seventeen_pcs" /*column Name*/, "ok");
                        _dataTableItemStatusList.AcceptChanges();
                        OverAllTotalPcs();
                        btnUpdateData.Visible = false;
                    }
                    }
                    else
                    {

                    }

                }
                else
                {

                }
            
        }

        protected void chkPcsEighteen_CheckedChanged(object sender, EventArgs e)
        {
            CheckBox _checkboxeightteen = (CheckBox)sender;
            RepeaterItem item = (RepeaterItem)_checkboxeightteen.NamingContainer;
            Int32 itemCheckboxindex = ((RepeaterItem)_checkboxeightteen.NamingContainer).ItemIndex;
            Label lblOkTotalPcsRepeater = (Label)item.FindControl("lblOkTotalPcsRepeater");
            Label lblBreakageTotalPcsRepeater = (Label)item.FindControl("lblBreakageTotalPcsRepeater");
            int _totalAllPcs = Convert.ToInt32(txtTotalOkBreakReject.Text == "" ? "0" : txtTotalOkBreakReject.Text);
            int _totalRecieved = Convert.ToInt32(txtreceived.Text == "" ? "0" : txtreceived.Text);

                if (lblOkTotalPcsRepeater.Text == "")
                {
                    lblOkTotalPcsRepeater.Text = "0";
                }

                if (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) > 0)
                {

                    if (_checkboxeightteen.Checked == false)
                    {
                        lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) + 1).ToString();
                        lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) - 1).ToString();
                        OverAllTotalPcs();
                        _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];

                        _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("eighteen_pcs" /*column index*/, "breakage");
                        _dataTableItemStatusList.AcceptChanges();
                    btnUpdateData.Visible = false;
                }
                }
                else
                {
                    if (_checkboxeightteen.Checked == false)
                    {
                        lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) + 1).ToString();
                        lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) - 1).ToString();
                        OverAllTotalPcs();
                        _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];

                        _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("eighteen_pcs" /*column index*/, "breakage");
                        _dataTableItemStatusList.AcceptChanges();
                    btnUpdateData.Visible = false;
                }
                }
                if (Convert.ToInt32(lblOkTotalPcsRepeater.Text) >= 0)
                {
                    if (_checkboxeightteen.Checked == true)
                    {
                    if (_totalAllPcs > _totalRecieved)
                    {
                        _checkboxeightteen.Checked = false;
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);

                    }
                    else if (_totalAllPcs == _totalRecieved)
                    {
                        _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];
                        if (_dataTableItemStatusList.Rows[itemCheckboxindex]["eighteen_pcs"].ToString() == "breakage")
                        {
                            if (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) > 0)
                            {
                                lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) + 1).ToString();
                                if (lblBreakageTotalPcsRepeater.Text == "0" || lblBreakageTotalPcsRepeater.Text == "")
                                {
                                }
                                else
                                {
                                    lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) - 1).ToString();
                                }

                                _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("eighteen_pcs" /*column Name*/, "ok");
                                _dataTableItemStatusList.AcceptChanges();
                                OverAllTotalPcs();
                                btnUpdateData.Visible = false;
                            }
                            else
                            { }
                        }
                        else
                        {
                            _checkboxeightteen.Checked = false;
                            ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);
                        }
                    }
                    else
                    {
                        lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) + 1).ToString();
                        _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];
                        if (_dataTableItemStatusList.Rows[itemCheckboxindex]["eighteen_pcs"].ToString() == "breakage")
                        {
                            if (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) > 0)
                            {
                                lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) - 1).ToString();
                            }
                            else { }
                        }
                        else { }
                        _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("eighteen_pcs" /*column Name*/, "ok");
                        _dataTableItemStatusList.AcceptChanges();
                        OverAllTotalPcs();
                        btnUpdateData.Visible = false;
                    }
                    }
                    else
                    {

                    }

                }
                else
                {

                }
           
        }

        protected void chkPcsNineteen_CheckedChanged(object sender, EventArgs e)
        {
            CheckBox _checkboxnineteen = (CheckBox)sender;
            RepeaterItem item = (RepeaterItem)_checkboxnineteen.NamingContainer;
            Int32 itemCheckboxindex = ((RepeaterItem)_checkboxnineteen.NamingContainer).ItemIndex;
            Label lblOkTotalPcsRepeater = (Label)item.FindControl("lblOkTotalPcsRepeater");
            Label lblBreakageTotalPcsRepeater = (Label)item.FindControl("lblBreakageTotalPcsRepeater");
            int _totalAllPcs = Convert.ToInt32(txtTotalOkBreakReject.Text == "" ? "0" : txtTotalOkBreakReject.Text);
            int _totalRecieved = Convert.ToInt32(txtreceived.Text == "" ? "0" : txtreceived.Text);

           
                if (lblOkTotalPcsRepeater.Text == "")
                {
                    lblOkTotalPcsRepeater.Text = "0";
                }

                if (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) > 0)
                {

                    if (_checkboxnineteen.Checked == false)
                    {
                        lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) + 1).ToString();
                        lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) - 1).ToString();
                        OverAllTotalPcs();
                        _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];

                        _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("ninteen_pcs" /*column index*/, "breakage");
                        _dataTableItemStatusList.AcceptChanges();
                    btnUpdateData.Visible = false;
                }
                }
                else
                {
                    if (_checkboxnineteen.Checked == false)
                    {
                        lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) + 1).ToString();
                        lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) - 1).ToString();
                        OverAllTotalPcs();
                        _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];

                        _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("ninteen_pcs" /*column index*/, "breakage");
                        _dataTableItemStatusList.AcceptChanges();
                    btnUpdateData.Visible = false;
                }
                }
                if (Convert.ToInt32(lblOkTotalPcsRepeater.Text) >= 0)
                {
                    if (_checkboxnineteen.Checked == true)
                    {
                    if (_totalAllPcs > _totalRecieved)
                    {
                        _checkboxnineteen.Checked = false;
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);

                    }
                    else if (_totalAllPcs == _totalRecieved)
                    {
                        _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];
                        if (_dataTableItemStatusList.Rows[itemCheckboxindex]["ninteen_pcs"].ToString() == "breakage")
                        {
                            if (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) > 0)
                            {
                                lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) + 1).ToString();
                                if (lblBreakageTotalPcsRepeater.Text == "0" || lblBreakageTotalPcsRepeater.Text == "")
                                {
                                }
                                else
                                {
                                    lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) - 1).ToString();
                                }

                                _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("ninteen_pcs" /*column Name*/, "ok");
                                _dataTableItemStatusList.AcceptChanges();
                                OverAllTotalPcs();
                                btnUpdateData.Visible = false;
                            }
                            else
                            { }
                        }
                        else
                        {
                            _checkboxnineteen.Checked = false;
                            ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);
                        }
                    }
                    else
                    {
                        lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) + 1).ToString();
                        _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];
                        if (_dataTableItemStatusList.Rows[itemCheckboxindex]["ninteen_pcs"].ToString() == "breakage")
                        {
                            if (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) > 0)
                            {
                                lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) - 1).ToString();
                            }
                            else { }
                        }
                        else { }
                        _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("ninteen_pcs" /*column Name*/, "ok");
                        _dataTableItemStatusList.AcceptChanges();
                        OverAllTotalPcs();
                        btnUpdateData.Visible = false;
                    }
                    }
                    else
                    {

                    }

                }
                else
                {

                }
           
        }

        protected void chkPcsTwenty_CheckedChanged(object sender, EventArgs e)
        {
            CheckBox _checkboxtwenty = (CheckBox)sender;
            RepeaterItem item = (RepeaterItem)_checkboxtwenty.NamingContainer;
            Int32 itemCheckboxindex = ((RepeaterItem)_checkboxtwenty.NamingContainer).ItemIndex;
            Label lblOkTotalPcsRepeater = (Label)item.FindControl("lblOkTotalPcsRepeater");
            Label lblBreakageTotalPcsRepeater = (Label)item.FindControl("lblBreakageTotalPcsRepeater");
            int _totalAllPcs = Convert.ToInt32(txtTotalOkBreakReject.Text == "" ? "0" : txtTotalOkBreakReject.Text);
            int _totalRecieved = Convert.ToInt32(txtreceived.Text == "" ? "0" : txtreceived.Text);

           
                if (lblOkTotalPcsRepeater.Text == "")
                {
                    lblOkTotalPcsRepeater.Text = "0";
                }

                if (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) > 0)
                {

                    if (_checkboxtwenty.Checked == false)
                    {
                        lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) + 1).ToString();
                        lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) - 1).ToString();
                        OverAllTotalPcs();
                        _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];

                        _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("twenty_pcs" /*column index*/, "breakage");
                        _dataTableItemStatusList.AcceptChanges();
                    btnUpdateData.Visible = false;
                }
                }
                else
                {
                    if (_checkboxtwenty.Checked == false)
                    {
                        lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) + 1).ToString();
                        lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) - 1).ToString();
                        OverAllTotalPcs();
                        _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];

                        _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("twenty_pcs" /*column index*/, "breakage");
                        _dataTableItemStatusList.AcceptChanges();
                    btnUpdateData.Visible = false;
                }
                }
                if (Convert.ToInt32(lblOkTotalPcsRepeater.Text) >= 0)
                {
                    if (_checkboxtwenty.Checked == true)
                    {
                    if (_totalAllPcs > _totalRecieved)
                    {
                        _checkboxtwenty.Checked = false;
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);

                    }
                    else if (_totalAllPcs == _totalRecieved)
                    {
                        _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];
                        if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twenty_pcs"].ToString() == "breakage")
                        {
                            if (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) > 0)
                            {
                                lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) + 1).ToString();
                                if (lblBreakageTotalPcsRepeater.Text == "0" || lblBreakageTotalPcsRepeater.Text == "")
                                {
                                }
                                else
                                {
                                    lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) - 1).ToString();
                                }

                                _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("twenty_pcs" /*column Name*/, "ok");
                                _dataTableItemStatusList.AcceptChanges();
                                OverAllTotalPcs();
                                btnUpdateData.Visible = false;
                            }
                            else
                            { }
                        }
                        else
                        {
                            _checkboxtwenty.Checked = false;
                            ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);
                        }
                    }
                    else
                    {
                        lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) + 1).ToString();
                        _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];
                        if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twenty_pcs"].ToString() == "breakage")
                        {
                            if (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) > 0)
                            {
                                lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) - 1).ToString();
                            }
                            else { }
                        }
                        else { }
                        _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("twenty_pcs" /*column Name*/, "ok");
                        _dataTableItemStatusList.AcceptChanges();
                        OverAllTotalPcs();
                        btnUpdateData.Visible = false;
                    }
                    }
                    else
                    {

                    }

                }
                else
                {

                }
            
        }

        protected void chkPcsTwentyOne_CheckedChanged(object sender, EventArgs e)
        {
            CheckBox _checkboxtwentyone = (CheckBox)sender;
            RepeaterItem item = (RepeaterItem)_checkboxtwentyone.NamingContainer;
            Int32 itemCheckboxindex = ((RepeaterItem)_checkboxtwentyone.NamingContainer).ItemIndex;
            Label lblOkTotalPcsRepeater = (Label)item.FindControl("lblOkTotalPcsRepeater");
            Label lblBreakageTotalPcsRepeater = (Label)item.FindControl("lblBreakageTotalPcsRepeater");

            int _totalAllPcs = Convert.ToInt32(txtTotalOkBreakReject.Text == "" ? "0" : txtTotalOkBreakReject.Text);
            int _totalRecieved = Convert.ToInt32(txtreceived.Text == "" ? "0" : txtreceived.Text);

           
                if (lblOkTotalPcsRepeater.Text == "")
                {
                    lblOkTotalPcsRepeater.Text = "0";
                }

                if (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) > 0)
                {

                    if (_checkboxtwentyone.Checked == false)
                    {
                        lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) + 1).ToString();
                        lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) - 1).ToString();
                        OverAllTotalPcs();
                        _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];

                        _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("twentyone_pcs" /*column index*/, "breakage");
                        _dataTableItemStatusList.AcceptChanges();
                    btnUpdateData.Visible = false;
                }
                }
                else
                {
                    if (_checkboxtwentyone.Checked == false)
                    {
                        lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) + 1).ToString();
                        lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) - 1).ToString();
                        OverAllTotalPcs();
                        _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];

                        _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("twentyone_pcs" /*column index*/, "breakage");
                        _dataTableItemStatusList.AcceptChanges();
                    btnUpdateData.Visible = false;
                }
                }
                if (Convert.ToInt32(lblOkTotalPcsRepeater.Text) >= 0)
                {
                    if (_checkboxtwentyone.Checked == true)
                    {
                    if (_totalAllPcs > _totalRecieved)
                    {
                        _checkboxtwentyone.Checked = false;
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);

                    }
                    else if (_totalAllPcs == _totalRecieved)
                    {
                        _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];
                        if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twentyone_pcs"].ToString() == "breakage")
                        {
                            if (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) > 0)
                            {
                                lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) + 1).ToString();
                                if (lblBreakageTotalPcsRepeater.Text == "0" || lblBreakageTotalPcsRepeater.Text == "")
                                {
                                }
                                else
                                {
                                    lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) - 1).ToString();
                                }

                                _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("twentyone_pcs" /*column Name*/, "ok");
                                _dataTableItemStatusList.AcceptChanges();
                                OverAllTotalPcs();
                                btnUpdateData.Visible = false;
                            }
                            else
                            { }
                        }
                        else
                        {
                            _checkboxtwentyone.Checked = false;
                            ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);
                        }
                    }
                    else
                    {
                        lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) + 1).ToString();
                        _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];
                        if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twentyone_pcs"].ToString() == "breakage")
                        {
                            if (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) > 0)
                            {
                                lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) - 1).ToString();
                            }
                            else { }
                        }
                        else { }
                        _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("twentyone_pcs" /*column Name*/, "ok");
                        _dataTableItemStatusList.AcceptChanges();
                        OverAllTotalPcs();
                        btnUpdateData.Visible = false;
                    }
                    }
                    else
                    {

                    }

                }
                else
                {

                }
            
        }

        protected void chkPcsTwentyTwo_CheckedChanged(object sender, EventArgs e)
        {
            CheckBox _checkboxtwentytwo = (CheckBox)sender;
            RepeaterItem item = (RepeaterItem)_checkboxtwentytwo.NamingContainer;
            Int32 itemCheckboxindex = ((RepeaterItem)_checkboxtwentytwo.NamingContainer).ItemIndex;
            Label lblOkTotalPcsRepeater = (Label)item.FindControl("lblOkTotalPcsRepeater");
            Label lblBreakageTotalPcsRepeater = (Label)item.FindControl("lblBreakageTotalPcsRepeater");
            int _totalAllPcs = Convert.ToInt32(txtTotalOkBreakReject.Text == "" ? "0" : txtTotalOkBreakReject.Text);
            int _totalRecieved = Convert.ToInt32(txtreceived.Text == "" ? "0" : txtreceived.Text);

           
                if (lblOkTotalPcsRepeater.Text == "")
                {
                    lblOkTotalPcsRepeater.Text = "0";
                }

                if (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) > 0)
                {
                    if (_checkboxtwentytwo.Checked == false)
                    {
                        lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) + 1).ToString();
                        lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) - 1).ToString();
                        OverAllTotalPcs();
                        _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];

                        _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("twentytwo_pcs" /*column index*/, "breakage");
                        _dataTableItemStatusList.AcceptChanges();
                    btnUpdateData.Visible = false;
                }
                }
                else
                {
                    if (_checkboxtwentytwo.Checked == false)
                    {
                        lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) + 1).ToString();
                        lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) - 1).ToString();
                        OverAllTotalPcs();
                        _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];

                        _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("twentytwo_pcs" /*column index*/, "breakage");
                        _dataTableItemStatusList.AcceptChanges();
                    btnUpdateData.Visible = false;
                }
                }
                if (Convert.ToInt32(lblOkTotalPcsRepeater.Text) >= 0)
                {
                    if (_checkboxtwentytwo.Checked == true)
                    {
                    if (_totalAllPcs > _totalRecieved)
                    {
                        _checkboxtwentytwo.Checked = false;
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);

                    }
                    else if (_totalAllPcs == _totalRecieved)
                    {
                        _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];
                        if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twentytwo_pcs"].ToString() == "breakage")
                        {
                            if (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) > 0)
                            {
                                lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) + 1).ToString();
                                if (lblBreakageTotalPcsRepeater.Text == "0" || lblBreakageTotalPcsRepeater.Text == "")
                                {
                                }
                                else
                                {
                                    lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) - 1).ToString();
                                }

                                _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("twentytwo_pcs" /*column Name*/, "ok");
                                _dataTableItemStatusList.AcceptChanges();
                                OverAllTotalPcs();
                                btnUpdateData.Visible = false;
                            }
                            else
                            { }
                        }
                        else
                        {
                            _checkboxtwentytwo.Checked = false;
                            ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);
                        }
                    }
                    else
                    {
                        lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) + 1).ToString();
                        _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];
                        if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twentytwo_pcs"].ToString() == "breakage")
                        {
                            if (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) > 0)
                            {
                                lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) - 1).ToString();
                            }
                            else { }
                        }
                        else { }
                        _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("twentytwo_pcs" /*column Name*/, "ok");
                        _dataTableItemStatusList.AcceptChanges();

                        OverAllTotalPcs();
                        btnUpdateData.Visible = false;
                    }
                    }
                    else
                    {

                    }

                }
                else
                {

                }
           
        }

        protected void chkPcsTwentyThree_CheckedChanged(object sender, EventArgs e)
        {
            CheckBox _checkboxtwentythree = (CheckBox)sender;
            RepeaterItem item = (RepeaterItem)_checkboxtwentythree.NamingContainer;
            Int32 itemCheckboxindex = ((RepeaterItem)_checkboxtwentythree.NamingContainer).ItemIndex;
            Label lblOkTotalPcsRepeater = (Label)item.FindControl("lblOkTotalPcsRepeater");
            Label lblBreakageTotalPcsRepeater = (Label)item.FindControl("lblBreakageTotalPcsRepeater");

            int _totalAllPcs = Convert.ToInt32(txtTotalOkBreakReject.Text == "" ? "0" : txtTotalOkBreakReject.Text);
            int _totalRecieved = Convert.ToInt32(txtreceived.Text == "" ? "0" : txtreceived.Text);

           
                if (lblOkTotalPcsRepeater.Text == "")
                {
                    lblOkTotalPcsRepeater.Text = "0";
                }

                if (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) > 0)
                {

                    if (_checkboxtwentythree.Checked == false)
                    {
                        lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) + 1).ToString();
                        lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) - 1).ToString();
                        OverAllTotalPcs();
                        _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];

                        _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("twentythree_pcs" /*column index*/, "breakage");
                        _dataTableItemStatusList.AcceptChanges();
                    btnUpdateData.Visible = false;
                }
                }
                else
                {
                    if (_checkboxtwentythree.Checked == false)
                    {
                        lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) + 1).ToString();
                        lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) - 1).ToString();
                        OverAllTotalPcs();
                        _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];

                        _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("twentythree_pcs" /*column index*/, "breakage");
                        _dataTableItemStatusList.AcceptChanges();
                    btnUpdateData.Visible = false;
                }
                }
                if (Convert.ToInt32(lblOkTotalPcsRepeater.Text) >= 0)
                {
                    if (_checkboxtwentythree.Checked == true)
                    {
                    if (_totalAllPcs > _totalRecieved)
                    {
                        _checkboxtwentythree.Checked = false;
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);

                    }
                    else if (_totalAllPcs == _totalRecieved)
                    {
                        _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];
                        if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twentythree_pcs"].ToString() == "breakage")
                        {
                            if (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) > 0)
                            {
                                lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) + 1).ToString();
                                if (lblBreakageTotalPcsRepeater.Text == "0" || lblBreakageTotalPcsRepeater.Text == "")
                                {
                                }
                                else
                                {
                                    lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) - 1).ToString();
                                }

                                _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("twentythree_pcs" /*column Name*/, "ok");
                                _dataTableItemStatusList.AcceptChanges();
                                OverAllTotalPcs();
                                btnUpdateData.Visible = false;
                            }
                            else
                            { }
                        }
                        else
                        {
                            _checkboxtwentythree.Checked = false;
                            ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);
                        }
                    }
                    else
                    {
                        lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) + 1).ToString();
                        _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];
                        if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twentythree_pcs"].ToString() == "breakage")
                        {
                            if (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) > 0)
                            {
                                lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) - 1).ToString();
                            }
                            else { }
                        }
                        else { }
                        _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("twentythree_pcs" /*column Name*/, "ok");
                        _dataTableItemStatusList.AcceptChanges();
                        OverAllTotalPcs();
                        btnUpdateData.Visible = false;
                    }
                    }
                    else
                    {

                    }

                }
                else
                {

                }
            
        }

        protected void chkPcsTwentyFour_CheckedChanged(object sender, EventArgs e)
        {
            CheckBox _checkboxtwentyfour = (CheckBox)sender;
            RepeaterItem item = (RepeaterItem)_checkboxtwentyfour.NamingContainer;
            Int32 itemCheckboxindex = ((RepeaterItem)_checkboxtwentyfour.NamingContainer).ItemIndex;
            Label lblOkTotalPcsRepeater = (Label)item.FindControl("lblOkTotalPcsRepeater");
            Label lblBreakageTotalPcsRepeater = (Label)item.FindControl("lblBreakageTotalPcsRepeater");
            int _totalAllPcs = Convert.ToInt32(txtTotalOkBreakReject.Text == "" ? "0" : txtTotalOkBreakReject.Text);
            int _totalRecieved = Convert.ToInt32(txtreceived.Text == "" ? "0" : txtreceived.Text);

                if (lblOkTotalPcsRepeater.Text == "")
                {
                    lblOkTotalPcsRepeater.Text = "0";
                }

                if (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) > 0)
                {
                    if (_checkboxtwentyfour.Checked == false)
                    {
                        lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) + 1).ToString();
                        lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) - 1).ToString();
                        OverAllTotalPcs();
                        _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];

                        _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("twentyfour_pcs" /*column index*/, "breakage");
                        _dataTableItemStatusList.AcceptChanges();
                    btnUpdateData.Visible = false;
                }
                }
                else
                {
                    if (_checkboxtwentyfour.Checked == false)
                    {
                        lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) + 1).ToString();
                        lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) - 1).ToString();
                        OverAllTotalPcs();
                        _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];

                        _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("twentyfour_pcs" /*column index*/, "breakage");
                        _dataTableItemStatusList.AcceptChanges();
                    btnUpdateData.Visible = false;
                }
                }
                if (Convert.ToInt32(lblOkTotalPcsRepeater.Text) >= 0)
                {
                    if (_checkboxtwentyfour.Checked == true)
                    {
                    if (_totalAllPcs > _totalRecieved)
                    {
                        _checkboxtwentyfour.Checked = false;
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);

                    }
                    else if (_totalAllPcs == _totalRecieved)
                    {
                        _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];
                        if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twentyfour_pcs"].ToString() == "breakage")
                        {
                            if (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) > 0)
                            {
                                lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) + 1).ToString();
                                if (lblBreakageTotalPcsRepeater.Text == "0" || lblBreakageTotalPcsRepeater.Text == "")
                                {
                                }
                                else
                                {
                                    lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) - 1).ToString();
                                }

                                _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("twentyfour_pcs" /*column Name*/, "ok");
                                _dataTableItemStatusList.AcceptChanges();
                                OverAllTotalPcs();
                                btnUpdateData.Visible = false;
                            }
                            else
                            { }
                        }
                        else
                        {
                            _checkboxtwentyfour.Checked = false;
                            ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);
                        }
                    }
                    else
                    {
                        lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) + 1).ToString();
                        _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];
                        if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twentyfour_pcs"].ToString() == "breakage")
                        {
                            if (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) > 0)
                            {
                                lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) - 1).ToString();
                            }
                            else { }
                        }
                        else { }
                        _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("twentyfour_pcs" /*column Name*/, "ok");
                        _dataTableItemStatusList.AcceptChanges();
                        OverAllTotalPcs();
                        btnUpdateData.Visible = false;
                    }
                    }
                    else
                    {

                    }

                }
                else
                {

                }
            
        }

        protected void chkPcsTwentyFive_CheckedChanged(object sender, EventArgs e)
        {
            CheckBox _checkboxtwentyfive = (CheckBox)sender;
            RepeaterItem item = (RepeaterItem)_checkboxtwentyfive.NamingContainer;
            Int32 itemCheckboxindex = ((RepeaterItem)_checkboxtwentyfive.NamingContainer).ItemIndex;
            Label lblOkTotalPcsRepeater = (Label)item.FindControl("lblOkTotalPcsRepeater");
            Label lblBreakageTotalPcsRepeater = (Label)item.FindControl("lblBreakageTotalPcsRepeater");
            int _totalAllPcs = Convert.ToInt32(txtTotalOkBreakReject.Text == "" ? "0" : txtTotalOkBreakReject.Text);
            int _totalRecieved = Convert.ToInt32(txtreceived.Text == "" ? "0" : txtreceived.Text);

          
                if (lblOkTotalPcsRepeater.Text == "")
                {
                    lblOkTotalPcsRepeater.Text = "0";
                }

                if (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) > 0)
                {

                    if (_checkboxtwentyfive.Checked == false)
                    {
                        lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) + 1).ToString();
                        lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) - 1).ToString();
                        OverAllTotalPcs();
                        _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];

                        _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("twentyfive_pcs" /*column index*/, "breakage");
                        _dataTableItemStatusList.AcceptChanges();
                    btnUpdateData.Visible = false;
                }

                }
                else
                {
                    if (_checkboxtwentyfive.Checked == false)
                    {
                        lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) + 1).ToString();
                        lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) - 1).ToString();
                        OverAllTotalPcs();
                        _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];

                        _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("twentyfive_pcs" /*column index*/, "breakage");
                        _dataTableItemStatusList.AcceptChanges();
                    btnUpdateData.Visible = false;
                }
                }
                if (Convert.ToInt32(lblOkTotalPcsRepeater.Text) >= 0)
                {
                    if (_checkboxtwentyfive.Checked == true)
                    {
                    if (_totalAllPcs > _totalRecieved)
                    {
                        _checkboxtwentyfive.Checked = false;
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);

                    }
                    else if (_totalAllPcs == _totalRecieved)
                    {
                        _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];
                        if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twentyfive_pcs"].ToString() == "breakage")
                        {
                            if (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) > 0)
                            {
                                lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) + 1).ToString();
                                if (lblBreakageTotalPcsRepeater.Text == "0" || lblBreakageTotalPcsRepeater.Text == "")
                                {
                                }
                                else
                                {
                                    lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) - 1).ToString();
                                }

                                _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("twentyfive_pcs" /*column Name*/, "ok");
                                _dataTableItemStatusList.AcceptChanges();
                                OverAllTotalPcs();
                                btnUpdateData.Visible = false;
                            }
                            else
                            { }
                        }
                        else
                        {
                            _checkboxtwentyfive.Checked = false;
                            ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);
                        }
                    }
                    else
                    {
                        lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) + 1).ToString();
                        _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];
                        if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twentyfive_pcs"].ToString() == "breakage")
                        {
                            if (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) > 0)
                            {
                                lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) - 1).ToString();
                            }
                            else { }
                        }
                        else { }
                        _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("twentyfive_pcs" /*column Name*/, "ok");
                        _dataTableItemStatusList.AcceptChanges();
                        OverAllTotalPcs();
                        btnUpdateData.Visible = false;
                    }
                    }
                    else
                    {
                    }

                }
                else
                {

                }
            
        }

        protected void chkPcsTwentySix_CheckedChanged(object sender, EventArgs e)
        {
            CheckBox _checkboxtwentysix = (CheckBox)sender;
            RepeaterItem item = (RepeaterItem)_checkboxtwentysix.NamingContainer;
            Int32 itemCheckboxindex = ((RepeaterItem)_checkboxtwentysix.NamingContainer).ItemIndex;
            Label lblOkTotalPcsRepeater = (Label)item.FindControl("lblOkTotalPcsRepeater");
            Label lblBreakageTotalPcsRepeater = (Label)item.FindControl("lblBreakageTotalPcsRepeater");
            int _totalAllPcs = Convert.ToInt32(txtTotalOkBreakReject.Text == "" ? "0" : txtTotalOkBreakReject.Text);
            int _totalRecieved = Convert.ToInt32(txtreceived.Text == "" ? "0" : txtreceived.Text);

          
                if (lblOkTotalPcsRepeater.Text == "")
                {
                    lblOkTotalPcsRepeater.Text = "0";
                }

                if (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) > 0)
                {

                    if (_checkboxtwentysix.Checked == false)
                    {
                        lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) + 1).ToString();
                        lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) - 1).ToString();
                        OverAllTotalPcs();
                        _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];

                        _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("twentysix_pcs" /*column index*/, "breakage");
                        _dataTableItemStatusList.AcceptChanges();
                    btnUpdateData.Visible = false;
                }
                }
                else
                {
                    if (_checkboxtwentysix.Checked == false)
                    {
                        lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) + 1).ToString();
                        lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) - 1).ToString();
                        OverAllTotalPcs();
                        _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];

                        _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("twentysix_pcs" /*column index*/, "breakage");
                        _dataTableItemStatusList.AcceptChanges();
                    btnUpdateData.Visible = false;
                }
                }
                if (Convert.ToInt32(lblOkTotalPcsRepeater.Text) >= 0)
                {
                    if (_checkboxtwentysix.Checked == true)
                    {
                    if (_totalAllPcs > _totalRecieved)
                    {
                        _checkboxtwentysix.Checked = false;
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);

                    }
                    else if (_totalAllPcs == _totalRecieved)
                    {
                        _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];
                        if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twentysix_pcs"].ToString() == "breakage")
                        {
                            if (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) > 0)
                            {
                                lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) + 1).ToString();
                                if (lblBreakageTotalPcsRepeater.Text == "0" || lblBreakageTotalPcsRepeater.Text == "")
                                {
                                }
                                else
                                {
                                    lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) - 1).ToString();
                                }

                                _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("twentysix_pcs" /*column Name*/, "ok");
                                _dataTableItemStatusList.AcceptChanges();
                                OverAllTotalPcs();
                                btnUpdateData.Visible = false;
                            }
                            else
                            { }
                        }
                        else
                        {
                            _checkboxtwentysix.Checked = false;
                            ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);
                        }
                    }
                    else
                    {
                        lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) + 1).ToString();
                        _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];
                        if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twentysix_pcs"].ToString() == "breakage")
                        {
                            if (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) > 0)
                            {
                                lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) - 1).ToString();
                            }
                            else { }
                        }
                        else { }
                        _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("twentysix_pcs" /*column Name*/, "ok");
                        _dataTableItemStatusList.AcceptChanges();
                        OverAllTotalPcs();
                        btnUpdateData.Visible = false;
                    }
                    }
                    else
                    {

                    }

                }
                else
                {

                }
           
        }

        protected void chkPcsTwentySeven_CheckedChanged(object sender, EventArgs e)
        {
            CheckBox _checkboxtwentyseven = (CheckBox)sender;
            RepeaterItem item = (RepeaterItem)_checkboxtwentyseven.NamingContainer;
            Int32 itemCheckboxindex = ((RepeaterItem)_checkboxtwentyseven.NamingContainer).ItemIndex;
            Label lblOkTotalPcsRepeater = (Label)item.FindControl("lblOkTotalPcsRepeater");
            Label lblBreakageTotalPcsRepeater = (Label)item.FindControl("lblBreakageTotalPcsRepeater");
            int _totalAllPcs = Convert.ToInt32(txtTotalOkBreakReject.Text == "" ? "0" : txtTotalOkBreakReject.Text);
            int _totalRecieved = Convert.ToInt32(txtreceived.Text == "" ? "0" : txtreceived.Text);

           
                if (lblOkTotalPcsRepeater.Text == "")
                {
                    lblOkTotalPcsRepeater.Text = "0";
                }

                if (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) > 0)
                {

                    if (_checkboxtwentyseven.Checked == false)
                    {
                        lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) + 1).ToString();
                        lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) - 1).ToString();
                        OverAllTotalPcs();
                        _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];

                        _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("twentyseven_pcs" /*column index*/, "breakage");
                        _dataTableItemStatusList.AcceptChanges();
                    btnUpdateData.Visible = false;
                }
                }
                else
                {
                    if (_checkboxtwentyseven.Checked == false)
                    {
                        lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) + 1).ToString();
                        lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) - 1).ToString();
                        OverAllTotalPcs();
                        _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];

                        _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("twentyseven_pcs" /*column index*/, "breakage");
                        _dataTableItemStatusList.AcceptChanges();
                    btnUpdateData.Visible = false;
                }
                }
                if (Convert.ToInt32(lblOkTotalPcsRepeater.Text) >= 0)
                {
                    if (_checkboxtwentyseven.Checked == true)
                    {
                    if (_totalAllPcs > _totalRecieved)
                    {
                        _checkboxtwentyseven.Checked = false;
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);

                    }
                    else if (_totalAllPcs == _totalRecieved)
                    {
                        _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];
                        if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twentyseven_pcs"].ToString() == "breakage")
                        {
                            if (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) > 0)
                            {
                                lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) + 1).ToString();
                                if (lblBreakageTotalPcsRepeater.Text == "0" || lblBreakageTotalPcsRepeater.Text == "")
                                {
                                }
                                else
                                {
                                    lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) - 1).ToString();
                                }

                                _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("twentyseven_pcs" /*column Name*/, "ok");
                                _dataTableItemStatusList.AcceptChanges();
                                OverAllTotalPcs();
                                btnUpdateData.Visible = false;
                            }
                            else
                            { }
                        }
                        else
                        {
                            _checkboxtwentyseven.Checked = false;
                            ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);
                        }
                    }
                    else
                    {
                        lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) + 1).ToString();
                        _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];
                        if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twentyseven_pcs"].ToString() == "breakage")
                        {
                            if (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) > 0)
                            {
                                lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) - 1).ToString();
                            }
                            else { }
                        }
                        else { }
                        _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("twentyseven_pcs" /*column Name*/, "ok");
                        _dataTableItemStatusList.AcceptChanges();
                        OverAllTotalPcs();
                        btnUpdateData.Visible = false;
                    }
                    }
                    else
                    {

                    }

                }
                else
                {

                }
            
        }

        protected void chkPcsTwentyEight_CheckedChanged(object sender, EventArgs e)
        {
            CheckBox _checkboxtwentyeight = (CheckBox)sender;
            RepeaterItem item = (RepeaterItem)_checkboxtwentyeight.NamingContainer;
            Int32 itemCheckboxindex = ((RepeaterItem)_checkboxtwentyeight.NamingContainer).ItemIndex;
            Label lblOkTotalPcsRepeater = (Label)item.FindControl("lblOkTotalPcsRepeater");
            Label lblBreakageTotalPcsRepeater = (Label)item.FindControl("lblBreakageTotalPcsRepeater");
            int _totalAllPcs = Convert.ToInt32(txtTotalOkBreakReject.Text == "" ? "0" : txtTotalOkBreakReject.Text);
            int _totalRecieved = Convert.ToInt32(txtreceived.Text == "" ? "0" : txtreceived.Text);

           
                if (lblOkTotalPcsRepeater.Text == "")
                {
                    lblOkTotalPcsRepeater.Text = "0";
                }

                if (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) > 0)
                {

                    if (_checkboxtwentyeight.Checked == false)
                    {
                        lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) + 1).ToString();
                        lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) - 1).ToString();
                        OverAllTotalPcs();
                        _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];

                        _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("twentyeight_pcs" /*column index*/, "breakage");
                        _dataTableItemStatusList.AcceptChanges();
                    btnUpdateData.Visible = false;
                }
                }
                else
                {
                    if (_checkboxtwentyeight.Checked == false)
                    {
                        lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) + 1).ToString();
                        lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) - 1).ToString();
                        OverAllTotalPcs();
                        _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];

                        _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("twentyeight_pcs" /*column index*/, "breakage");
                        _dataTableItemStatusList.AcceptChanges();
                    btnUpdateData.Visible = false;
                }
                }
                if (Convert.ToInt32(lblOkTotalPcsRepeater.Text) >= 0)
                {
                    if (_checkboxtwentyeight.Checked == true)
                    {
                    if (_totalAllPcs > _totalRecieved)
                    {
                        _checkboxtwentyeight.Checked = false;
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);

                    }
                    else if (_totalAllPcs == _totalRecieved)
                    {
                        _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];
                        if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twentyeight_pcs"].ToString() == "breakage")
                        {
                            if (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) > 0)
                            {
                                lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) + 1).ToString();
                                if (lblBreakageTotalPcsRepeater.Text == "0" || lblBreakageTotalPcsRepeater.Text == "")
                                {
                                }
                                else
                                {
                                    lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) - 1).ToString();
                                }

                                _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("twentyeight_pcs" /*column Name*/, "ok");
                                _dataTableItemStatusList.AcceptChanges();
                                OverAllTotalPcs();
                                btnUpdateData.Visible = false;
                            }
                            else
                            { }
                        }
                        else
                        {
                            _checkboxtwentyeight.Checked = false;
                            ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);
                        }
                    }
                    else
                    {
                        lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) + 1).ToString();
                        _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];
                        if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twentyeight_pcs"].ToString() == "breakage")
                        {
                            if (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) > 0)
                            {
                                lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) - 1).ToString();
                            }
                            else { }
                        }
                        else { }
                        _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("twentyeight_pcs" /*column Name*/, "ok");
                        _dataTableItemStatusList.AcceptChanges();

                        OverAllTotalPcs();
                        btnUpdateData.Visible = false;
                    }
                    }
                    else
                    {

                    }

                }
                else
                {

                }
            
        }

        protected void chkPcsTwentyNine_CheckedChanged(object sender, EventArgs e)
        {
            CheckBox _checkboxtwentynine = (CheckBox)sender;
            RepeaterItem item = (RepeaterItem)_checkboxtwentynine.NamingContainer;
            Int32 itemCheckboxindex = ((RepeaterItem)_checkboxtwentynine.NamingContainer).ItemIndex;
            Label lblOkTotalPcsRepeater = (Label)item.FindControl("lblOkTotalPcsRepeater");
            Label lblBreakageTotalPcsRepeater = (Label)item.FindControl("lblBreakageTotalPcsRepeater");
            int _totalAllPcs = Convert.ToInt32(txtTotalOkBreakReject.Text == "" ? "0" : txtTotalOkBreakReject.Text);
            int _totalRecieved = Convert.ToInt32(txtreceived.Text == "" ? "0" : txtreceived.Text);

           
                if (lblOkTotalPcsRepeater.Text == "")
                {
                    lblOkTotalPcsRepeater.Text = "0";
                }

                if (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) > 0)
                {

                    if (_checkboxtwentynine.Checked == false)
                    {
                        lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) + 1).ToString();
                        lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) - 1).ToString();
                        OverAllTotalPcs();
                        _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];

                        _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("twentynine_pcs" /*column index*/, "breakage");
                        _dataTableItemStatusList.AcceptChanges();
                    btnUpdateData.Visible = false;
                }
                }
                else
                {
                    if (_checkboxtwentynine.Checked == false)
                    {
                        lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) + 1).ToString();
                        lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) - 1).ToString();
                        OverAllTotalPcs();
                        _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];

                        _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("twentynine_pcs" /*column index*/, "breakage");
                        _dataTableItemStatusList.AcceptChanges();
                    btnUpdateData.Visible = false;
                }
                }
                if (Convert.ToInt32(lblOkTotalPcsRepeater.Text) >= 0)
                {
                    if (_checkboxtwentynine.Checked == true)
                    {
                    if (_totalAllPcs > _totalRecieved)
                    {
                        _checkboxtwentynine.Checked = false;
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);

                    }
                    else if (_totalAllPcs == _totalRecieved)
                    {
                        _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];
                        if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twentynine_pcs"].ToString() == "breakage")
                        {
                            if (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) > 0)
                            {
                                lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) + 1).ToString();
                                if (lblBreakageTotalPcsRepeater.Text == "0" || lblBreakageTotalPcsRepeater.Text == "")
                                {
                                }
                                else
                                {
                                    lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) - 1).ToString();
                                }

                                _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("twentynine_pcs" /*column Name*/, "ok");
                                _dataTableItemStatusList.AcceptChanges();
                                OverAllTotalPcs();
                                btnUpdateData.Visible = false;
                            }
                            else
                            { }
                        }
                        else
                        {
                            _checkboxtwentynine.Checked = false;
                            ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);
                        }
                    }
                    else
                    {
                        lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) + 1).ToString();
                        _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];
                        if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twentynine_pcs"].ToString() == "breakage")
                        {
                            if (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) > 0)
                            {
                                lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) - 1).ToString();
                            }
                            else { }
                        }
                        else { }
                        _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("twentynine_pcs" /*column Name*/, "ok");
                        _dataTableItemStatusList.AcceptChanges();

                        OverAllTotalPcs();
                        btnUpdateData.Visible = false;
                    }
                    }
                    else
                    {

                    }

                }
                else
                {

                }
            
        }

        protected void chkPcsThirty_CheckedChanged(object sender, EventArgs e)
        {
            CheckBox _checkboxthirty = (CheckBox)sender;
            RepeaterItem item = (RepeaterItem)_checkboxthirty.NamingContainer;
            Int32 itemCheckboxindex = ((RepeaterItem)_checkboxthirty.NamingContainer).ItemIndex;
            Label lblOkTotalPcsRepeater = (Label)item.FindControl("lblOkTotalPcsRepeater");
            Label lblBreakageTotalPcsRepeater = (Label)item.FindControl("lblBreakageTotalPcsRepeater");
            int _totalAllPcs = Convert.ToInt32(txtTotalOkBreakReject.Text == "" ? "0" : txtTotalOkBreakReject.Text);
            int _totalRecieved = Convert.ToInt32(txtreceived.Text == "" ? "0" : txtreceived.Text);

                if (lblOkTotalPcsRepeater.Text == "")
                {
                    lblOkTotalPcsRepeater.Text = "0";
                }

                if (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) > 0)
                {

                    if (_checkboxthirty.Checked == false)
                    {
                        lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) + 1).ToString();
                        lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) - 1).ToString();
                        OverAllTotalPcs();
                        _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];

                        _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("thirty_pcs" /*column index*/, "breakage");
                        _dataTableItemStatusList.AcceptChanges();
                    btnUpdateData.Visible = false;
                }

                }
                else
                {
                    if (_checkboxthirty.Checked == false)
                    {
                        lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) + 1).ToString();
                        lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) - 1).ToString();
                        OverAllTotalPcs();
                        _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];

                        _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("thirty_pcs" /*column index*/, "breakage");
                        _dataTableItemStatusList.AcceptChanges();
                    btnUpdateData.Visible = false;
                }
                }
                if (Convert.ToInt32(lblOkTotalPcsRepeater.Text) >= 0)
                {
                    if (_checkboxthirty.Checked == true)
                    {
                    if (_totalAllPcs > _totalRecieved)
                    {
                        _checkboxthirty.Checked = false;
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);

                    }
                    else if (_totalAllPcs == _totalRecieved)
                    {
                        _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];
                        if (_dataTableItemStatusList.Rows[itemCheckboxindex]["thirty_pcs"].ToString() == "breakage")
                        {
                            if (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) > 0)
                            {
                                lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) + 1).ToString();
                                if (lblBreakageTotalPcsRepeater.Text == "0" || lblBreakageTotalPcsRepeater.Text == "")
                                {
                                }
                                else
                                {
                                    lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) - 1).ToString();
                                }

                                _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("thirty_pcs" /*column Name*/, "ok");
                                _dataTableItemStatusList.AcceptChanges();
                                OverAllTotalPcs();
                                btnUpdateData.Visible = false;
                            }
                            else
                            { }
                        }
                        else
                        {
                            _checkboxthirty.Checked = false;
                            ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);
                        }
                    }
                    else
                    {
                        lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) + 1).ToString();
                        _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];
                        if (_dataTableItemStatusList.Rows[itemCheckboxindex]["thirty_pcs"].ToString() == "breakage")
                        {
                            if (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) > 0)
                            {
                                lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) - 1).ToString();
                            }
                            else { }
                        }
                        else { }
                        _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("thirty_pcs" /*column Name*/, "ok");
                        _dataTableItemStatusList.AcceptChanges();
                        OverAllTotalPcs();
                        btnUpdateData.Visible = false;
                    }
                    }
                    else
                    {

                    }

                }
                else
                {

                }
           
        }

        #endregion



        #region Items Pcs Status Repeater
        protected void rptrItemPcsStatusReport_ItemCommand(object source, RepeaterCommandEventArgs e)
        {
            string commandname = e.CommandName;
            string id = e.CommandArgument.ToString();


            Int32 ID = Convert.ToInt32(id);
            switch (commandname)
            {
                case "active":
                    try
                    {
                        //  updateStatus(id);
                    }
                    catch (Exception ex)
                    {
                        ex.Message.ToString();
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showException();", true);
                    }
                    break;
                case "update":
                    try
                    {
                        UpdateItemStatusOkBreakage(id);

                    }
                    catch (Exception ex)
                    {
                        ex.Message.ToString();
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showException();", true);
                    }
                    break;
                case "selectall":
                    try
                    {


                    }

                    catch (Exception ex)
                    {
                        ex.Message.ToString();
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showException();", true);
                    }
                    break;
                case "unselect":
                    try
                    {



                    }

                    catch (Exception ex)
                    {
                        ex.Message.ToString();
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showException();", true);
                    }
                    break;
                case "delete":
                    try
                    {
                        // DeleteArticle(ID);

                    }
                    catch (Exception ex)
                    {
                        ex.Message.ToString();
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showException();", true);
                    }
                    break;

            }
        }

        protected void lnkCheckHour_Click(object sender, EventArgs e)
        {
            LinkButton lnkBtnHourName = (LinkButton)sender;
            RepeaterItem item = (RepeaterItem)lnkBtnHourName.NamingContainer;
            Int32 itemindex = ((RepeaterItem)lnkBtnHourName.NamingContainer).ItemIndex;

            #region Control Find in Repeater Like (DropDown)
            DropDownList ddlPcsOne = rptrItemPcsStatusReport.Items[itemindex].FindControl("ddlPcsOne") as DropDownList;
            DropDownList ddlPcsTwo = rptrItemPcsStatusReport.Items[itemindex].FindControl("ddlPcsTwo") as DropDownList;
            DropDownList ddlPcsThree = rptrItemPcsStatusReport.Items[itemindex].FindControl("ddlPcsThree") as DropDownList;
            DropDownList ddlPcsFour = rptrItemPcsStatusReport.Items[itemindex].FindControl("ddlPcsFour") as DropDownList;
            DropDownList ddlPcsFive = rptrItemPcsStatusReport.Items[itemindex].FindControl("ddlPcsFive") as DropDownList;

            DropDownList ddlPcsSix = rptrItemPcsStatusReport.Items[itemindex].FindControl("ddlPcsSix") as DropDownList;
            DropDownList ddlPcsSeven = rptrItemPcsStatusReport.Items[itemindex].FindControl("ddlPcsSeven") as DropDownList;
            DropDownList ddlPcsEight = rptrItemPcsStatusReport.Items[itemindex].FindControl("ddlPcsEight") as DropDownList;
            DropDownList ddlPcsNine = rptrItemPcsStatusReport.Items[itemindex].FindControl("ddlPcsNine") as DropDownList;
            DropDownList ddlPcsTen = rptrItemPcsStatusReport.Items[itemindex].FindControl("ddlPcsTen") as DropDownList;

            DropDownList ddlPcsEleven = rptrItemPcsStatusReport.Items[itemindex].FindControl("ddlPcsEleven") as DropDownList;
            DropDownList ddlPcsTwelve = rptrItemPcsStatusReport.Items[itemindex].FindControl("ddlPcsTwelve") as DropDownList;
            DropDownList ddlPcsThirteen = rptrItemPcsStatusReport.Items[itemindex].FindControl("ddlPcsThirteen") as DropDownList;
            DropDownList ddlPcsfourteen = rptrItemPcsStatusReport.Items[itemindex].FindControl("ddlPcsfourteen") as DropDownList;
            DropDownList ddlPcsfiften = rptrItemPcsStatusReport.Items[itemindex].FindControl("ddlPcsfiften") as DropDownList;

            DropDownList ddlPcsSixteen = rptrItemPcsStatusReport.Items[itemindex].FindControl("ddlPcsSixteen") as DropDownList;
            DropDownList ddlPcsSeventeen = rptrItemPcsStatusReport.Items[itemindex].FindControl("ddlPcsSeventeen") as DropDownList;
            DropDownList ddlPcsEighteen = rptrItemPcsStatusReport.Items[itemindex].FindControl("ddlPcsEighteen") as DropDownList;
            DropDownList ddlPcsNineteen = rptrItemPcsStatusReport.Items[itemindex].FindControl("ddlPcsNineteen") as DropDownList;
            DropDownList ddlPcsTwenty = rptrItemPcsStatusReport.Items[itemindex].FindControl("ddlPcsTwenty") as DropDownList;

            DropDownList ddlPcsTwentyOne = rptrItemPcsStatusReport.Items[itemindex].FindControl("ddlPcsTwentyOne") as DropDownList;
            DropDownList ddlPcsTwentyTwo = rptrItemPcsStatusReport.Items[itemindex].FindControl("ddlPcsTwentyTwo") as DropDownList;
            DropDownList ddlPcsTwentyThree = rptrItemPcsStatusReport.Items[itemindex].FindControl("ddlPcsTwentyThree") as DropDownList;
            DropDownList ddlPcsTwentyFour = rptrItemPcsStatusReport.Items[itemindex].FindControl("ddlPcsTwentyFour") as DropDownList;
            DropDownList ddlPcsTwentyFive = rptrItemPcsStatusReport.Items[itemindex].FindControl("ddlPcsTwentyFive") as DropDownList;

            DropDownList ddlPcsTwentySix = rptrItemPcsStatusReport.Items[itemindex].FindControl("ddlPcsTwentySix") as DropDownList;
            DropDownList ddlPcsTwentySeven = rptrItemPcsStatusReport.Items[itemindex].FindControl("ddlPcsTwentySeven") as DropDownList;
            DropDownList ddlPcsTwentyEight = rptrItemPcsStatusReport.Items[itemindex].FindControl("ddlPcsTwentyEight") as DropDownList;
            DropDownList ddlPcsTwentyNine = rptrItemPcsStatusReport.Items[itemindex].FindControl("ddlPcsTwentyNine") as DropDownList;
            DropDownList ddlPcsThirty = rptrItemPcsStatusReport.Items[itemindex].FindControl("ddlPcsThirty") as DropDownList;

            #endregion

            Label lblOkTotalPcsRepeater = (Label)rptrItemPcsStatusReport.Items[itemindex].FindControl("lblOkTotalPcsRepeater");
            if (Convert.ToInt32(lblOkTotalPcsRepeater.Text) > 0)
            {
                ddlPcsOne.SelectedValue = ddlPcsTwo.SelectedValue = ddlPcsThree.SelectedValue = ddlPcsFour.SelectedValue = ddlPcsFive.SelectedValue = ddlPcsSix.SelectedValue = ddlPcsSeven.SelectedValue = ddlPcsEight.SelectedValue =
                ddlPcsNine.SelectedValue = ddlPcsNine.SelectedValue = ddlPcsTen.SelectedValue = ddlPcsEleven.SelectedValue = ddlPcsTwelve.SelectedValue = ddlPcsThirteen.SelectedValue =
                ddlPcsfourteen.SelectedValue = ddlPcsfiften.SelectedValue = ddlPcsSixteen.SelectedValue = ddlPcsSeventeen.SelectedValue = ddlPcsEighteen.SelectedValue = ddlPcsNineteen.SelectedValue = ddlPcsTwenty.SelectedValue = ddlPcsTwentyOne.SelectedValue =
                ddlPcsTwentyTwo.SelectedValue = ddlPcsTwentyThree.SelectedValue = ddlPcsTwentyFour.SelectedValue = ddlPcsTwentyFive.SelectedValue = ddlPcsTwentySix.SelectedValue = ddlPcsTwentySeven.SelectedValue = ddlPcsTwentyEight.SelectedValue =
                ddlPcsTwentyNine.SelectedValue = ddlPcsThirty.SelectedValue = "-1";
                lblOkTotalPcsRepeater.Text = "0";

                _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];
                _dataTableItemStatusList.Rows[itemindex].SetField("first_pcs" /*column index*/, "unread");
                _dataTableItemStatusList.Rows[itemindex].SetField("second_pcs" /*column index*/, "unread");
                _dataTableItemStatusList.Rows[itemindex].SetField("third_pcs" /*column index*/, "unread");
                _dataTableItemStatusList.Rows[itemindex].SetField("fourth_pcs" /*column index*/, "unread");
                _dataTableItemStatusList.Rows[itemindex].SetField("fifth_pcs" /*column index*/, "unread");
                _dataTableItemStatusList.Rows[itemindex].SetField("sixth_pcs" /*column index*/, "unread");
                _dataTableItemStatusList.Rows[itemindex].SetField("seventh_pcs" /*column index*/, "unread");
                _dataTableItemStatusList.Rows[itemindex].SetField("eight_pcs" /*column index*/, "unread");
                _dataTableItemStatusList.Rows[itemindex].SetField("ninth_pcs" /*column index*/, "unread");
                _dataTableItemStatusList.Rows[itemindex].SetField("tenth_pcs" /*column index*/, "unread");
                _dataTableItemStatusList.Rows[itemindex].SetField("eleven_pcs" /*column index*/, "unread");
                _dataTableItemStatusList.Rows[itemindex].SetField("twelve_pcs" /*column index*/, "unread");
                _dataTableItemStatusList.Rows[itemindex].SetField("thirteen_pcs" /*column index*/, "unread");
                _dataTableItemStatusList.Rows[itemindex].SetField("fourteen_pcs" /*column index*/, "unread");
                _dataTableItemStatusList.Rows[itemindex].SetField("fifteen_pcs" /*column index*/, "unread");
                _dataTableItemStatusList.Rows[itemindex].SetField("sixteen_pcs" /*column index*/, "unread");
                _dataTableItemStatusList.Rows[itemindex].SetField("seventeen_pcs" /*column index*/, "unread");
                _dataTableItemStatusList.Rows[itemindex].SetField("eighteen_pcs" /*column index*/, "unread");
                _dataTableItemStatusList.Rows[itemindex].SetField("ninteen_pcs" /*column index*/, "unread");
                _dataTableItemStatusList.Rows[itemindex].SetField("twenty_pcs" /*column index*/, "unread");
                _dataTableItemStatusList.Rows[itemindex].SetField("twentyone_pcs" /*column index*/, "unread");
                _dataTableItemStatusList.Rows[itemindex].SetField("twentytwo_pcs" /*column index*/, "unread");
                _dataTableItemStatusList.Rows[itemindex].SetField("twentythree_pcs" /*column index*/, "unread");
                _dataTableItemStatusList.Rows[itemindex].SetField("twentyfour_pcs" /*column index*/, "unread");
                _dataTableItemStatusList.Rows[itemindex].SetField("twentyfive_pcs" /*column index*/, "unread");
                _dataTableItemStatusList.Rows[itemindex].SetField("twentysix_pcs" /*column index*/, "unread");
                _dataTableItemStatusList.Rows[itemindex].SetField("twentyseven_pcs" /*column index*/, "unread");
                _dataTableItemStatusList.Rows[itemindex].SetField("twentyeight_pcs" /*column index*/, "unread");
                _dataTableItemStatusList.Rows[itemindex].SetField("twentynine_pcs" /*column index*/, "unread");
                _dataTableItemStatusList.Rows[itemindex].SetField("thirty_pcs" /*column index*/, "unread");
                _dataTableItemStatusList.AcceptChanges();

                Label lblBreakageTotalPcsRepeater = (Label)rptrItemPcsStatusReport.Items[itemindex].FindControl("lblBreakageTotalPcsRepeater");
                lblBreakageTotalPcsRepeater.Text = "0";

                Label lblRejectTotalPcsRepeater = (Label)rptrItemPcsStatusReport.Items[itemindex].FindControl("lblRejectTotalPcsRepeater");
                lblRejectTotalPcsRepeater.Text = "0";
                //txtOkTotalPcsRepeater.Text = "0";
                OverAllTotalPcs();
                btnUpdateData.Visible = false;

            }
            else
            {
                int _totalAllPcs = Convert.ToInt32(txtTotalOkBreakReject.Text == "" ? "0" : txtTotalOkBreakReject.Text);
                int _totalRecieved = Convert.ToInt32(txtreceived.Text == "" ? "0" : txtreceived.Text);

                if ((_totalAllPcs + 30) > _totalRecieved)
                {
                    ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);
                }
                else
                {

                    ddlPcsOne.SelectedValue = ddlPcsTwo.SelectedValue = ddlPcsThree.SelectedValue = ddlPcsFour.SelectedValue = ddlPcsFive.SelectedValue = ddlPcsSix.SelectedValue = ddlPcsSeven.SelectedValue = ddlPcsEight.SelectedValue =
                 ddlPcsNine.SelectedValue = ddlPcsNine.SelectedValue = ddlPcsTen.SelectedValue = ddlPcsEleven.SelectedValue = ddlPcsTwelve.SelectedValue = ddlPcsThirteen.SelectedValue =
                 ddlPcsfourteen.SelectedValue = ddlPcsfiften.SelectedValue = ddlPcsSixteen.SelectedValue = ddlPcsSeventeen.SelectedValue = ddlPcsEighteen.SelectedValue = ddlPcsNineteen.SelectedValue = ddlPcsTwenty.SelectedValue = ddlPcsTwentyOne.SelectedValue =
                 ddlPcsTwentyTwo.SelectedValue = ddlPcsTwentyThree.SelectedValue = ddlPcsTwentyFour.SelectedValue = ddlPcsTwentyFive.SelectedValue = ddlPcsTwentySix.SelectedValue = ddlPcsTwentySeven.SelectedValue = ddlPcsTwentyEight.SelectedValue =
                 ddlPcsTwentyNine.SelectedValue = ddlPcsThirty.SelectedValue = "1";
                    lblOkTotalPcsRepeater.Text = "30";

                    _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];
                    _dataTableItemStatusList.Rows[itemindex].SetField("first_pcs" /*column index*/, "ok");
                    _dataTableItemStatusList.Rows[itemindex].SetField("second_pcs" /*column index*/, "ok");
                    _dataTableItemStatusList.Rows[itemindex].SetField("third_pcs" /*column index*/, "ok");
                    _dataTableItemStatusList.Rows[itemindex].SetField("fourth_pcs" /*column index*/, "ok");
                    _dataTableItemStatusList.Rows[itemindex].SetField("fifth_pcs" /*column index*/, "ok");
                    _dataTableItemStatusList.Rows[itemindex].SetField("sixth_pcs" /*column index*/, "ok");
                    _dataTableItemStatusList.Rows[itemindex].SetField("seventh_pcs" /*column index*/, "ok");
                    _dataTableItemStatusList.Rows[itemindex].SetField("eight_pcs" /*column index*/, "ok");
                    _dataTableItemStatusList.Rows[itemindex].SetField("ninth_pcs" /*column index*/, "ok");
                    _dataTableItemStatusList.Rows[itemindex].SetField("tenth_pcs" /*column index*/, "ok");
                    _dataTableItemStatusList.Rows[itemindex].SetField("eleven_pcs" /*column index*/, "ok");
                    _dataTableItemStatusList.Rows[itemindex].SetField("twelve_pcs" /*column index*/, "ok");
                    _dataTableItemStatusList.Rows[itemindex].SetField("thirteen_pcs" /*column index*/, "ok");
                    _dataTableItemStatusList.Rows[itemindex].SetField("fourteen_pcs" /*column index*/, "ok");
                    _dataTableItemStatusList.Rows[itemindex].SetField("fifteen_pcs" /*column index*/, "ok");
                    _dataTableItemStatusList.Rows[itemindex].SetField("sixteen_pcs" /*column index*/, "ok");
                    _dataTableItemStatusList.Rows[itemindex].SetField("seventeen_pcs" /*column index*/, "ok");
                    _dataTableItemStatusList.Rows[itemindex].SetField("eighteen_pcs" /*column index*/, "ok");
                    _dataTableItemStatusList.Rows[itemindex].SetField("ninteen_pcs" /*column index*/, "ok");
                    _dataTableItemStatusList.Rows[itemindex].SetField("twenty_pcs" /*column index*/, "ok");
                    _dataTableItemStatusList.Rows[itemindex].SetField("twentyone_pcs" /*column index*/, "ok");
                    _dataTableItemStatusList.Rows[itemindex].SetField("twentytwo_pcs" /*column index*/, "ok");
                    _dataTableItemStatusList.Rows[itemindex].SetField("twentythree_pcs" /*column index*/, "ok");
                    _dataTableItemStatusList.Rows[itemindex].SetField("twentyfour_pcs" /*column index*/, "ok");
                    _dataTableItemStatusList.Rows[itemindex].SetField("twentyfive_pcs" /*column index*/, "ok");
                    _dataTableItemStatusList.Rows[itemindex].SetField("twentysix_pcs" /*column index*/, "ok");
                    _dataTableItemStatusList.Rows[itemindex].SetField("twentyseven_pcs" /*column index*/, "ok");
                    _dataTableItemStatusList.Rows[itemindex].SetField("twentyeight_pcs" /*column index*/, "ok");
                    _dataTableItemStatusList.Rows[itemindex].SetField("twentynine_pcs" /*column index*/, "ok");
                    _dataTableItemStatusList.Rows[itemindex].SetField("thirty_pcs" /*column index*/, "ok");
                    _dataTableItemStatusList.AcceptChanges();

                    Label lblBreakageTotalPcsRepeater = (Label)rptrItemPcsStatusReport.Items[itemindex].FindControl("lblBreakageTotalPcsRepeater");
                    lblBreakageTotalPcsRepeater.Text = "0";

                    Label lblRejectTotalPcsRepeater = (Label)rptrItemPcsStatusReport.Items[itemindex].FindControl("lblRejectTotalPcsRepeater");
                    lblRejectTotalPcsRepeater.Text = "0";
                    //txtOkTotalPcsRepeater.Text = "0";
                    OverAllTotalPcs();
                    btnUpdateData.Visible = false;
                }
            }




        }

        protected void txtItemRawBalance_TextChanged(object sender, EventArgs e)
        {
           
                calculate();

        }

        #region Dropdown of Ok Breakage and Reject
        protected void ddlPcsOne_SelectedIndexChanged(object sender, EventArgs e)
        {

            DropDownList _ddlPcsOne = (DropDownList)sender;
            RepeaterItem item = (RepeaterItem)_ddlPcsOne.NamingContainer;
            Int32 itemCheckboxindex = ((RepeaterItem)_ddlPcsOne.NamingContainer).ItemIndex;
            //Int32 itemindex = ((RepeaterItem)_checkboxOne.NamingContainer).ItemIndex;
            Label lblOkTotalPcsRepeater = (Label)item.FindControl("lblOkTotalPcsRepeater");
            Label lblBreakageTotalPcsRepeater = (Label)item.FindControl("lblBreakageTotalPcsRepeater");
            Label lblRejectTotalPcsRepeater = (Label)item.FindControl("lblRejectTotalPcsRepeater");

            lblOkTotalPcsRepeater.Text = lblOkTotalPcsRepeater.Text == "" ? "0" : lblOkTotalPcsRepeater.Text;
            lblBreakageTotalPcsRepeater.Text = lblBreakageTotalPcsRepeater.Text == "" ? "0" : lblBreakageTotalPcsRepeater.Text;
            lblRejectTotalPcsRepeater.Text = lblRejectTotalPcsRepeater.Text == "" ? "0" : lblRejectTotalPcsRepeater.Text;

            int _totalAllPcs = Convert.ToInt32(txtTotalOkBreakReject.Text == "" ? "0" : txtTotalOkBreakReject.Text);
            int _totalRecieved = Convert.ToInt32(txtreceived.Text == "" ? "0" : txtreceived.Text);

            // -1 (Unselect), 1 (Ok), 0(Breakage) and 2 for Reejct


            if (_ddlPcsOne.SelectedValue == "-1")
            {
                _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];
                if (_dataTableItemStatusList.Rows[itemCheckboxindex]["first_pcs"].ToString() == "ok")
                {
                    _ddlPcsOne.SelectedValue = "1";
                }
                else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["first_pcs"].ToString() == "breakage")
                {
                    _ddlPcsOne.SelectedValue = "0";
                }
                else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["first_pcs"].ToString() == "reject")
                {
                    _ddlPcsOne.SelectedValue = "2";
                }
                else
                {

                }
            }
            else if (_ddlPcsOne.SelectedValue == "1")
            {
                if (_totalAllPcs > _totalRecieved)
                {
                    _ddlPcsOne.SelectedValue = "-1";
                    ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);
                }
                else if (_totalAllPcs == _totalRecieved)
                {
                    _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];
                    if (_dataTableItemStatusList.Rows[itemCheckboxindex]["first_pcs"].ToString() == "unread")
                    {
                        _ddlPcsOne.SelectedValue = "-1";
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["first_pcs"].ToString() == "breakage")
                    {
                        if (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) > 0)
                        {
                            lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) + 1).ToString();
                            if (lblBreakageTotalPcsRepeater.Text == "0" || lblBreakageTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("first_pcs" /*column Name*/, "ok");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["first_pcs"].ToString() == "reject")
                    {
                        if (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) > 0)
                        {
                            lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) + 1).ToString();
                            if (lblRejectTotalPcsRepeater.Text == "0" || lblRejectTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblRejectTotalPcsRepeater.Text = (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("first_pcs" /*column Name*/, "ok");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["first_pcs"].ToString() == "ok")
                    {

                    }
                    else
                    {

                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);

                    }
                }
                else
                {
                    _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];
                    if (_dataTableItemStatusList.Rows[itemCheckboxindex]["first_pcs"].ToString() == "unread")
                    {
                        lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) + 1).ToString();

                        _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("first_pcs" /*column Name*/, "ok");
                        _dataTableItemStatusList.AcceptChanges();
                        OverAllTotalPcs();
                        btnUpdateData.Visible = false;
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["first_pcs"].ToString() == "breakage")
                    {
                        if (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) > 0)
                        {
                            lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) + 1).ToString();
                            if (lblBreakageTotalPcsRepeater.Text == "0" || lblBreakageTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("first_pcs" /*column Name*/, "ok");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["first_pcs"].ToString() == "reject")
                    {
                        if (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) > 0)
                        {
                            lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) + 1).ToString();
                            if (lblRejectTotalPcsRepeater.Text == "0" || lblRejectTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblRejectTotalPcsRepeater.Text = (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("first_pcs" /*column Name*/, "ok");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["first_pcs"].ToString() == "ok")
                    {

                    }
                    else
                    {

                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);

                    }
                }

            }
            else if (_ddlPcsOne.SelectedValue == "0")
            {
                if (_totalAllPcs > _totalRecieved)
                {
                    _ddlPcsOne.SelectedValue = "-1";
                    ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);
                }
                else if (_totalAllPcs == _totalRecieved)
                {
                    _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];
                    if (_dataTableItemStatusList.Rows[itemCheckboxindex]["first_pcs"].ToString() == "unread")
                    {
                        _ddlPcsOne.SelectedValue = "-1";
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["first_pcs"].ToString() == "ok")
                    {
                        if (Convert.ToInt32(lblOkTotalPcsRepeater.Text) > 0)
                        {
                            lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) + 1).ToString();
                            if (lblOkTotalPcsRepeater.Text == "0" || lblOkTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("first_pcs" /*column Name*/, "breakage");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["first_pcs"].ToString() == "reject")
                    {
                        if (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) > 0)
                        {
                            lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) + 1).ToString();
                            if (lblRejectTotalPcsRepeater.Text == "0" || lblRejectTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblRejectTotalPcsRepeater.Text = (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("first_pcs" /*column Name*/, "breakage");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["first_pcs"].ToString() == "breakage")
                    {

                    }
                    else
                    {

                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);

                    }
                }
                else
                {
                    _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];
                    if (_dataTableItemStatusList.Rows[itemCheckboxindex]["first_pcs"].ToString() == "unread")
                    {
                        lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) + 1).ToString();

                        _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("first_pcs" /*column Name*/, "breakage");
                        _dataTableItemStatusList.AcceptChanges();
                        OverAllTotalPcs();
                        btnUpdateData.Visible = false;
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["first_pcs"].ToString() == "ok")
                    {
                        if (Convert.ToInt32(lblOkTotalPcsRepeater.Text) > 0)
                        {
                            lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) + 1).ToString();
                            if (lblOkTotalPcsRepeater.Text == "0" || lblOkTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("first_pcs" /*column Name*/, "breakage");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["first_pcs"].ToString() == "reject")
                    {
                        if (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) > 0)
                        {
                            lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) + 1).ToString();
                            if (lblRejectTotalPcsRepeater.Text == "0" || lblRejectTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblRejectTotalPcsRepeater.Text = (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("first_pcs" /*column Name*/, "breakage");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["first_pcs"].ToString() == "breakage")
                    {

                    }
                    else
                    {

                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);

                    }
                }
            }
            else if (_ddlPcsOne.SelectedValue == "2")
            {
                if (_totalAllPcs > _totalRecieved)
                {
                    _ddlPcsOne.SelectedValue = "-1";
                    ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);
                }
                else if (_totalAllPcs == _totalRecieved)
                {
                    _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];
                    if (_dataTableItemStatusList.Rows[itemCheckboxindex]["first_pcs"].ToString() == "unread")
                    {
                        _ddlPcsOne.SelectedValue = "-1";
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["first_pcs"].ToString() == "ok")
                    {
                        if (Convert.ToInt32(lblOkTotalPcsRepeater.Text) > 0)
                        {
                            lblRejectTotalPcsRepeater.Text = (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) + 1).ToString();
                            if (lblOkTotalPcsRepeater.Text == "0" || lblOkTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("first_pcs" /*column Name*/, "reject");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["first_pcs"].ToString() == "breakage")
                    {
                        if (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) > 0)
                        {
                            lblRejectTotalPcsRepeater.Text = (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) + 1).ToString();
                            if (lblBreakageTotalPcsRepeater.Text == "0" || lblBreakageTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("first_pcs" /*column Name*/, "reject");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["first_pcs"].ToString() == "reject")
                    {

                    }
                    else
                    {

                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);

                    }
                }
                else
                {
                    _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];
                    if (_dataTableItemStatusList.Rows[itemCheckboxindex]["first_pcs"].ToString() == "unread")
                    {
                        lblRejectTotalPcsRepeater.Text = (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) + 1).ToString();

                        _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("first_pcs" /*column Name*/, "reject");
                        _dataTableItemStatusList.AcceptChanges();
                        OverAllTotalPcs();
                        btnUpdateData.Visible = false;
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["first_pcs"].ToString() == "ok")
                    {
                        if (Convert.ToInt32(lblOkTotalPcsRepeater.Text) > 0)
                        {
                            lblRejectTotalPcsRepeater.Text = (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) + 1).ToString();
                            if (lblOkTotalPcsRepeater.Text == "0" || lblOkTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("first_pcs" /*column Name*/, "reject");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["first_pcs"].ToString() == "breakage")
                    {
                        if (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) > 0)
                        {
                            lblRejectTotalPcsRepeater.Text = (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) + 1).ToString();
                            if (lblBreakageTotalPcsRepeater.Text == "0" || lblBreakageTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("first_pcs" /*column Name*/, "reject");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["first_pcs"].ToString() == "reject")
                    {

                    }
                    else
                    {

                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);

                    }
                }
            }
            else
            {

            }


        }

        protected void ddlPcsTwo_SelectedIndexChanged(object sender, EventArgs e)
        {
            DropDownList _ddlPcsTwo = (DropDownList)sender;
            RepeaterItem item = (RepeaterItem)_ddlPcsTwo.NamingContainer;
            Int32 itemCheckboxindex = ((RepeaterItem)_ddlPcsTwo.NamingContainer).ItemIndex;
            //Int32 itemindex = ((RepeaterItem)_checkboxOne.NamingContainer).ItemIndex;
            Label lblOkTotalPcsRepeater = (Label)item.FindControl("lblOkTotalPcsRepeater");
            Label lblBreakageTotalPcsRepeater = (Label)item.FindControl("lblBreakageTotalPcsRepeater");
            Label lblRejectTotalPcsRepeater = (Label)item.FindControl("lblRejectTotalPcsRepeater");

            lblOkTotalPcsRepeater.Text = lblOkTotalPcsRepeater.Text == "" ? "0" : lblOkTotalPcsRepeater.Text;
            lblBreakageTotalPcsRepeater.Text = lblBreakageTotalPcsRepeater.Text == "" ? "0" : lblBreakageTotalPcsRepeater.Text;
            lblRejectTotalPcsRepeater.Text = lblRejectTotalPcsRepeater.Text == "" ? "0" : lblRejectTotalPcsRepeater.Text;

            int _totalAllPcs = Convert.ToInt32(txtTotalOkBreakReject.Text == "" ? "0" : txtTotalOkBreakReject.Text);
            int _totalRecieved = Convert.ToInt32(txtreceived.Text == "" ? "0" : txtreceived.Text);

            // -1 (Unselect), 1 (Ok), 0(Breakage) and 2 for Reejct


            if (_ddlPcsTwo.SelectedValue == "-1")
            {
                _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];
                if (_dataTableItemStatusList.Rows[itemCheckboxindex]["second_pcs"].ToString() == "ok")
                {
                    _ddlPcsTwo.SelectedValue = "1";
                }
                else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["second_pcs"].ToString() == "breakage")
                {
                    _ddlPcsTwo.SelectedValue = "0";
                }
                else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["second_pcs"].ToString() == "reject")
                {
                    _ddlPcsTwo.SelectedValue = "2";
                }
                else
                {

                }
            }
            else if (_ddlPcsTwo.SelectedValue == "1")
            {
                if (_totalAllPcs > _totalRecieved)
                {
                    _ddlPcsTwo.SelectedValue = "-1";
                    ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);
                }
                else if (_totalAllPcs == _totalRecieved)
                {
                    _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];
                    if (_dataTableItemStatusList.Rows[itemCheckboxindex]["second_pcs"].ToString() == "unread")
                    {
                        _ddlPcsTwo.SelectedValue = "-1";
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["second_pcs"].ToString() == "breakage")
                    {
                        if (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) > 0)
                        {
                            lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) + 1).ToString();
                            if (lblBreakageTotalPcsRepeater.Text == "0" || lblBreakageTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("second_pcs" /*column Name*/, "ok");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["second_pcs"].ToString() == "reject")
                    {
                        if (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) > 0)
                        {
                            lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) + 1).ToString();
                            if (lblRejectTotalPcsRepeater.Text == "0" || lblRejectTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblRejectTotalPcsRepeater.Text = (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("second_pcs" /*column Name*/, "ok");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["second_pcs"].ToString() == "ok")
                    {

                    }
                    else
                    {

                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);

                    }
                }
                else
                {
                    _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];
                    if (_dataTableItemStatusList.Rows[itemCheckboxindex]["second_pcs"].ToString() == "unread")
                    {
                        lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) + 1).ToString();

                        _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("second_pcs" /*column Name*/, "ok");
                        _dataTableItemStatusList.AcceptChanges();
                        OverAllTotalPcs();
                        btnUpdateData.Visible = false;
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["second_pcs"].ToString() == "breakage")
                    {
                        if (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) > 0)
                        {
                            lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) + 1).ToString();
                            if (lblBreakageTotalPcsRepeater.Text == "0" || lblBreakageTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("second_pcs" /*column Name*/, "ok");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["second_pcs"].ToString() == "reject")
                    {
                        if (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) > 0)
                        {
                            lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) + 1).ToString();
                            if (lblRejectTotalPcsRepeater.Text == "0" || lblRejectTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblRejectTotalPcsRepeater.Text = (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("second_pcs" /*column Name*/, "ok");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["second_pcs"].ToString() == "ok")
                    {

                    }
                    else
                    {

                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);

                    }
                }

            }
            else if (_ddlPcsTwo.SelectedValue == "0")
            {
                if (_totalAllPcs > _totalRecieved)
                {
                    _ddlPcsTwo.SelectedValue = "-1";
                    ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);
                }
                else if (_totalAllPcs == _totalRecieved)
                {
                    _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];
                    if (_dataTableItemStatusList.Rows[itemCheckboxindex]["second_pcs"].ToString() == "unread")
                    {
                        _ddlPcsTwo.SelectedValue = "-1";
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["second_pcs"].ToString() == "ok")
                    {
                        if (Convert.ToInt32(lblOkTotalPcsRepeater.Text) > 0)
                        {
                            lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) + 1).ToString();
                            if (lblOkTotalPcsRepeater.Text == "0" || lblOkTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("second_pcs" /*column Name*/, "breakage");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["second_pcs"].ToString() == "reject")
                    {
                        if (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) > 0)
                        {
                            lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) + 1).ToString();
                            if (lblRejectTotalPcsRepeater.Text == "0" || lblRejectTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblRejectTotalPcsRepeater.Text = (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("second_pcs" /*column Name*/, "breakage");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["second_pcs"].ToString() == "breakage")
                    {

                    }
                    else
                    {

                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);

                    }
                }
                else
                {
                    _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];
                    if (_dataTableItemStatusList.Rows[itemCheckboxindex]["second_pcs"].ToString() == "unread")
                    {
                        lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) + 1).ToString();

                        _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("second_pcs" /*column Name*/, "breakage");
                        _dataTableItemStatusList.AcceptChanges();
                        OverAllTotalPcs();
                        btnUpdateData.Visible = false;
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["second_pcs"].ToString() == "ok")
                    {
                        if (Convert.ToInt32(lblOkTotalPcsRepeater.Text) > 0)
                        {
                            lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) + 1).ToString();
                            if (lblOkTotalPcsRepeater.Text == "0" || lblOkTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("second_pcs" /*column Name*/, "breakage");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["second_pcs"].ToString() == "reject")
                    {
                        if (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) > 0)
                        {
                            lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) + 1).ToString();
                            if (lblRejectTotalPcsRepeater.Text == "0" || lblRejectTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblRejectTotalPcsRepeater.Text = (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("second_pcs" /*column Name*/, "breakage");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["second_pcs"].ToString() == "breakage")
                    {

                    }
                    else
                    {

                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);

                    }
                }
            }
            else if (_ddlPcsTwo.SelectedValue == "2")
            {
                if (_totalAllPcs > _totalRecieved)
                {
                    _ddlPcsTwo.SelectedValue = "-1";
                    ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);
                }
                else if (_totalAllPcs == _totalRecieved)
                {
                    _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];
                    if (_dataTableItemStatusList.Rows[itemCheckboxindex]["second_pcs"].ToString() == "unread")
                    {
                        _ddlPcsTwo.SelectedValue = "-1";
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["second_pcs"].ToString() == "ok")
                    {
                        if (Convert.ToInt32(lblOkTotalPcsRepeater.Text) > 0)
                        {
                            lblRejectTotalPcsRepeater.Text = (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) + 1).ToString();
                            if (lblOkTotalPcsRepeater.Text == "0" || lblOkTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("second_pcs" /*column Name*/, "reject");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["second_pcs"].ToString() == "breakage")
                    {
                        if (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) > 0)
                        {
                            lblRejectTotalPcsRepeater.Text = (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) + 1).ToString();
                            if (lblBreakageTotalPcsRepeater.Text == "0" || lblBreakageTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("second_pcs" /*column Name*/, "reject");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["second_pcs"].ToString() == "reject")
                    {

                    }
                    else
                    {

                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);

                    }
                }
                else
                {
                    _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];
                    if (_dataTableItemStatusList.Rows[itemCheckboxindex]["second_pcs"].ToString() == "unread")
                    {
                        lblRejectTotalPcsRepeater.Text = (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) + 1).ToString();

                        _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("second_pcs" /*column Name*/, "reject");
                        _dataTableItemStatusList.AcceptChanges();
                        OverAllTotalPcs();
                        btnUpdateData.Visible = false;
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["second_pcs"].ToString() == "ok")
                    {
                        if (Convert.ToInt32(lblOkTotalPcsRepeater.Text) > 0)
                        {
                            lblRejectTotalPcsRepeater.Text = (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) + 1).ToString();
                            if (lblOkTotalPcsRepeater.Text == "0" || lblOkTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("second_pcs" /*column Name*/, "reject");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["second_pcs"].ToString() == "breakage")
                    {
                        if (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) > 0)
                        {
                            lblRejectTotalPcsRepeater.Text = (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) + 1).ToString();
                            if (lblBreakageTotalPcsRepeater.Text == "0" || lblBreakageTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("second_pcs" /*column Name*/, "reject");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["second_pcs"].ToString() == "reject")
                    {

                    }
                    else
                    {

                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);

                    }
                }
            }
            else
            {

            }
        }

        protected void ddlPcsThree_SelectedIndexChanged(object sender, EventArgs e)
        {
            DropDownList _ddlPcsThree = (DropDownList)sender;
            RepeaterItem item = (RepeaterItem)_ddlPcsThree.NamingContainer;
            Int32 itemCheckboxindex = ((RepeaterItem)_ddlPcsThree.NamingContainer).ItemIndex;
            //Int32 itemindex = ((RepeaterItem)_checkboxOne.NamingContainer).ItemIndex;
            Label lblOkTotalPcsRepeater = (Label)item.FindControl("lblOkTotalPcsRepeater");
            Label lblBreakageTotalPcsRepeater = (Label)item.FindControl("lblBreakageTotalPcsRepeater");
            Label lblRejectTotalPcsRepeater = (Label)item.FindControl("lblRejectTotalPcsRepeater");

            lblOkTotalPcsRepeater.Text = lblOkTotalPcsRepeater.Text == "" ? "0" : lblOkTotalPcsRepeater.Text;
            lblBreakageTotalPcsRepeater.Text = lblBreakageTotalPcsRepeater.Text == "" ? "0" : lblBreakageTotalPcsRepeater.Text;
            lblRejectTotalPcsRepeater.Text = lblRejectTotalPcsRepeater.Text == "" ? "0" : lblRejectTotalPcsRepeater.Text;

            int _totalAllPcs = Convert.ToInt32(txtTotalOkBreakReject.Text == "" ? "0" : txtTotalOkBreakReject.Text);
            int _totalRecieved = Convert.ToInt32(txtreceived.Text == "" ? "0" : txtreceived.Text);

            // -1 (Unselect), 1 (Ok), 0(Breakage) and 2 for Reejct


            if (_ddlPcsThree.SelectedValue == "-1")
            {
                _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];
                if (_dataTableItemStatusList.Rows[itemCheckboxindex]["third_pcs"].ToString() == "ok")
                {
                    _ddlPcsThree.SelectedValue = "1";
                }
                else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["third_pcs"].ToString() == "breakage")
                {
                    _ddlPcsThree.SelectedValue = "0";
                }
                else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["third_pcs"].ToString() == "reject")
                {
                    _ddlPcsThree.SelectedValue = "2";
                }
                else
                {

                }
            }
            else if (_ddlPcsThree.SelectedValue == "1")
            {
                if (_totalAllPcs > _totalRecieved)
                {
                    _ddlPcsThree.SelectedValue = "-1";
                    ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);
                }
                else if (_totalAllPcs == _totalRecieved)
                {
                    _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];
                    if (_dataTableItemStatusList.Rows[itemCheckboxindex]["third_pcs"].ToString() == "unread")
                    {
                        _ddlPcsThree.SelectedValue = "-1";
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["third_pcs"].ToString() == "breakage")
                    {
                        if (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) > 0)
                        {
                            lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) + 1).ToString();
                            if (lblBreakageTotalPcsRepeater.Text == "0" || lblBreakageTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("third_pcs" /*column Name*/, "ok");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["third_pcs"].ToString() == "reject")
                    {
                        if (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) > 0)
                        {
                            lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) + 1).ToString();
                            if (lblRejectTotalPcsRepeater.Text == "0" || lblRejectTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblRejectTotalPcsRepeater.Text = (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("third_pcs" /*column Name*/, "ok");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["third_pcs"].ToString() == "ok")
                    {

                    }
                    else
                    {

                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);

                    }
                }
                else
                {
                    _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];
                    if (_dataTableItemStatusList.Rows[itemCheckboxindex]["third_pcs"].ToString() == "unread")
                    {
                        lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) + 1).ToString();

                        _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("third_pcs" /*column Name*/, "ok");
                        _dataTableItemStatusList.AcceptChanges();
                        OverAllTotalPcs();
                        btnUpdateData.Visible = false;
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["third_pcs"].ToString() == "breakage")
                    {
                        if (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) > 0)
                        {
                            lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) + 1).ToString();
                            if (lblBreakageTotalPcsRepeater.Text == "0" || lblBreakageTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("third_pcs" /*column Name*/, "ok");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["third_pcs"].ToString() == "reject")
                    {
                        if (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) > 0)
                        {
                            lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) + 1).ToString();
                            if (lblRejectTotalPcsRepeater.Text == "0" || lblRejectTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblRejectTotalPcsRepeater.Text = (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("third_pcs" /*column Name*/, "ok");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["third_pcs"].ToString() == "ok")
                    {

                    }
                    else
                    {

                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);

                    }
                }

            }
            else if (_ddlPcsThree.SelectedValue == "0")
            {
                if (_totalAllPcs > _totalRecieved)
                {
                    _ddlPcsThree.SelectedValue = "-1";
                    ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);
                }
                else if (_totalAllPcs == _totalRecieved)
                {
                    _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];
                    if (_dataTableItemStatusList.Rows[itemCheckboxindex]["third_pcs"].ToString() == "unread")
                    {
                        _ddlPcsThree.SelectedValue = "-1";
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["third_pcs"].ToString() == "ok")
                    {
                        if (Convert.ToInt32(lblOkTotalPcsRepeater.Text) > 0)
                        {
                            lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) + 1).ToString();
                            if (lblOkTotalPcsRepeater.Text == "0" || lblOkTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("third_pcs" /*column Name*/, "breakage");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["third_pcs"].ToString() == "reject")
                    {
                        if (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) > 0)
                        {
                            lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) + 1).ToString();
                            if (lblRejectTotalPcsRepeater.Text == "0" || lblRejectTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblRejectTotalPcsRepeater.Text = (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("third_pcs" /*column Name*/, "breakage");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["third_pcs"].ToString() == "breakage")
                    {

                    }
                    else
                    {

                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);

                    }
                }
                else
                {
                    _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];
                    if (_dataTableItemStatusList.Rows[itemCheckboxindex]["third_pcs"].ToString() == "unread")
                    {
                        lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) + 1).ToString();

                        _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("third_pcs" /*column Name*/, "breakage");
                        _dataTableItemStatusList.AcceptChanges();
                        OverAllTotalPcs();
                        btnUpdateData.Visible = false;
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["third_pcs"].ToString() == "ok")
                    {
                        if (Convert.ToInt32(lblOkTotalPcsRepeater.Text) > 0)
                        {
                            lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) + 1).ToString();
                            if (lblOkTotalPcsRepeater.Text == "0" || lblOkTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("third_pcs" /*column Name*/, "breakage");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["third_pcs"].ToString() == "reject")
                    {
                        if (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) > 0)
                        {
                            lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) + 1).ToString();
                            if (lblRejectTotalPcsRepeater.Text == "0" || lblRejectTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblRejectTotalPcsRepeater.Text = (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("third_pcs" /*column Name*/, "breakage");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["third_pcs"].ToString() == "breakage")
                    {

                    }
                    else
                    {

                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);

                    }
                }
            }
            else if (_ddlPcsThree.SelectedValue == "2")
            {
                if (_totalAllPcs > _totalRecieved)
                {
                    _ddlPcsThree.SelectedValue = "-1";
                    ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);

                }
                else if (_totalAllPcs == _totalRecieved)
                {
                    _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];
                    if (_dataTableItemStatusList.Rows[itemCheckboxindex]["third_pcs"].ToString() == "unread")
                    {
                        _ddlPcsThree.SelectedValue = "-1";
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["third_pcs"].ToString() == "ok")
                    {
                        if (Convert.ToInt32(lblOkTotalPcsRepeater.Text) > 0)
                        {
                            lblRejectTotalPcsRepeater.Text = (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) + 1).ToString();
                            if (lblOkTotalPcsRepeater.Text == "0" || lblOkTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("third_pcs" /*column Name*/, "reject");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["third_pcs"].ToString() == "breakage")
                    {
                        if (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) > 0)
                        {
                            lblRejectTotalPcsRepeater.Text = (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) + 1).ToString();
                            if (lblBreakageTotalPcsRepeater.Text == "0" || lblBreakageTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("third_pcs" /*column Name*/, "reject");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["third_pcs"].ToString() == "reject")
                    {

                    }
                    else
                    {

                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);

                    }
                }
                else
                {
                    _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];
                    if (_dataTableItemStatusList.Rows[itemCheckboxindex]["third_pcs"].ToString() == "unread")
                    {
                        lblRejectTotalPcsRepeater.Text = (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) + 1).ToString();

                        _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("third_pcs" /*column Name*/, "reject");
                        _dataTableItemStatusList.AcceptChanges();
                        OverAllTotalPcs();
                        btnUpdateData.Visible = false;
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["third_pcs"].ToString() == "ok")
                    {
                        if (Convert.ToInt32(lblOkTotalPcsRepeater.Text) > 0)
                        {
                            lblRejectTotalPcsRepeater.Text = (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) + 1).ToString();
                            if (lblOkTotalPcsRepeater.Text == "0" || lblOkTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("third_pcs" /*column Name*/, "reject");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["third_pcs"].ToString() == "breakage")
                    {
                        if (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) > 0)
                        {
                            lblRejectTotalPcsRepeater.Text = (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) + 1).ToString();
                            if (lblBreakageTotalPcsRepeater.Text == "0" || lblBreakageTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("third_pcs" /*column Name*/, "reject");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["third_pcs"].ToString() == "reject")
                    {

                    }
                    else
                    {

                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);

                    }
                }
            }
            else
            {

            }
        }

        protected void ddlPcsFour_SelectedIndexChanged(object sender, EventArgs e)
        {
            DropDownList _ddlPcsFour = (DropDownList)sender;
            RepeaterItem item = (RepeaterItem)_ddlPcsFour.NamingContainer;
            Int32 itemCheckboxindex = ((RepeaterItem)_ddlPcsFour.NamingContainer).ItemIndex;
            //Int32 itemindex = ((RepeaterItem)_checkboxOne.NamingContainer).ItemIndex;
            Label lblOkTotalPcsRepeater = (Label)item.FindControl("lblOkTotalPcsRepeater");
            Label lblBreakageTotalPcsRepeater = (Label)item.FindControl("lblBreakageTotalPcsRepeater");
            Label lblRejectTotalPcsRepeater = (Label)item.FindControl("lblRejectTotalPcsRepeater");

            lblOkTotalPcsRepeater.Text = lblOkTotalPcsRepeater.Text == "" ? "0" : lblOkTotalPcsRepeater.Text;
            lblBreakageTotalPcsRepeater.Text = lblBreakageTotalPcsRepeater.Text == "" ? "0" : lblBreakageTotalPcsRepeater.Text;
            lblRejectTotalPcsRepeater.Text = lblRejectTotalPcsRepeater.Text == "" ? "0" : lblRejectTotalPcsRepeater.Text;

            int _totalAllPcs = Convert.ToInt32(txtTotalOkBreakReject.Text == "" ? "0" : txtTotalOkBreakReject.Text);
            int _totalRecieved = Convert.ToInt32(txtreceived.Text == "" ? "0" : txtreceived.Text);

            // -1 (Unselect), 1 (Ok), 0(Breakage) and 2 for Reejct


            if (_ddlPcsFour.SelectedValue == "-1")
            {
                _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];
                if (_dataTableItemStatusList.Rows[itemCheckboxindex]["fourth_pcs"].ToString() == "ok")
                {
                    _ddlPcsFour.SelectedValue = "1";
                }
                else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["fourth_pcs"].ToString() == "breakage")
                {
                    _ddlPcsFour.SelectedValue = "0";
                }
                else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["fourth_pcs"].ToString() == "reject")
                {
                    _ddlPcsFour.SelectedValue = "2";
                }
                else
                {

                }
            }
            else if (_ddlPcsFour.SelectedValue == "1")
            {
                if (_totalAllPcs > _totalRecieved)
                {
                    _ddlPcsFour.SelectedValue = "-1";
                    ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);
                }
                else if (_totalAllPcs == _totalRecieved)
                {
                    _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];
                    if (_dataTableItemStatusList.Rows[itemCheckboxindex]["fourth_pcs"].ToString() == "unread")
                    {
                        _ddlPcsFour.SelectedValue = "-1";
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["fourth_pcs"].ToString() == "breakage")
                    {
                        if (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) > 0)
                        {
                            lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) + 1).ToString();
                            if (lblBreakageTotalPcsRepeater.Text == "0" || lblBreakageTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("fourth_pcs" /*column Name*/, "ok");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["fourth_pcs"].ToString() == "reject")
                    {
                        if (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) > 0)
                        {
                            lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) + 1).ToString();
                            if (lblRejectTotalPcsRepeater.Text == "0" || lblRejectTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblRejectTotalPcsRepeater.Text = (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("fourth_pcs" /*column Name*/, "ok");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["fourth_pcs"].ToString() == "ok")
                    {

                    }
                    else
                    {

                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);

                    }
                }
                else
                {
                    _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];
                    if (_dataTableItemStatusList.Rows[itemCheckboxindex]["fourth_pcs"].ToString() == "unread")
                    {
                        lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) + 1).ToString();

                        _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("fourth_pcs" /*column Name*/, "ok");
                        _dataTableItemStatusList.AcceptChanges();
                        OverAllTotalPcs();
                        btnUpdateData.Visible = false;
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["fourth_pcs"].ToString() == "breakage")
                    {
                        if (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) > 0)
                        {
                            lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) + 1).ToString();
                            if (lblBreakageTotalPcsRepeater.Text == "0" || lblBreakageTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("fourth_pcs" /*column Name*/, "ok");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["fourth_pcs"].ToString() == "reject")
                    {
                        if (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) > 0)
                        {
                            lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) + 1).ToString();
                            if (lblRejectTotalPcsRepeater.Text == "0" || lblRejectTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblRejectTotalPcsRepeater.Text = (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("fourth_pcs" /*column Name*/, "ok");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["fourth_pcs"].ToString() == "ok")
                    {

                    }
                    else
                    {

                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);

                    }
                }

            }
            else if (_ddlPcsFour.SelectedValue == "0")
            {
                if (_totalAllPcs > _totalRecieved)
                {
                    _ddlPcsFour.SelectedValue = "-1";
                    ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);
                }
                else if (_totalAllPcs == _totalRecieved)
                {
                    _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];
                    if (_dataTableItemStatusList.Rows[itemCheckboxindex]["fourth_pcs"].ToString() == "unread")
                    {
                        _ddlPcsFour.SelectedValue = "-1";
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["fourth_pcs"].ToString() == "ok")
                    {
                        if (Convert.ToInt32(lblOkTotalPcsRepeater.Text) > 0)
                        {
                            lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) + 1).ToString();
                            if (lblOkTotalPcsRepeater.Text == "0" || lblOkTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("fourth_pcs" /*column Name*/, "breakage");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["fourth_pcs"].ToString() == "reject")
                    {
                        if (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) > 0)
                        {
                            lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) + 1).ToString();
                            if (lblRejectTotalPcsRepeater.Text == "0" || lblRejectTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblRejectTotalPcsRepeater.Text = (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("fourth_pcs" /*column Name*/, "breakage");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["fourth_pcs"].ToString() == "breakage")
                    {

                    }
                    else
                    {

                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);

                    }
                }
                else
                {
                    _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];
                    if (_dataTableItemStatusList.Rows[itemCheckboxindex]["fourth_pcs"].ToString() == "unread")
                    {
                        lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) + 1).ToString();

                        _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("fourth_pcs" /*column Name*/, "breakage");
                        _dataTableItemStatusList.AcceptChanges();
                        OverAllTotalPcs();
                        btnUpdateData.Visible = false;
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["fourth_pcs"].ToString() == "ok")
                    {
                        if (Convert.ToInt32(lblOkTotalPcsRepeater.Text) > 0)
                        {
                            lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) + 1).ToString();
                            if (lblOkTotalPcsRepeater.Text == "0" || lblOkTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("fourth_pcs" /*column Name*/, "breakage");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["fourth_pcs"].ToString() == "reject")
                    {
                        if (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) > 0)
                        {
                            lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) + 1).ToString();
                            if (lblRejectTotalPcsRepeater.Text == "0" || lblRejectTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblRejectTotalPcsRepeater.Text = (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("fourth_pcs" /*column Name*/, "breakage");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["fourth_pcs"].ToString() == "breakage")
                    {

                    }
                    else
                    {

                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);

                    }
                }
            }
            else if (_ddlPcsFour.SelectedValue == "2")
            {
                if (_totalAllPcs > _totalRecieved)
                {
                    _ddlPcsFour.SelectedValue = "-1";
                    ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);
                }
                else if (_totalAllPcs == _totalRecieved)
                {
                    _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];
                    if (_dataTableItemStatusList.Rows[itemCheckboxindex]["fourth_pcs"].ToString() == "unread")
                    {
                        _ddlPcsFour.SelectedValue = "-1";
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["fourth_pcs"].ToString() == "ok")
                    {
                        if (Convert.ToInt32(lblOkTotalPcsRepeater.Text) > 0)
                        {
                            lblRejectTotalPcsRepeater.Text = (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) + 1).ToString();
                            if (lblOkTotalPcsRepeater.Text == "0" || lblOkTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("fourth_pcs" /*column Name*/, "reject");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["fourth_pcs"].ToString() == "breakage")
                    {
                        if (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) > 0)
                        {
                            lblRejectTotalPcsRepeater.Text = (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) + 1).ToString();
                            if (lblBreakageTotalPcsRepeater.Text == "0" || lblBreakageTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("fourth_pcs" /*column Name*/, "reject");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["fourth_pcs"].ToString() == "reject")
                    {

                    }
                    else
                    {

                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);

                    }
                }
                else
                {
                    _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];
                    if (_dataTableItemStatusList.Rows[itemCheckboxindex]["fourth_pcs"].ToString() == "unread")
                    {
                        lblRejectTotalPcsRepeater.Text = (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) + 1).ToString();

                        _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("fourth_pcs" /*column Name*/, "reject");
                        _dataTableItemStatusList.AcceptChanges();
                        OverAllTotalPcs();
                        btnUpdateData.Visible = false;
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["fourth_pcs"].ToString() == "ok")
                    {
                        if (Convert.ToInt32(lblOkTotalPcsRepeater.Text) > 0)
                        {
                            lblRejectTotalPcsRepeater.Text = (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) + 1).ToString();
                            if (lblOkTotalPcsRepeater.Text == "0" || lblOkTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("fourth_pcs" /*column Name*/, "reject");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["fourth_pcs"].ToString() == "breakage")
                    {
                        if (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) > 0)
                        {
                            lblRejectTotalPcsRepeater.Text = (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) + 1).ToString();
                            if (lblBreakageTotalPcsRepeater.Text == "0" || lblBreakageTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("fourth_pcs" /*column Name*/, "reject");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["fourth_pcs"].ToString() == "reject")
                    {

                    }
                    else
                    {

                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);

                    }
                }
            }
            else
            {

            }
        }

        protected void ddlPcsFive_SelectedIndexChanged(object sender, EventArgs e)
        {
            DropDownList _ddlPcsFive = (DropDownList)sender;
            RepeaterItem item = (RepeaterItem)_ddlPcsFive.NamingContainer;
            Int32 itemCheckboxindex = ((RepeaterItem)_ddlPcsFive.NamingContainer).ItemIndex;
            //Int32 itemindex = ((RepeaterItem)_checkboxOne.NamingContainer).ItemIndex;
            Label lblOkTotalPcsRepeater = (Label)item.FindControl("lblOkTotalPcsRepeater");
            Label lblBreakageTotalPcsRepeater = (Label)item.FindControl("lblBreakageTotalPcsRepeater");
            Label lblRejectTotalPcsRepeater = (Label)item.FindControl("lblRejectTotalPcsRepeater");

            lblOkTotalPcsRepeater.Text = lblOkTotalPcsRepeater.Text == "" ? "0" : lblOkTotalPcsRepeater.Text;
            lblBreakageTotalPcsRepeater.Text = lblBreakageTotalPcsRepeater.Text == "" ? "0" : lblBreakageTotalPcsRepeater.Text;
            lblRejectTotalPcsRepeater.Text = lblRejectTotalPcsRepeater.Text == "" ? "0" : lblRejectTotalPcsRepeater.Text;

            int _totalAllPcs = Convert.ToInt32(txtTotalOkBreakReject.Text == "" ? "0" : txtTotalOkBreakReject.Text);
            int _totalRecieved = Convert.ToInt32(txtreceived.Text == "" ? "0" : txtreceived.Text);

            // -1 (Unselect), 1 (Ok), 0(Breakage) and 2 for Reejct


            if (_ddlPcsFive.SelectedValue == "-1")
            {
                _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];
                if (_dataTableItemStatusList.Rows[itemCheckboxindex]["fifth_pcs"].ToString() == "ok")
                {
                    _ddlPcsFive.SelectedValue = "1";
                }
                else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["fifth_pcs"].ToString() == "breakage")
                {
                    _ddlPcsFive.SelectedValue = "0";
                }
                else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["fifth_pcs"].ToString() == "reject")
                {
                    _ddlPcsFive.SelectedValue = "2";
                }
                else
                {

                }
            }
            else if (_ddlPcsFive.SelectedValue == "1")
            {
                if (_totalAllPcs > _totalRecieved)
                {
                    _ddlPcsFive.SelectedValue = "-1";
                    ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);
                }
                else if (_totalAllPcs == _totalRecieved)
                {
                    _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];
                    if (_dataTableItemStatusList.Rows[itemCheckboxindex]["fifth_pcs"].ToString() == "unread")
                    {
                        _ddlPcsFive.SelectedValue = "-1";
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["fifth_pcs"].ToString() == "breakage")
                    {
                        if (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) > 0)
                        {
                            lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) + 1).ToString();
                            if (lblBreakageTotalPcsRepeater.Text == "0" || lblBreakageTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("fifth_pcs" /*column Name*/, "ok");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["fifth_pcs"].ToString() == "reject")
                    {
                        if (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) > 0)
                        {
                            lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) + 1).ToString();
                            if (lblRejectTotalPcsRepeater.Text == "0" || lblRejectTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblRejectTotalPcsRepeater.Text = (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("fifth_pcs" /*column Name*/, "ok");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["fifth_pcs"].ToString() == "ok")
                    {

                    }
                    else
                    {

                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);

                    }
                }
                else
                {
                    _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];
                    if (_dataTableItemStatusList.Rows[itemCheckboxindex]["fifth_pcs"].ToString() == "unread")
                    {
                        lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) + 1).ToString();

                        _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("fifth_pcs" /*column Name*/, "ok");
                        _dataTableItemStatusList.AcceptChanges();
                        OverAllTotalPcs();
                        btnUpdateData.Visible = false;
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["fifth_pcs"].ToString() == "breakage")
                    {
                        if (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) > 0)
                        {
                            lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) + 1).ToString();
                            if (lblBreakageTotalPcsRepeater.Text == "0" || lblBreakageTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("fifth_pcs" /*column Name*/, "ok");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["fifth_pcs"].ToString() == "reject")
                    {
                        if (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) > 0)
                        {
                            lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) + 1).ToString();
                            if (lblRejectTotalPcsRepeater.Text == "0" || lblRejectTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblRejectTotalPcsRepeater.Text = (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("fifth_pcs" /*column Name*/, "ok");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["fifth_pcs"].ToString() == "ok")
                    {

                    }
                    else
                    {

                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);

                    }
                }

            }
            else if (_ddlPcsFive.SelectedValue == "0")
            {
                if (_totalAllPcs > _totalRecieved)
                {
                    _ddlPcsFive.SelectedValue = "-1";
                    ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);
                }
                else if (_totalAllPcs == _totalRecieved)
                {
                    _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];
                    if (_dataTableItemStatusList.Rows[itemCheckboxindex]["fifth_pcs"].ToString() == "unread")
                    {
                        _ddlPcsFive.SelectedValue = "-1";
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["fifth_pcs"].ToString() == "ok")
                    {
                        if (Convert.ToInt32(lblOkTotalPcsRepeater.Text) > 0)
                        {
                            lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) + 1).ToString();
                            if (lblOkTotalPcsRepeater.Text == "0" || lblOkTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("fifth_pcs" /*column Name*/, "breakage");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["fifth_pcs"].ToString() == "reject")
                    {
                        if (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) > 0)
                        {
                            lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) + 1).ToString();
                            if (lblRejectTotalPcsRepeater.Text == "0" || lblRejectTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblRejectTotalPcsRepeater.Text = (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("fifth_pcs" /*column Name*/, "breakage");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["fifth_pcs"].ToString() == "breakage")
                    {

                    }
                    else
                    {

                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);

                    }
                }
                else
                {
                    _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];
                    if (_dataTableItemStatusList.Rows[itemCheckboxindex]["fifth_pcs"].ToString() == "unread")
                    {
                        lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) + 1).ToString();

                        _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("fifth_pcs" /*column Name*/, "breakage");
                        _dataTableItemStatusList.AcceptChanges();
                        OverAllTotalPcs();
                        btnUpdateData.Visible = false;
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["fifth_pcs"].ToString() == "ok")
                    {
                        if (Convert.ToInt32(lblOkTotalPcsRepeater.Text) > 0)
                        {
                            lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) + 1).ToString();
                            if (lblOkTotalPcsRepeater.Text == "0" || lblOkTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("fifth_pcs" /*column Name*/, "breakage");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["fifth_pcs"].ToString() == "reject")
                    {
                        if (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) > 0)
                        {
                            lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) + 1).ToString();
                            if (lblRejectTotalPcsRepeater.Text == "0" || lblRejectTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblRejectTotalPcsRepeater.Text = (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("fifth_pcs" /*column Name*/, "breakage");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["fifth_pcs"].ToString() == "breakage")
                    {

                    }
                    else
                    {

                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);

                    }
                }
            }
            else if (_ddlPcsFive.SelectedValue == "2")
            {
                if (_totalAllPcs > _totalRecieved)
                {
                    _ddlPcsFive.SelectedValue = "-1";
                    ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);
                }
                else if (_totalAllPcs == _totalRecieved)
                {
                    _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];
                    if (_dataTableItemStatusList.Rows[itemCheckboxindex]["fifth_pcs"].ToString() == "unread")
                    {
                        _ddlPcsFive.SelectedValue = "-1";
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["fifth_pcs"].ToString() == "ok")
                    {
                        if (Convert.ToInt32(lblOkTotalPcsRepeater.Text) > 0)
                        {
                            lblRejectTotalPcsRepeater.Text = (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) + 1).ToString();
                            if (lblOkTotalPcsRepeater.Text == "0" || lblOkTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("fifth_pcs" /*column Name*/, "reject");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["fifth_pcs"].ToString() == "breakage")
                    {
                        if (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) > 0)
                        {
                            lblRejectTotalPcsRepeater.Text = (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) + 1).ToString();
                            if (lblBreakageTotalPcsRepeater.Text == "0" || lblBreakageTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("fifth_pcs" /*column Name*/, "reject");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["fifth_pcs"].ToString() == "reject")
                    {

                    }
                    else
                    {

                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);

                    }
                }
                else
                {
                    _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];
                    if (_dataTableItemStatusList.Rows[itemCheckboxindex]["fifth_pcs"].ToString() == "unread")
                    {
                        lblRejectTotalPcsRepeater.Text = (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) + 1).ToString();

                        _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("fifth_pcs" /*column Name*/, "reject");
                        _dataTableItemStatusList.AcceptChanges();
                        OverAllTotalPcs();
                        btnUpdateData.Visible = false;
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["fifth_pcs"].ToString() == "ok")
                    {
                        if (Convert.ToInt32(lblOkTotalPcsRepeater.Text) > 0)
                        {
                            lblRejectTotalPcsRepeater.Text = (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) + 1).ToString();
                            if (lblOkTotalPcsRepeater.Text == "0" || lblOkTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("fifth_pcs" /*column Name*/, "reject");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["fifth_pcs"].ToString() == "breakage")
                    {
                        if (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) > 0)
                        {
                            lblRejectTotalPcsRepeater.Text = (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) + 1).ToString();
                            if (lblBreakageTotalPcsRepeater.Text == "0" || lblBreakageTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("fifth_pcs" /*column Name*/, "reject");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["fifth_pcs"].ToString() == "reject")
                    {

                    }
                    else
                    {

                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);

                    }
                }
            }
            else
            {

            }
        }

        protected void ddlPcsTen_SelectedIndexChanged(object sender, EventArgs e)
        {
            DropDownList _ddlPcsTen = (DropDownList)sender;
            RepeaterItem item = (RepeaterItem)_ddlPcsTen.NamingContainer;
            Int32 itemCheckboxindex = ((RepeaterItem)_ddlPcsTen.NamingContainer).ItemIndex;
            //Int32 itemindex = ((RepeaterItem)_checkboxOne.NamingContainer).ItemIndex;
            Label lblOkTotalPcsRepeater = (Label)item.FindControl("lblOkTotalPcsRepeater");
            Label lblBreakageTotalPcsRepeater = (Label)item.FindControl("lblBreakageTotalPcsRepeater");
            Label lblRejectTotalPcsRepeater = (Label)item.FindControl("lblRejectTotalPcsRepeater");

            lblOkTotalPcsRepeater.Text = lblOkTotalPcsRepeater.Text == "" ? "0" : lblOkTotalPcsRepeater.Text;
            lblBreakageTotalPcsRepeater.Text = lblBreakageTotalPcsRepeater.Text == "" ? "0" : lblBreakageTotalPcsRepeater.Text;
            lblRejectTotalPcsRepeater.Text = lblRejectTotalPcsRepeater.Text == "" ? "0" : lblRejectTotalPcsRepeater.Text;

            int _totalAllPcs = Convert.ToInt32(txtTotalOkBreakReject.Text == "" ? "0" : txtTotalOkBreakReject.Text);
            int _totalRecieved = Convert.ToInt32(txtreceived.Text == "" ? "0" : txtreceived.Text);

            // -1 (Unselect), 1 (Ok), 0(Breakage) and 2 for Reejct

            if (_ddlPcsTen.SelectedValue == "-1")
            {
                _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];
                if (_dataTableItemStatusList.Rows[itemCheckboxindex]["tenth_pcs"].ToString() == "ok")
                {
                    _ddlPcsTen.SelectedValue = "1";
                }
                else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["tenth_pcs"].ToString() == "breakage")
                {
                    _ddlPcsTen.SelectedValue = "0";
                }
                else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["tenth_pcs"].ToString() == "reject")
                {
                    _ddlPcsTen.SelectedValue = "2";
                }
                else
                {

                }
            }
            else if (_ddlPcsTen.SelectedValue == "1")
            {
                if (_totalAllPcs > _totalRecieved)
                {
                    _ddlPcsTen.SelectedValue = "-1";
                    ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);
                }
                else if (_totalAllPcs == _totalRecieved)
                {
                    _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];
                    if (_dataTableItemStatusList.Rows[itemCheckboxindex]["tenth_pcs"].ToString() == "unread")
                    {
                        _ddlPcsTen.SelectedValue = "-1";
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["tenth_pcs"].ToString() == "breakage")
                    {
                        if (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) > 0)
                        {
                            lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) + 1).ToString();
                            if (lblBreakageTotalPcsRepeater.Text == "0" || lblBreakageTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("tenth_pcs" /*column Name*/, "ok");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["tenth_pcs"].ToString() == "reject")
                    {
                        if (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) > 0)
                        {
                            lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) + 1).ToString();
                            if (lblRejectTotalPcsRepeater.Text == "0" || lblRejectTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblRejectTotalPcsRepeater.Text = (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("tenth_pcs" /*column Name*/, "ok");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["tenth_pcs"].ToString() == "ok")
                    {

                    }
                    else
                    {

                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);

                    }
                }
                else
                {
                    _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];
                    if (_dataTableItemStatusList.Rows[itemCheckboxindex]["tenth_pcs"].ToString() == "unread")
                    {
                        lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) + 1).ToString();

                        _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("tenth_pcs" /*column Name*/, "ok");
                        _dataTableItemStatusList.AcceptChanges();
                        OverAllTotalPcs();
                        btnUpdateData.Visible = false;
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["tenth_pcs"].ToString() == "breakage")
                    {
                        if (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) > 0)
                        {
                            lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) + 1).ToString();
                            if (lblBreakageTotalPcsRepeater.Text == "0" || lblBreakageTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("tenth_pcs" /*column Name*/, "ok");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["tenth_pcs"].ToString() == "reject")
                    {
                        if (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) > 0)
                        {
                            lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) + 1).ToString();
                            if (lblRejectTotalPcsRepeater.Text == "0" || lblRejectTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblRejectTotalPcsRepeater.Text = (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("tenth_pcs" /*column Name*/, "ok");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["tenth_pcs"].ToString() == "ok")
                    {

                    }
                    else
                    {

                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);

                    }
                }

            }
            else if (_ddlPcsTen.SelectedValue == "0")
            {
                if (_totalAllPcs > _totalRecieved)
                {
                    _ddlPcsTen.SelectedValue = "-1";
                    ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);
                }
                else if (_totalAllPcs == _totalRecieved)
                {
                    _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];
                    if (_dataTableItemStatusList.Rows[itemCheckboxindex]["tenth_pcs"].ToString() == "unread")
                    {
                        _ddlPcsTen.SelectedValue = "-1";
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["tenth_pcs"].ToString() == "ok")
                    {
                        if (Convert.ToInt32(lblOkTotalPcsRepeater.Text) > 0)
                        {
                            lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) + 1).ToString();
                            if (lblOkTotalPcsRepeater.Text == "0" || lblOkTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("tenth_pcs" /*column Name*/, "breakage");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["tenth_pcs"].ToString() == "reject")
                    {
                        if (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) > 0)
                        {
                            lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) + 1).ToString();
                            if (lblRejectTotalPcsRepeater.Text == "0" || lblRejectTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblRejectTotalPcsRepeater.Text = (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("tenth_pcs" /*column Name*/, "breakage");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["tenth_pcs"].ToString() == "breakage")
                    {

                    }
                    else
                    {

                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);

                    }
                }
                else
                {
                    _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];
                    if (_dataTableItemStatusList.Rows[itemCheckboxindex]["tenth_pcs"].ToString() == "unread")
                    {
                        lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) + 1).ToString();

                        _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("tenth_pcs" /*column Name*/, "breakage");
                        _dataTableItemStatusList.AcceptChanges();
                        OverAllTotalPcs();
                        btnUpdateData.Visible = false;
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["tenth_pcs"].ToString() == "ok")
                    {
                        if (Convert.ToInt32(lblOkTotalPcsRepeater.Text) > 0)
                        {
                            lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) + 1).ToString();
                            if (lblOkTotalPcsRepeater.Text == "0" || lblOkTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("tenth_pcs" /*column Name*/, "breakage");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["tenth_pcs"].ToString() == "reject")
                    {
                        if (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) > 0)
                        {
                            lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) + 1).ToString();
                            if (lblRejectTotalPcsRepeater.Text == "0" || lblRejectTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblRejectTotalPcsRepeater.Text = (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("tenth_pcs" /*column Name*/, "breakage");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["tenth_pcs"].ToString() == "breakage")
                    {

                    }
                    else
                    {

                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);

                    }
                }
            }
            else if (_ddlPcsTen.SelectedValue == "2")
            {
                if (_totalAllPcs > _totalRecieved)
                {
                    _ddlPcsTen.SelectedValue = "-1";
                    ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);
                }
                else if (_totalAllPcs == _totalRecieved)
                {
                    _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];
                    if (_dataTableItemStatusList.Rows[itemCheckboxindex]["tenth_pcs"].ToString() == "unread")
                    {
                        _ddlPcsTen.SelectedValue = "-1";
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["tenth_pcs"].ToString() == "ok")
                    {
                        if (Convert.ToInt32(lblOkTotalPcsRepeater.Text) > 0)
                        {
                            lblRejectTotalPcsRepeater.Text = (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) + 1).ToString();
                            if (lblOkTotalPcsRepeater.Text == "0" || lblOkTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("tenth_pcs" /*column Name*/, "reject");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["tenth_pcs"].ToString() == "breakage")
                    {
                        if (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) > 0)
                        {
                            lblRejectTotalPcsRepeater.Text = (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) + 1).ToString();
                            if (lblBreakageTotalPcsRepeater.Text == "0" || lblBreakageTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("tenth_pcs" /*column Name*/, "reject");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["tenth_pcs"].ToString() == "reject")
                    {

                    }
                    else
                    {

                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);

                    }
                }
                else
                {
                    _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];
                    if (_dataTableItemStatusList.Rows[itemCheckboxindex]["tenth_pcs"].ToString() == "unread")
                    {
                        lblRejectTotalPcsRepeater.Text = (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) + 1).ToString();

                        _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("tenth_pcs" /*column Name*/, "reject");
                        _dataTableItemStatusList.AcceptChanges();
                        OverAllTotalPcs();
                        btnUpdateData.Visible = false;
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["tenth_pcs"].ToString() == "ok")
                    {
                        if (Convert.ToInt32(lblOkTotalPcsRepeater.Text) > 0)
                        {
                            lblRejectTotalPcsRepeater.Text = (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) + 1).ToString();
                            if (lblOkTotalPcsRepeater.Text == "0" || lblOkTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("tenth_pcs" /*column Name*/, "reject");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["tenth_pcs"].ToString() == "breakage")
                    {
                        if (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) > 0)
                        {
                            lblRejectTotalPcsRepeater.Text = (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) + 1).ToString();
                            if (lblBreakageTotalPcsRepeater.Text == "0" || lblBreakageTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("tenth_pcs" /*column Name*/, "reject");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["tenth_pcs"].ToString() == "reject")
                    {

                    }
                    else
                    {

                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);

                    }
                }
            }
            else
            {

            }
        }

        protected void ddlPcsNine_SelectedIndexChanged(object sender, EventArgs e)
        {
            DropDownList _ddlPcsNine = (DropDownList)sender;
            RepeaterItem item = (RepeaterItem)_ddlPcsNine.NamingContainer;
            Int32 itemCheckboxindex = ((RepeaterItem)_ddlPcsNine.NamingContainer).ItemIndex;
            //Int32 itemindex = ((RepeaterItem)_checkboxOne.NamingContainer).ItemIndex;
            Label lblOkTotalPcsRepeater = (Label)item.FindControl("lblOkTotalPcsRepeater");
            Label lblBreakageTotalPcsRepeater = (Label)item.FindControl("lblBreakageTotalPcsRepeater");
            Label lblRejectTotalPcsRepeater = (Label)item.FindControl("lblRejectTotalPcsRepeater");

            lblOkTotalPcsRepeater.Text = lblOkTotalPcsRepeater.Text == "" ? "0" : lblOkTotalPcsRepeater.Text;
            lblBreakageTotalPcsRepeater.Text = lblBreakageTotalPcsRepeater.Text == "" ? "0" : lblBreakageTotalPcsRepeater.Text;
            lblRejectTotalPcsRepeater.Text = lblRejectTotalPcsRepeater.Text == "" ? "0" : lblRejectTotalPcsRepeater.Text;

            int _totalAllPcs = Convert.ToInt32(txtTotalOkBreakReject.Text == "" ? "0" : txtTotalOkBreakReject.Text);
            int _totalRecieved = Convert.ToInt32(txtreceived.Text == "" ? "0" : txtreceived.Text);

            // -1 (Unselect), 1 (Ok), 0(Breakage) and 2 for Reejct


            if (_ddlPcsNine.SelectedValue == "-1")
            {
                _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];
                if (_dataTableItemStatusList.Rows[itemCheckboxindex]["ninth_pcs"].ToString() == "ok")
                {
                    _ddlPcsNine.SelectedValue = "1";
                }
                else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["ninth_pcs"].ToString() == "breakage")
                {
                    _ddlPcsNine.SelectedValue = "0";
                }
                else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["ninth_pcs"].ToString() == "reject")
                {
                    _ddlPcsNine.SelectedValue = "2";
                }
                else
                {

                }
            }
            else if (_ddlPcsNine.SelectedValue == "1")
            {
                if (_totalAllPcs > _totalRecieved)
                {
                    _ddlPcsNine.SelectedValue = "-1";
                    ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);
                }
                else if (_totalAllPcs == _totalRecieved)
                {
                    _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];
                    if (_dataTableItemStatusList.Rows[itemCheckboxindex]["ninth_pcs"].ToString() == "unread")
                    {
                        _ddlPcsNine.SelectedValue = "-1";
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["ninth_pcs"].ToString() == "breakage")
                    {
                        if (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) > 0)
                        {
                            lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) + 1).ToString();
                            if (lblBreakageTotalPcsRepeater.Text == "0" || lblBreakageTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("ninth_pcs" /*column Name*/, "ok");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["ninth_pcs"].ToString() == "reject")
                    {
                        if (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) > 0)
                        {
                            lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) + 1).ToString();
                            if (lblRejectTotalPcsRepeater.Text == "0" || lblRejectTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblRejectTotalPcsRepeater.Text = (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("ninth_pcs" /*column Name*/, "ok");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["ninth_pcs"].ToString() == "ok")
                    {

                    }
                    else
                    {

                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);

                    }
                }
                else
                {
                    _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];
                    if (_dataTableItemStatusList.Rows[itemCheckboxindex]["ninth_pcs"].ToString() == "unread")
                    {
                        lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) + 1).ToString();

                        _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("ninth_pcs" /*column Name*/, "ok");
                        _dataTableItemStatusList.AcceptChanges();
                        OverAllTotalPcs();
                        btnUpdateData.Visible = false;
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["ninth_pcs"].ToString() == "breakage")
                    {
                        if (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) > 0)
                        {
                            lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) + 1).ToString();
                            if (lblBreakageTotalPcsRepeater.Text == "0" || lblBreakageTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("ninth_pcs" /*column Name*/, "ok");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["ninth_pcs"].ToString() == "reject")
                    {
                        if (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) > 0)
                        {
                            lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) + 1).ToString();
                            if (lblRejectTotalPcsRepeater.Text == "0" || lblRejectTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblRejectTotalPcsRepeater.Text = (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("ninth_pcs" /*column Name*/, "ok");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["ninth_pcs"].ToString() == "ok")
                    {

                    }
                    else
                    {

                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);

                    }
                }

            }
            else if (_ddlPcsNine.SelectedValue == "0")
            {
                if (_totalAllPcs > _totalRecieved)
                {
                    _ddlPcsNine.SelectedValue = "-1";
                    ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);
                }
                else if (_totalAllPcs == _totalRecieved)
                {
                    _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];
                    if (_dataTableItemStatusList.Rows[itemCheckboxindex]["ninth_pcs"].ToString() == "unread")
                    {
                        _ddlPcsNine.SelectedValue = "-1";
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["ninth_pcs"].ToString() == "ok")
                    {
                        if (Convert.ToInt32(lblOkTotalPcsRepeater.Text) > 0)
                        {
                            lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) + 1).ToString();
                            if (lblOkTotalPcsRepeater.Text == "0" || lblOkTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("ninth_pcs" /*column Name*/, "breakage");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["ninth_pcs"].ToString() == "reject")
                    {
                        if (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) > 0)
                        {
                            lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) + 1).ToString();
                            if (lblRejectTotalPcsRepeater.Text == "0" || lblRejectTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblRejectTotalPcsRepeater.Text = (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("ninth_pcs" /*column Name*/, "breakage");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["ninth_pcs"].ToString() == "breakage")
                    {

                    }
                    else
                    {

                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);

                    }
                }
                else
                {
                    _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];
                    if (_dataTableItemStatusList.Rows[itemCheckboxindex]["ninth_pcs"].ToString() == "unread")
                    {
                        lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) + 1).ToString();

                        _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("ninth_pcs" /*column Name*/, "breakage");
                        _dataTableItemStatusList.AcceptChanges();
                        OverAllTotalPcs();
                        btnUpdateData.Visible = false;
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["ninth_pcs"].ToString() == "ok")
                    {
                        if (Convert.ToInt32(lblOkTotalPcsRepeater.Text) > 0)
                        {
                            lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) + 1).ToString();
                            if (lblOkTotalPcsRepeater.Text == "0" || lblOkTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("ninth_pcs" /*column Name*/, "breakage");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["ninth_pcs"].ToString() == "reject")
                    {
                        if (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) > 0)
                        {
                            lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) + 1).ToString();
                            if (lblRejectTotalPcsRepeater.Text == "0" || lblRejectTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblRejectTotalPcsRepeater.Text = (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("ninth_pcs" /*column Name*/, "breakage");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["ninth_pcs"].ToString() == "breakage")
                    {

                    }
                    else
                    {

                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);

                    }
                }
            }
            else if (_ddlPcsNine.SelectedValue == "2")
            {
                if (_totalAllPcs > _totalRecieved)
                {
                    _ddlPcsNine.SelectedValue = "-1";
                    ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);
                }
                else if (_totalAllPcs == _totalRecieved)
                {
                    _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];
                    if (_dataTableItemStatusList.Rows[itemCheckboxindex]["ninth_pcs"].ToString() == "unread")
                    {
                        _ddlPcsNine.SelectedValue = "-1";
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["ninth_pcs"].ToString() == "ok")
                    {
                        if (Convert.ToInt32(lblOkTotalPcsRepeater.Text) > 0)
                        {
                            lblRejectTotalPcsRepeater.Text = (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) + 1).ToString();
                            if (lblOkTotalPcsRepeater.Text == "0" || lblOkTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("ninth_pcs" /*column Name*/, "reject");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["ninth_pcs"].ToString() == "breakage")
                    {
                        if (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) > 0)
                        {
                            lblRejectTotalPcsRepeater.Text = (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) + 1).ToString();
                            if (lblBreakageTotalPcsRepeater.Text == "0" || lblBreakageTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("ninth_pcs" /*column Name*/, "reject");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["ninth_pcs"].ToString() == "reject")
                    {

                    }
                    else
                    {

                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);

                    }
                }
                else
                {
                    _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];
                    if (_dataTableItemStatusList.Rows[itemCheckboxindex]["ninth_pcs"].ToString() == "unread")
                    {
                        lblRejectTotalPcsRepeater.Text = (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) + 1).ToString();

                        _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("ninth_pcs" /*column Name*/, "reject");
                        _dataTableItemStatusList.AcceptChanges();
                        OverAllTotalPcs();
                        btnUpdateData.Visible = false;
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["ninth_pcs"].ToString() == "ok")
                    {
                        if (Convert.ToInt32(lblOkTotalPcsRepeater.Text) > 0)
                        {
                            lblRejectTotalPcsRepeater.Text = (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) + 1).ToString();
                            if (lblOkTotalPcsRepeater.Text == "0" || lblOkTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("ninth_pcs" /*column Name*/, "reject");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["ninth_pcs"].ToString() == "breakage")
                    {
                        if (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) > 0)
                        {
                            lblRejectTotalPcsRepeater.Text = (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) + 1).ToString();
                            if (lblBreakageTotalPcsRepeater.Text == "0" || lblBreakageTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("ninth_pcs" /*column Name*/, "reject");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["ninth_pcs"].ToString() == "reject")
                    {

                    }
                    else
                    {

                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);

                    }
                }
            }
            else
            {

            }
        }

        protected void ddlPcsEight_SelectedIndexChanged(object sender, EventArgs e)
        {
            DropDownList _ddlPcsEight = (DropDownList)sender;
            RepeaterItem item = (RepeaterItem)_ddlPcsEight.NamingContainer;
            Int32 itemCheckboxindex = ((RepeaterItem)_ddlPcsEight.NamingContainer).ItemIndex;
            //Int32 itemindex = ((RepeaterItem)_checkboxOne.NamingContainer).ItemIndex;
            Label lblOkTotalPcsRepeater = (Label)item.FindControl("lblOkTotalPcsRepeater");
            Label lblBreakageTotalPcsRepeater = (Label)item.FindControl("lblBreakageTotalPcsRepeater");
            Label lblRejectTotalPcsRepeater = (Label)item.FindControl("lblRejectTotalPcsRepeater");

            lblOkTotalPcsRepeater.Text = lblOkTotalPcsRepeater.Text == "" ? "0" : lblOkTotalPcsRepeater.Text;
            lblBreakageTotalPcsRepeater.Text = lblBreakageTotalPcsRepeater.Text == "" ? "0" : lblBreakageTotalPcsRepeater.Text;
            lblRejectTotalPcsRepeater.Text = lblRejectTotalPcsRepeater.Text == "" ? "0" : lblRejectTotalPcsRepeater.Text;

            int _totalAllPcs = Convert.ToInt32(txtTotalOkBreakReject.Text == "" ? "0" : txtTotalOkBreakReject.Text);
            int _totalRecieved = Convert.ToInt32(txtreceived.Text == "" ? "0" : txtreceived.Text);

            // -1 (Unselect), 1 (Ok), 0(Breakage) and 2 for Reejct


            if (_ddlPcsEight.SelectedValue == "-1")
            {
                _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];
                if (_dataTableItemStatusList.Rows[itemCheckboxindex]["eight_pcs"].ToString() == "ok")
                {
                    _ddlPcsEight.SelectedValue = "1";
                }
                else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["eight_pcs"].ToString() == "breakage")
                {
                    _ddlPcsEight.SelectedValue = "0";
                }
                else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["eight_pcs"].ToString() == "reject")
                {
                    _ddlPcsEight.SelectedValue = "2";
                }
                else
                {

                }
            }
            else if (_ddlPcsEight.SelectedValue == "1")
            {
                if (_totalAllPcs > _totalRecieved)
                {
                    _ddlPcsEight.SelectedValue = "-1";
                    ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);
                }
                else if (_totalAllPcs == _totalRecieved)
                {
                    _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];
                    if (_dataTableItemStatusList.Rows[itemCheckboxindex]["eight_pcs"].ToString() == "unread")
                    {
                        _ddlPcsEight.SelectedValue = "-1";
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["eight_pcs"].ToString() == "breakage")
                    {
                        if (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) > 0)
                        {
                            lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) + 1).ToString();
                            if (lblBreakageTotalPcsRepeater.Text == "0" || lblBreakageTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("eight_pcs" /*column Name*/, "ok");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["eight_pcs"].ToString() == "reject")
                    {
                        if (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) > 0)
                        {
                            lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) + 1).ToString();
                            if (lblRejectTotalPcsRepeater.Text == "0" || lblRejectTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblRejectTotalPcsRepeater.Text = (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("eight_pcs" /*column Name*/, "ok");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["eight_pcs"].ToString() == "ok")
                    {

                    }
                    else
                    {

                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);

                    }
                }
                else
                {
                    _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];
                    if (_dataTableItemStatusList.Rows[itemCheckboxindex]["eight_pcs"].ToString() == "unread")
                    {
                        lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) + 1).ToString();

                        _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("eight_pcs" /*column Name*/, "ok");
                        _dataTableItemStatusList.AcceptChanges();
                        OverAllTotalPcs();
                        btnUpdateData.Visible = false;
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["eight_pcs"].ToString() == "breakage")
                    {
                        if (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) > 0)
                        {
                            lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) + 1).ToString();
                            if (lblBreakageTotalPcsRepeater.Text == "0" || lblBreakageTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("eight_pcs" /*column Name*/, "ok");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["eight_pcs"].ToString() == "reject")
                    {
                        if (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) > 0)
                        {
                            lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) + 1).ToString();
                            if (lblRejectTotalPcsRepeater.Text == "0" || lblRejectTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblRejectTotalPcsRepeater.Text = (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("eight_pcs" /*column Name*/, "ok");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["eight_pcs"].ToString() == "ok")
                    {

                    }
                    else
                    {

                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);

                    }
                }

            }
            else if (_ddlPcsEight.SelectedValue == "0")
            {
                if (_totalAllPcs > _totalRecieved)
                {
                    _ddlPcsEight.SelectedValue = "-1";
                    ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);
                }
                else if (_totalAllPcs == _totalRecieved)
                {
                    _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];
                    if (_dataTableItemStatusList.Rows[itemCheckboxindex]["eight_pcs"].ToString() == "unread")
                    {
                        _ddlPcsEight.SelectedValue = "-1";
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["eight_pcs"].ToString() == "ok")
                    {
                        if (Convert.ToInt32(lblOkTotalPcsRepeater.Text) > 0)
                        {
                            lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) + 1).ToString();
                            if (lblOkTotalPcsRepeater.Text == "0" || lblOkTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("eight_pcs" /*column Name*/, "breakage");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["eight_pcs"].ToString() == "reject")
                    {
                        if (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) > 0)
                        {
                            lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) + 1).ToString();
                            if (lblRejectTotalPcsRepeater.Text == "0" || lblRejectTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblRejectTotalPcsRepeater.Text = (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("eight_pcs" /*column Name*/, "breakage");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["eight_pcs"].ToString() == "breakage")
                    {

                    }
                    else
                    {

                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);

                    }
                }
                else
                {
                    _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];
                    if (_dataTableItemStatusList.Rows[itemCheckboxindex]["eight_pcs"].ToString() == "unread")
                    {
                        lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) + 1).ToString();

                        _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("eight_pcs" /*column Name*/, "breakage");
                        _dataTableItemStatusList.AcceptChanges();
                        OverAllTotalPcs();
                        btnUpdateData.Visible = false;
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["eight_pcs"].ToString() == "ok")
                    {
                        if (Convert.ToInt32(lblOkTotalPcsRepeater.Text) > 0)
                        {
                            lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) + 1).ToString();
                            if (lblOkTotalPcsRepeater.Text == "0" || lblOkTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("eight_pcs" /*column Name*/, "breakage");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["eight_pcs"].ToString() == "reject")
                    {
                        if (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) > 0)
                        {
                            lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) + 1).ToString();
                            if (lblRejectTotalPcsRepeater.Text == "0" || lblRejectTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblRejectTotalPcsRepeater.Text = (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("eight_pcs" /*column Name*/, "breakage");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["eight_pcs"].ToString() == "breakage")
                    {

                    }
                    else
                    {

                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);

                    }
                }
            }
            else if (_ddlPcsEight.SelectedValue == "2")
            {
                if (_totalAllPcs > _totalRecieved)
                {
                    _ddlPcsEight.SelectedValue = "-1";
                    ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);
                }
                else if (_totalAllPcs == _totalRecieved)
                {
                    _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];
                    if (_dataTableItemStatusList.Rows[itemCheckboxindex]["eight_pcs"].ToString() == "unread")
                    {
                        _ddlPcsEight.SelectedValue = "-1";
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["eight_pcs"].ToString() == "ok")
                    {
                        if (Convert.ToInt32(lblOkTotalPcsRepeater.Text) > 0)
                        {
                            lblRejectTotalPcsRepeater.Text = (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) + 1).ToString();
                            if (lblOkTotalPcsRepeater.Text == "0" || lblOkTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("eight_pcs" /*column Name*/, "reject");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["eight_pcs"].ToString() == "breakage")
                    {
                        if (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) > 0)
                        {
                            lblRejectTotalPcsRepeater.Text = (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) + 1).ToString();
                            if (lblBreakageTotalPcsRepeater.Text == "0" || lblBreakageTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("eight_pcs" /*column Name*/, "reject");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["eight_pcs"].ToString() == "reject")
                    {

                    }
                    else
                    {

                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);

                    }
                }
                else
                {
                    _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];
                    if (_dataTableItemStatusList.Rows[itemCheckboxindex]["eight_pcs"].ToString() == "unread")
                    {
                        lblRejectTotalPcsRepeater.Text = (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) + 1).ToString();

                        _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("eight_pcs" /*column Name*/, "reject");
                        _dataTableItemStatusList.AcceptChanges();
                        OverAllTotalPcs();
                        btnUpdateData.Visible = false;
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["eight_pcs"].ToString() == "ok")
                    {
                        if (Convert.ToInt32(lblOkTotalPcsRepeater.Text) > 0)
                        {
                            lblRejectTotalPcsRepeater.Text = (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) + 1).ToString();
                            if (lblOkTotalPcsRepeater.Text == "0" || lblOkTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("eight_pcs" /*column Name*/, "reject");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["eight_pcs"].ToString() == "breakage")
                    {
                        if (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) > 0)
                        {
                            lblRejectTotalPcsRepeater.Text = (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) + 1).ToString();
                            if (lblBreakageTotalPcsRepeater.Text == "0" || lblBreakageTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("eight_pcs" /*column Name*/, "reject");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["eight_pcs"].ToString() == "reject")
                    {

                    }
                    else
                    {

                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);

                    }
                }
            }
            else
            {

            }
        }

        protected void ddlPcsSeven_SelectedIndexChanged(object sender, EventArgs e)
        {
            DropDownList _ddlPcsSeven = (DropDownList)sender;
            RepeaterItem item = (RepeaterItem)_ddlPcsSeven.NamingContainer;
            Int32 itemCheckboxindex = ((RepeaterItem)_ddlPcsSeven.NamingContainer).ItemIndex;
            //Int32 itemindex = ((RepeaterItem)_checkboxOne.NamingContainer).ItemIndex;
            Label lblOkTotalPcsRepeater = (Label)item.FindControl("lblOkTotalPcsRepeater");
            Label lblBreakageTotalPcsRepeater = (Label)item.FindControl("lblBreakageTotalPcsRepeater");
            Label lblRejectTotalPcsRepeater = (Label)item.FindControl("lblRejectTotalPcsRepeater");

            lblOkTotalPcsRepeater.Text = lblOkTotalPcsRepeater.Text == "" ? "0" : lblOkTotalPcsRepeater.Text;
            lblBreakageTotalPcsRepeater.Text = lblBreakageTotalPcsRepeater.Text == "" ? "0" : lblBreakageTotalPcsRepeater.Text;
            lblRejectTotalPcsRepeater.Text = lblRejectTotalPcsRepeater.Text == "" ? "0" : lblRejectTotalPcsRepeater.Text;

            int _totalAllPcs = Convert.ToInt32(txtTotalOkBreakReject.Text == "" ? "0" : txtTotalOkBreakReject.Text);
            int _totalRecieved = Convert.ToInt32(txtreceived.Text == "" ? "0" : txtreceived.Text);

            // -1 (Unselect), 1 (Ok), 0(Breakage) and 2 for Reejct


            if (_ddlPcsSeven.SelectedValue == "-1")
            {
                _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];
                if (_dataTableItemStatusList.Rows[itemCheckboxindex]["seventh_pcs"].ToString() == "ok")
                {
                    _ddlPcsSeven.SelectedValue = "1";
                }
                else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["seventh_pcs"].ToString() == "breakage")
                {
                    _ddlPcsSeven.SelectedValue = "0";
                }
                else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["seventh_pcs"].ToString() == "reject")
                {
                    _ddlPcsSeven.SelectedValue = "2";
                }
                else
                {

                }
            }
            else if (_ddlPcsSeven.SelectedValue == "1")
            {
                if (_totalAllPcs > _totalRecieved)
                {
                    _ddlPcsSeven.SelectedValue = "-1";
                    ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);
                }
                else if (_totalAllPcs == _totalRecieved)
                {
                    _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];
                    if (_dataTableItemStatusList.Rows[itemCheckboxindex]["seventh_pcs"].ToString() == "unread")
                    {
                        _ddlPcsSeven.SelectedValue = "-1";
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["seventh_pcs"].ToString() == "breakage")
                    {
                        if (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) > 0)
                        {
                            lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) + 1).ToString();
                            if (lblBreakageTotalPcsRepeater.Text == "0" || lblBreakageTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("seventh_pcs" /*column Name*/, "ok");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["seventh_pcs"].ToString() == "reject")
                    {
                        if (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) > 0)
                        {
                            lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) + 1).ToString();
                            if (lblRejectTotalPcsRepeater.Text == "0" || lblRejectTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblRejectTotalPcsRepeater.Text = (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("seventh_pcs" /*column Name*/, "ok");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["seventh_pcs"].ToString() == "ok")
                    {

                    }
                    else
                    {

                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);

                    }
                }
                else
                {
                    _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];
                    if (_dataTableItemStatusList.Rows[itemCheckboxindex]["seventh_pcs"].ToString() == "unread")
                    {
                        lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) + 1).ToString();

                        _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("seventh_pcs" /*column Name*/, "ok");
                        _dataTableItemStatusList.AcceptChanges();
                        OverAllTotalPcs();
                        btnUpdateData.Visible = false;
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["seventh_pcs"].ToString() == "breakage")
                    {
                        if (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) > 0)
                        {
                            lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) + 1).ToString();
                            if (lblBreakageTotalPcsRepeater.Text == "0" || lblBreakageTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("seventh_pcs" /*column Name*/, "ok");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["seventh_pcs"].ToString() == "reject")
                    {
                        if (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) > 0)
                        {
                            lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) + 1).ToString();
                            if (lblRejectTotalPcsRepeater.Text == "0" || lblRejectTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblRejectTotalPcsRepeater.Text = (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("seventh_pcs" /*column Name*/, "ok");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["seventh_pcs"].ToString() == "ok")
                    {

                    }
                    else
                    {

                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);

                    }
                }

            }
            else if (_ddlPcsSeven.SelectedValue == "0")
            {
                if (_totalAllPcs > _totalRecieved)
                {
                    _ddlPcsSeven.SelectedValue = "-1";
                    ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);
                }
                else if (_totalAllPcs == _totalRecieved)
                {
                    _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];
                    if (_dataTableItemStatusList.Rows[itemCheckboxindex]["seventh_pcs"].ToString() == "unread")
                    {
                        _ddlPcsSeven.SelectedValue = "-1";
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["seventh_pcs"].ToString() == "ok")
                    {
                        if (Convert.ToInt32(lblOkTotalPcsRepeater.Text) > 0)
                        {
                            lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) + 1).ToString();
                            if (lblOkTotalPcsRepeater.Text == "0" || lblOkTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("seventh_pcs" /*column Name*/, "breakage");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["seventh_pcs"].ToString() == "reject")
                    {
                        if (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) > 0)
                        {
                            lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) + 1).ToString();
                            if (lblRejectTotalPcsRepeater.Text == "0" || lblRejectTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblRejectTotalPcsRepeater.Text = (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("seventh_pcs" /*column Name*/, "breakage");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["seventh_pcs"].ToString() == "breakage")
                    {

                    }
                    else
                    {

                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);

                    }
                }
                else
                {
                    _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];
                    if (_dataTableItemStatusList.Rows[itemCheckboxindex]["seventh_pcs"].ToString() == "unread")
                    {
                        lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) + 1).ToString();

                        _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("seventh_pcs" /*column Name*/, "breakage");
                        _dataTableItemStatusList.AcceptChanges();
                        OverAllTotalPcs();
                        btnUpdateData.Visible = false;
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["seventh_pcs"].ToString() == "ok")
                    {
                        if (Convert.ToInt32(lblOkTotalPcsRepeater.Text) > 0)
                        {
                            lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) + 1).ToString();
                            if (lblOkTotalPcsRepeater.Text == "0" || lblOkTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("seventh_pcs" /*column Name*/, "breakage");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["seventh_pcs"].ToString() == "reject")
                    {
                        if (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) > 0)
                        {
                            lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) + 1).ToString();
                            if (lblRejectTotalPcsRepeater.Text == "0" || lblRejectTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblRejectTotalPcsRepeater.Text = (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("seventh_pcs" /*column Name*/, "breakage");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["seventh_pcs"].ToString() == "breakage")
                    {

                    }
                    else
                    {

                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);

                    }
                }
            }
            else if (_ddlPcsSeven.SelectedValue == "2")
            {
                if (_totalAllPcs > _totalRecieved)
                {
                    _ddlPcsSeven.SelectedValue = "-1";
                    ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);
                }
                else if (_totalAllPcs == _totalRecieved)
                {
                    _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];
                    if (_dataTableItemStatusList.Rows[itemCheckboxindex]["seventh_pcs"].ToString() == "unread")
                    {
                        _ddlPcsSeven.SelectedValue = "-1";
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["seventh_pcs"].ToString() == "ok")
                    {
                        if (Convert.ToInt32(lblOkTotalPcsRepeater.Text) > 0)
                        {
                            lblRejectTotalPcsRepeater.Text = (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) + 1).ToString();
                            if (lblOkTotalPcsRepeater.Text == "0" || lblOkTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("seventh_pcs" /*column Name*/, "reject");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["seventh_pcs"].ToString() == "breakage")
                    {
                        if (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) > 0)
                        {
                            lblRejectTotalPcsRepeater.Text = (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) + 1).ToString();
                            if (lblBreakageTotalPcsRepeater.Text == "0" || lblBreakageTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("seventh_pcs" /*column Name*/, "reject");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["seventh_pcs"].ToString() == "reject")
                    {

                    }
                    else
                    {

                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);

                    }
                }
                else
                {
                    _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];
                    if (_dataTableItemStatusList.Rows[itemCheckboxindex]["seventh_pcs"].ToString() == "unread")
                    {
                        lblRejectTotalPcsRepeater.Text = (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) + 1).ToString();

                        _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("seventh_pcs" /*column Name*/, "reject");
                        _dataTableItemStatusList.AcceptChanges();
                        OverAllTotalPcs();
                        btnUpdateData.Visible = false;
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["seventh_pcs"].ToString() == "ok")
                    {
                        if (Convert.ToInt32(lblOkTotalPcsRepeater.Text) > 0)
                        {
                            lblRejectTotalPcsRepeater.Text = (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) + 1).ToString();
                            if (lblOkTotalPcsRepeater.Text == "0" || lblOkTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("seventh_pcs" /*column Name*/, "reject");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["seventh_pcs"].ToString() == "breakage")
                    {
                        if (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) > 0)
                        {
                            lblRejectTotalPcsRepeater.Text = (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) + 1).ToString();
                            if (lblBreakageTotalPcsRepeater.Text == "0" || lblBreakageTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("seventh_pcs" /*column Name*/, "reject");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["seventh_pcs"].ToString() == "reject")
                    {

                    }
                    else
                    {

                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);

                    }
                }
            }
            else
            {

            }
        }

        protected void ddlPcsSix_SelectedIndexChanged(object sender, EventArgs e)
        {
            DropDownList _ddlPcsSix = (DropDownList)sender;
            RepeaterItem item = (RepeaterItem)_ddlPcsSix.NamingContainer;
            Int32 itemCheckboxindex = ((RepeaterItem)_ddlPcsSix.NamingContainer).ItemIndex;
            //Int32 itemindex = ((RepeaterItem)_checkboxOne.NamingContainer).ItemIndex;
            Label lblOkTotalPcsRepeater = (Label)item.FindControl("lblOkTotalPcsRepeater");
            Label lblBreakageTotalPcsRepeater = (Label)item.FindControl("lblBreakageTotalPcsRepeater");
            Label lblRejectTotalPcsRepeater = (Label)item.FindControl("lblRejectTotalPcsRepeater");

            lblOkTotalPcsRepeater.Text = lblOkTotalPcsRepeater.Text == "" ? "0" : lblOkTotalPcsRepeater.Text;
            lblBreakageTotalPcsRepeater.Text = lblBreakageTotalPcsRepeater.Text == "" ? "0" : lblBreakageTotalPcsRepeater.Text;
            lblRejectTotalPcsRepeater.Text = lblRejectTotalPcsRepeater.Text == "" ? "0" : lblRejectTotalPcsRepeater.Text;

            int _totalAllPcs = Convert.ToInt32(txtTotalOkBreakReject.Text == "" ? "0" : txtTotalOkBreakReject.Text);
            int _totalRecieved = Convert.ToInt32(txtreceived.Text == "" ? "0" : txtreceived.Text);

            // -1 (Unselect), 1 (Ok), 0(Breakage) and 2 for Reejct


            if (_ddlPcsSix.SelectedValue == "-1")
            {
                _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];
                if (_dataTableItemStatusList.Rows[itemCheckboxindex]["sixth_pcs"].ToString() == "ok")
                {
                    _ddlPcsSix.SelectedValue = "1";
                }
                else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["sixth_pcs"].ToString() == "breakage")
                {
                    _ddlPcsSix.SelectedValue = "0";
                }
                else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["sixth_pcs"].ToString() == "reject")
                {
                    _ddlPcsSix.SelectedValue = "2";
                }
                else
                {

                }
            }
            else if (_ddlPcsSix.SelectedValue == "1")
            {
                if (_totalAllPcs > _totalRecieved)
                {
                    _ddlPcsSix.SelectedValue = "-1";
                    ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);
                }
                else if (_totalAllPcs == _totalRecieved)
                {
                    _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];
                    if (_dataTableItemStatusList.Rows[itemCheckboxindex]["sixth_pcs"].ToString() == "unread")
                    {
                        _ddlPcsSix.SelectedValue = "-1";
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["sixth_pcs"].ToString() == "breakage")
                    {
                        if (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) > 0)
                        {
                            lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) + 1).ToString();
                            if (lblBreakageTotalPcsRepeater.Text == "0" || lblBreakageTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("sixth_pcs" /*column Name*/, "ok");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["sixth_pcs"].ToString() == "reject")
                    {
                        if (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) > 0)
                        {
                            lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) + 1).ToString();
                            if (lblRejectTotalPcsRepeater.Text == "0" || lblRejectTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblRejectTotalPcsRepeater.Text = (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("sixth_pcs" /*column Name*/, "ok");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["sixth_pcs"].ToString() == "ok")
                    {

                    }
                    else
                    {

                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);

                    }
                }
                else
                {
                    _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];
                    if (_dataTableItemStatusList.Rows[itemCheckboxindex]["sixth_pcs"].ToString() == "unread")
                    {
                        lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) + 1).ToString();

                        _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("sixth_pcs" /*column Name*/, "ok");
                        _dataTableItemStatusList.AcceptChanges();
                        OverAllTotalPcs();
                        btnUpdateData.Visible = false;
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["sixth_pcs"].ToString() == "breakage")
                    {
                        if (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) > 0)
                        {
                            lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) + 1).ToString();
                            if (lblBreakageTotalPcsRepeater.Text == "0" || lblBreakageTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("sixth_pcs" /*column Name*/, "ok");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["sixth_pcs"].ToString() == "reject")
                    {
                        if (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) > 0)
                        {
                            lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) + 1).ToString();
                            if (lblRejectTotalPcsRepeater.Text == "0" || lblRejectTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblRejectTotalPcsRepeater.Text = (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("sixth_pcs" /*column Name*/, "ok");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["sixth_pcs"].ToString() == "ok")
                    {

                    }
                    else
                    {

                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);

                    }
                }

            }
            else if (_ddlPcsSix.SelectedValue == "0")
            {
                if (_totalAllPcs > _totalRecieved)
                {
                    _ddlPcsSix.SelectedValue = "-1";
                    ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);

                }
                else if (_totalAllPcs == _totalRecieved)
                {
                    _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];
                    if (_dataTableItemStatusList.Rows[itemCheckboxindex]["sixth_pcs"].ToString() == "unread")
                    {
                        _ddlPcsSix.SelectedValue = "-1";
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["sixth_pcs"].ToString() == "ok")
                    {
                        if (Convert.ToInt32(lblOkTotalPcsRepeater.Text) > 0)
                        {
                            lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) + 1).ToString();
                            if (lblOkTotalPcsRepeater.Text == "0" || lblOkTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("sixth_pcs" /*column Name*/, "breakage");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["sixth_pcs"].ToString() == "reject")
                    {
                        if (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) > 0)
                        {
                            lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) + 1).ToString();
                            if (lblRejectTotalPcsRepeater.Text == "0" || lblRejectTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblRejectTotalPcsRepeater.Text = (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("sixth_pcs" /*column Name*/, "breakage");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["sixth_pcs"].ToString() == "breakage")
                    {

                    }
                    else
                    {

                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);

                    }
                }
                else
                {
                    _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];
                    if (_dataTableItemStatusList.Rows[itemCheckboxindex]["sixth_pcs"].ToString() == "unread")
                    {
                        lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) + 1).ToString();

                        _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("sixth_pcs" /*column Name*/, "breakage");
                        _dataTableItemStatusList.AcceptChanges();
                        OverAllTotalPcs();
                        btnUpdateData.Visible = false;
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["sixth_pcs"].ToString() == "ok")
                    {
                        if (Convert.ToInt32(lblOkTotalPcsRepeater.Text) > 0)
                        {
                            lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) + 1).ToString();
                            if (lblOkTotalPcsRepeater.Text == "0" || lblOkTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("sixth_pcs" /*column Name*/, "breakage");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["sixth_pcs"].ToString() == "reject")
                    {
                        if (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) > 0)
                        {
                            lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) + 1).ToString();
                            if (lblRejectTotalPcsRepeater.Text == "0" || lblRejectTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblRejectTotalPcsRepeater.Text = (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("sixth_pcs" /*column Name*/, "breakage");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["sixth_pcs"].ToString() == "breakage")
                    {

                    }
                    else
                    {

                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);

                    }
                }
            }
            else if (_ddlPcsSix.SelectedValue == "2")
            {
                if (_totalAllPcs > _totalRecieved)
                {
                    _ddlPcsSix.SelectedValue = "-1";
                    ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);

                }
                else if (_totalAllPcs == _totalRecieved)
                {
                    _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];
                    if (_dataTableItemStatusList.Rows[itemCheckboxindex]["sixth_pcs"].ToString() == "unread")
                    {
                        _ddlPcsSix.SelectedValue = "-1";
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["sixth_pcs"].ToString() == "ok")
                    {
                        if (Convert.ToInt32(lblOkTotalPcsRepeater.Text) > 0)
                        {
                            lblRejectTotalPcsRepeater.Text = (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) + 1).ToString();
                            if (lblOkTotalPcsRepeater.Text == "0" || lblOkTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("sixth_pcs" /*column Name*/, "reject");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["sixth_pcs"].ToString() == "breakage")
                    {
                        if (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) > 0)
                        {
                            lblRejectTotalPcsRepeater.Text = (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) + 1).ToString();
                            if (lblBreakageTotalPcsRepeater.Text == "0" || lblBreakageTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("sixth_pcs" /*column Name*/, "reject");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["sixth_pcs"].ToString() == "reject")
                    {

                    }
                    else
                    {

                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);

                    }
                }
                else
                {
                    _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];
                    if (_dataTableItemStatusList.Rows[itemCheckboxindex]["sixth_pcs"].ToString() == "unread")
                    {
                        lblRejectTotalPcsRepeater.Text = (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) + 1).ToString();

                        _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("sixth_pcs" /*column Name*/, "reject");
                        _dataTableItemStatusList.AcceptChanges();
                        OverAllTotalPcs();
                        btnUpdateData.Visible = false;
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["sixth_pcs"].ToString() == "ok")
                    {
                        if (Convert.ToInt32(lblOkTotalPcsRepeater.Text) > 0)
                        {
                            lblRejectTotalPcsRepeater.Text = (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) + 1).ToString();
                            if (lblOkTotalPcsRepeater.Text == "0" || lblOkTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("sixth_pcs" /*column Name*/, "reject");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["sixth_pcs"].ToString() == "breakage")
                    {
                        if (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) > 0)
                        {
                            lblRejectTotalPcsRepeater.Text = (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) + 1).ToString();
                            if (lblBreakageTotalPcsRepeater.Text == "0" || lblBreakageTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("sixth_pcs" /*column Name*/, "reject");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["sixth_pcs"].ToString() == "reject")
                    {

                    }
                    else
                    {

                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);

                    }
                }
            }
            else
            {

            }
        }

        protected void ddlPcsfiften_SelectedIndexChanged(object sender, EventArgs e)
        {
            DropDownList _ddlPcsFiften = (DropDownList)sender;
            RepeaterItem item = (RepeaterItem)_ddlPcsFiften.NamingContainer;
            Int32 itemCheckboxindex = ((RepeaterItem)_ddlPcsFiften.NamingContainer).ItemIndex;
            //Int32 itemindex = ((RepeaterItem)_checkboxOne.NamingContainer).ItemIndex;
            Label lblOkTotalPcsRepeater = (Label)item.FindControl("lblOkTotalPcsRepeater");
            Label lblBreakageTotalPcsRepeater = (Label)item.FindControl("lblBreakageTotalPcsRepeater");
            Label lblRejectTotalPcsRepeater = (Label)item.FindControl("lblRejectTotalPcsRepeater");

            lblOkTotalPcsRepeater.Text = lblOkTotalPcsRepeater.Text == "" ? "0" : lblOkTotalPcsRepeater.Text;
            lblBreakageTotalPcsRepeater.Text = lblBreakageTotalPcsRepeater.Text == "" ? "0" : lblBreakageTotalPcsRepeater.Text;
            lblRejectTotalPcsRepeater.Text = lblRejectTotalPcsRepeater.Text == "" ? "0" : lblRejectTotalPcsRepeater.Text;

            int _totalAllPcs = Convert.ToInt32(txtTotalOkBreakReject.Text == "" ? "0" : txtTotalOkBreakReject.Text);
            int _totalRecieved = Convert.ToInt32(txtreceived.Text == "" ? "0" : txtreceived.Text);

            // -1 (Unselect), 1 (Ok), 0(Breakage) and 2 for Reejct


            if (_ddlPcsFiften.SelectedValue == "-1")
            {
                _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];
                if (_dataTableItemStatusList.Rows[itemCheckboxindex]["fifteen_pcs"].ToString() == "ok")
                {
                    _ddlPcsFiften.SelectedValue = "1";
                }
                else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["fifteen_pcs"].ToString() == "breakage")
                {
                    _ddlPcsFiften.SelectedValue = "0";
                }
                else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["fifteen_pcs"].ToString() == "reject")
                {
                    _ddlPcsFiften.SelectedValue = "2";
                }
                else
                {

                }
            }
            else if (_ddlPcsFiften.SelectedValue == "1")
            {
                if (_totalAllPcs > _totalRecieved)
                {
                    _ddlPcsFiften.SelectedValue = "-1";
                    ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);

                }
                else if (_totalAllPcs == _totalRecieved)
                {
                    _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];
                    if (_dataTableItemStatusList.Rows[itemCheckboxindex]["fifteen_pcs"].ToString() == "unread")
                    {
                        _ddlPcsFiften.SelectedValue = "-1";
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["fifteen_pcs"].ToString() == "breakage")
                    {
                        if (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) > 0)
                        {
                            lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) + 1).ToString();
                            if (lblBreakageTotalPcsRepeater.Text == "0" || lblBreakageTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("fifteen_pcs" /*column Name*/, "ok");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["fifteen_pcs"].ToString() == "reject")
                    {
                        if (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) > 0)
                        {
                            lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) + 1).ToString();
                            if (lblRejectTotalPcsRepeater.Text == "0" || lblRejectTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblRejectTotalPcsRepeater.Text = (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("fifteen_pcs" /*column Name*/, "ok");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["fifteen_pcs"].ToString() == "ok")
                    {

                    }
                    else
                    {

                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);

                    }
                }
                else
                {
                    _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];
                    if (_dataTableItemStatusList.Rows[itemCheckboxindex]["fifteen_pcs"].ToString() == "unread")
                    {
                        lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) + 1).ToString();

                        _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("fifteen_pcs" /*column Name*/, "ok");
                        _dataTableItemStatusList.AcceptChanges();
                        OverAllTotalPcs();
                        btnUpdateData.Visible = false;
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["fifteen_pcs"].ToString() == "breakage")
                    {
                        if (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) > 0)
                        {
                            lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) + 1).ToString();
                            if (lblBreakageTotalPcsRepeater.Text == "0" || lblBreakageTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("fifteen_pcs" /*column Name*/, "ok");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["fifteen_pcs"].ToString() == "reject")
                    {
                        if (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) > 0)
                        {
                            lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) + 1).ToString();
                            if (lblRejectTotalPcsRepeater.Text == "0" || lblRejectTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblRejectTotalPcsRepeater.Text = (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("fifteen_pcs" /*column Name*/, "ok");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["fifteen_pcs"].ToString() == "ok")
                    {

                    }
                    else
                    {

                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);

                    }
                }

            }
            else if (_ddlPcsFiften.SelectedValue == "0")
            {
                if (_totalAllPcs > _totalRecieved)
                {
                    _ddlPcsFiften.SelectedValue = "-1";
                    ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);

                }
                else if (_totalAllPcs == _totalRecieved)
                {
                    _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];
                    if (_dataTableItemStatusList.Rows[itemCheckboxindex]["fifteen_pcs"].ToString() == "unread")
                    {
                        _ddlPcsFiften.SelectedValue = "-1";
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["fifteen_pcs"].ToString() == "ok")
                    {
                        if (Convert.ToInt32(lblOkTotalPcsRepeater.Text) > 0)
                        {
                            lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) + 1).ToString();
                            if (lblOkTotalPcsRepeater.Text == "0" || lblOkTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("fifteen_pcs" /*column Name*/, "breakage");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["fifteen_pcs"].ToString() == "reject")
                    {
                        if (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) > 0)
                        {
                            lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) + 1).ToString();
                            if (lblRejectTotalPcsRepeater.Text == "0" || lblRejectTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblRejectTotalPcsRepeater.Text = (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("fifteen_pcs" /*column Name*/, "breakage");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["fifteen_pcs"].ToString() == "breakage")
                    {

                    }
                    else
                    {

                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);

                    }
                }
                else
                {
                    _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];
                    if (_dataTableItemStatusList.Rows[itemCheckboxindex]["fifteen_pcs"].ToString() == "unread")
                    {
                        lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) + 1).ToString();

                        _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("fifteen_pcs" /*column Name*/, "breakage");
                        _dataTableItemStatusList.AcceptChanges();
                        OverAllTotalPcs();
                        btnUpdateData.Visible = false;
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["fifteen_pcs"].ToString() == "ok")
                    {
                        if (Convert.ToInt32(lblOkTotalPcsRepeater.Text) > 0)
                        {
                            lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) + 1).ToString();
                            if (lblOkTotalPcsRepeater.Text == "0" || lblOkTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("fifteen_pcs" /*column Name*/, "breakage");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["fifteen_pcs"].ToString() == "reject")
                    {
                        if (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) > 0)
                        {
                            lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) + 1).ToString();
                            if (lblRejectTotalPcsRepeater.Text == "0" || lblRejectTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblRejectTotalPcsRepeater.Text = (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("fifteen_pcs" /*column Name*/, "breakage");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["fifteen_pcs"].ToString() == "breakage")
                    {

                    }
                    else
                    {

                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);

                    }
                }
            }
            else if (_ddlPcsFiften.SelectedValue == "2")
            {
                if (_totalAllPcs > _totalRecieved)
                {
                    _ddlPcsFiften.SelectedValue = "-1";
                    ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);

                }
                else if (_totalAllPcs == _totalRecieved)
                {
                    _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];
                    if (_dataTableItemStatusList.Rows[itemCheckboxindex]["fifteen_pcs"].ToString() == "unread")
                    {
                        _ddlPcsFiften.SelectedValue = "-1";
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["fifteen_pcs"].ToString() == "ok")
                    {
                        if (Convert.ToInt32(lblOkTotalPcsRepeater.Text) > 0)
                        {
                            lblRejectTotalPcsRepeater.Text = (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) + 1).ToString();
                            if (lblOkTotalPcsRepeater.Text == "0" || lblOkTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("fifteen_pcs" /*column Name*/, "reject");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["fifteen_pcs"].ToString() == "breakage")
                    {
                        if (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) > 0)
                        {
                            lblRejectTotalPcsRepeater.Text = (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) + 1).ToString();
                            if (lblBreakageTotalPcsRepeater.Text == "0" || lblBreakageTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("fifteen_pcs" /*column Name*/, "reject");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["fifteen_pcs"].ToString() == "reject")
                    {

                    }
                    else
                    {

                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);

                    }
                }
                else
                {
                    _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];
                    if (_dataTableItemStatusList.Rows[itemCheckboxindex]["fifteen_pcs"].ToString() == "unread")
                    {
                        lblRejectTotalPcsRepeater.Text = (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) + 1).ToString();

                        _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("fifteen_pcs" /*column Name*/, "reject");
                        _dataTableItemStatusList.AcceptChanges();
                        OverAllTotalPcs();
                        btnUpdateData.Visible = false;
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["fifteen_pcs"].ToString() == "ok")
                    {
                        if (Convert.ToInt32(lblOkTotalPcsRepeater.Text) > 0)
                        {
                            lblRejectTotalPcsRepeater.Text = (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) + 1).ToString();
                            if (lblOkTotalPcsRepeater.Text == "0" || lblOkTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("fifteen_pcs" /*column Name*/, "reject");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["fifteen_pcs"].ToString() == "breakage")
                    {
                        if (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) > 0)
                        {
                            lblRejectTotalPcsRepeater.Text = (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) + 1).ToString();
                            if (lblBreakageTotalPcsRepeater.Text == "0" || lblBreakageTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("fifteen_pcs" /*column Name*/, "reject");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["fifteen_pcs"].ToString() == "reject")
                    {

                    }
                    else
                    {

                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);

                    }
                }
            }
            else
            {

            }
        }

        protected void ddlPcsfourteen_SelectedIndexChanged(object sender, EventArgs e)
        {
            DropDownList _ddlPcsFourteen = (DropDownList)sender;
            RepeaterItem item = (RepeaterItem)_ddlPcsFourteen.NamingContainer;
            Int32 itemCheckboxindex = ((RepeaterItem)_ddlPcsFourteen.NamingContainer).ItemIndex;
            //Int32 itemindex = ((RepeaterItem)_checkboxOne.NamingContainer).ItemIndex;
            Label lblOkTotalPcsRepeater = (Label)item.FindControl("lblOkTotalPcsRepeater");
            Label lblBreakageTotalPcsRepeater = (Label)item.FindControl("lblBreakageTotalPcsRepeater");
            Label lblRejectTotalPcsRepeater = (Label)item.FindControl("lblRejectTotalPcsRepeater");

            lblOkTotalPcsRepeater.Text = lblOkTotalPcsRepeater.Text == "" ? "0" : lblOkTotalPcsRepeater.Text;
            lblBreakageTotalPcsRepeater.Text = lblBreakageTotalPcsRepeater.Text == "" ? "0" : lblBreakageTotalPcsRepeater.Text;
            lblRejectTotalPcsRepeater.Text = lblRejectTotalPcsRepeater.Text == "" ? "0" : lblRejectTotalPcsRepeater.Text;

            int _totalAllPcs = Convert.ToInt32(txtTotalOkBreakReject.Text == "" ? "0" : txtTotalOkBreakReject.Text);
            int _totalRecieved = Convert.ToInt32(txtreceived.Text == "" ? "0" : txtreceived.Text);

            // -1 (Unselect), 1 (Ok), 0(Breakage) and 2 for Reejct


            if (_ddlPcsFourteen.SelectedValue == "-1")
            {
                _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];
                if (_dataTableItemStatusList.Rows[itemCheckboxindex]["fourteen_pcs"].ToString() == "ok")
                {
                    _ddlPcsFourteen.SelectedValue = "1";
                }
                else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["fourteen_pcs"].ToString() == "breakage")
                {
                    _ddlPcsFourteen.SelectedValue = "0";
                }
                else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["fourteen_pcs"].ToString() == "reject")
                {
                    _ddlPcsFourteen.SelectedValue = "2";
                }
                else
                {

                }
            }
            else if (_ddlPcsFourteen.SelectedValue == "1")
            {
                if (_totalAllPcs > _totalRecieved)
                {
                    _ddlPcsFourteen.SelectedValue = "-1";
                    ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);

                }
                else if (_totalAllPcs == _totalRecieved)
                {
                    _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];
                    if (_dataTableItemStatusList.Rows[itemCheckboxindex]["fourteen_pcs"].ToString() == "unread")
                    {
                        _ddlPcsFourteen.SelectedValue = "-1";
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["fourteen_pcs"].ToString() == "breakage")
                    {
                        if (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) > 0)
                        {
                            lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) + 1).ToString();
                            if (lblBreakageTotalPcsRepeater.Text == "0" || lblBreakageTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("fourteen_pcs" /*column Name*/, "ok");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["fourteen_pcs"].ToString() == "reject")
                    {
                        if (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) > 0)
                        {
                            lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) + 1).ToString();
                            if (lblRejectTotalPcsRepeater.Text == "0" || lblRejectTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblRejectTotalPcsRepeater.Text = (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("fourteen_pcs" /*column Name*/, "ok");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["fourteen_pcs"].ToString() == "ok")
                    {

                    }
                    else
                    {

                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);

                    }
                }
                else
                {
                    _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];
                    if (_dataTableItemStatusList.Rows[itemCheckboxindex]["fourteen_pcs"].ToString() == "unread")
                    {
                        lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) + 1).ToString();

                        _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("fourteen_pcs" /*column Name*/, "ok");
                        _dataTableItemStatusList.AcceptChanges();
                        OverAllTotalPcs();
                        btnUpdateData.Visible = false;
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["fourteen_pcs"].ToString() == "breakage")
                    {
                        if (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) > 0)
                        {
                            lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) + 1).ToString();
                            if (lblBreakageTotalPcsRepeater.Text == "0" || lblBreakageTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("fourteen_pcs" /*column Name*/, "ok");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["fourteen_pcs"].ToString() == "reject")
                    {
                        if (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) > 0)
                        {
                            lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) + 1).ToString();
                            if (lblRejectTotalPcsRepeater.Text == "0" || lblRejectTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblRejectTotalPcsRepeater.Text = (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("fourteen_pcs" /*column Name*/, "ok");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["fourteen_pcs"].ToString() == "ok")
                    {

                    }
                    else
                    {

                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);

                    }
                }

            }
            else if (_ddlPcsFourteen.SelectedValue == "0")
            {
                if (_totalAllPcs > _totalRecieved)
                {
                    _ddlPcsFourteen.SelectedValue = "-1";
                    ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);

                }
                else if (_totalAllPcs == _totalRecieved)
                {
                    _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];
                    if (_dataTableItemStatusList.Rows[itemCheckboxindex]["fourteen_pcs"].ToString() == "unread")
                    {
                        _ddlPcsFourteen.SelectedValue = "-1";
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["fourteen_pcs"].ToString() == "ok")
                    {
                        if (Convert.ToInt32(lblOkTotalPcsRepeater.Text) > 0)
                        {
                            lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) + 1).ToString();
                            if (lblOkTotalPcsRepeater.Text == "0" || lblOkTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("fourteen_pcs" /*column Name*/, "breakage");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["fourteen_pcs"].ToString() == "reject")
                    {
                        if (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) > 0)
                        {
                            lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) + 1).ToString();
                            if (lblRejectTotalPcsRepeater.Text == "0" || lblRejectTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblRejectTotalPcsRepeater.Text = (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("fourteen_pcs" /*column Name*/, "breakage");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["fourteen_pcs"].ToString() == "breakage")
                    {

                    }
                    else
                    {

                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);

                    }
                }
                else
                {
                    _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];
                    if (_dataTableItemStatusList.Rows[itemCheckboxindex]["fourteen_pcs"].ToString() == "unread")
                    {
                        lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) + 1).ToString();

                        _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("fourteen_pcs" /*column Name*/, "breakage");
                        _dataTableItemStatusList.AcceptChanges();
                        OverAllTotalPcs();
                        btnUpdateData.Visible = false;
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["fourteen_pcs"].ToString() == "ok")
                    {
                        if (Convert.ToInt32(lblOkTotalPcsRepeater.Text) > 0)
                        {
                            lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) + 1).ToString();
                            if (lblOkTotalPcsRepeater.Text == "0" || lblOkTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("fourteen_pcs" /*column Name*/, "breakage");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["fourteen_pcs"].ToString() == "reject")
                    {
                        if (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) > 0)
                        {
                            lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) + 1).ToString();
                            if (lblRejectTotalPcsRepeater.Text == "0" || lblRejectTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblRejectTotalPcsRepeater.Text = (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("fourteen_pcs" /*column Name*/, "breakage");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["fourteen_pcs"].ToString() == "breakage")
                    {

                    }
                    else
                    {

                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);

                    }
                }
            }
            else if (_ddlPcsFourteen.SelectedValue == "2")
            {
                if (_totalAllPcs > _totalRecieved)
                {
                    _ddlPcsFourteen.SelectedValue = "-1";
                    ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);

                }
                else if (_totalAllPcs == _totalRecieved)
                {
                    _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];
                    if (_dataTableItemStatusList.Rows[itemCheckboxindex]["fourteen_pcs"].ToString() == "unread")
                    {
                        _ddlPcsFourteen.SelectedValue = "-1";
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["fourteen_pcs"].ToString() == "ok")
                    {
                        if (Convert.ToInt32(lblOkTotalPcsRepeater.Text) > 0)
                        {
                            lblRejectTotalPcsRepeater.Text = (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) + 1).ToString();
                            if (lblOkTotalPcsRepeater.Text == "0" || lblOkTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("fourteen_pcs" /*column Name*/, "reject");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["fourteen_pcs"].ToString() == "breakage")
                    {
                        if (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) > 0)
                        {
                            lblRejectTotalPcsRepeater.Text = (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) + 1).ToString();
                            if (lblBreakageTotalPcsRepeater.Text == "0" || lblBreakageTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("fourteen_pcs" /*column Name*/, "reject");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["fourteen_pcs"].ToString() == "reject")
                    {

                    }
                    else
                    {

                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);

                    }
                }
                else
                {
                    _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];
                    if (_dataTableItemStatusList.Rows[itemCheckboxindex]["fourteen_pcs"].ToString() == "unread")
                    {
                        lblRejectTotalPcsRepeater.Text = (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) + 1).ToString();

                        _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("fourteen_pcs" /*column Name*/, "reject");
                        _dataTableItemStatusList.AcceptChanges();
                        OverAllTotalPcs();
                        btnUpdateData.Visible = false;
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["fourteen_pcs"].ToString() == "ok")
                    {
                        if (Convert.ToInt32(lblOkTotalPcsRepeater.Text) > 0)
                        {
                            lblRejectTotalPcsRepeater.Text = (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) + 1).ToString();
                            if (lblOkTotalPcsRepeater.Text == "0" || lblOkTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("fourteen_pcs" /*column Name*/, "reject");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["fourteen_pcs"].ToString() == "breakage")
                    {
                        if (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) > 0)
                        {
                            lblRejectTotalPcsRepeater.Text = (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) + 1).ToString();
                            if (lblBreakageTotalPcsRepeater.Text == "0" || lblBreakageTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("fourteen_pcs" /*column Name*/, "reject");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["fourteen_pcs"].ToString() == "reject")
                    {

                    }
                    else
                    {

                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);

                    }
                }
            }
            else
            {

            }

        }

        protected void ddlPcsThirteen_SelectedIndexChanged(object sender, EventArgs e)
        {

            DropDownList _ddlPcsThirteen = (DropDownList)sender;
            RepeaterItem item = (RepeaterItem)_ddlPcsThirteen.NamingContainer;
            Int32 itemCheckboxindex = ((RepeaterItem)_ddlPcsThirteen.NamingContainer).ItemIndex;
            //Int32 itemindex = ((RepeaterItem)_checkboxOne.NamingContainer).ItemIndex;
            Label lblOkTotalPcsRepeater = (Label)item.FindControl("lblOkTotalPcsRepeater");
            Label lblBreakageTotalPcsRepeater = (Label)item.FindControl("lblBreakageTotalPcsRepeater");
            Label lblRejectTotalPcsRepeater = (Label)item.FindControl("lblRejectTotalPcsRepeater");

            lblOkTotalPcsRepeater.Text = lblOkTotalPcsRepeater.Text == "" ? "0" : lblOkTotalPcsRepeater.Text;
            lblBreakageTotalPcsRepeater.Text = lblBreakageTotalPcsRepeater.Text == "" ? "0" : lblBreakageTotalPcsRepeater.Text;
            lblRejectTotalPcsRepeater.Text = lblRejectTotalPcsRepeater.Text == "" ? "0" : lblRejectTotalPcsRepeater.Text;

            int _totalAllPcs = Convert.ToInt32(txtTotalOkBreakReject.Text == "" ? "0" : txtTotalOkBreakReject.Text);
            int _totalRecieved = Convert.ToInt32(txtreceived.Text == "" ? "0" : txtreceived.Text);

            // -1 (Unselect), 1 (Ok), 0(Breakage) and 2 for Reejct


            if (_ddlPcsThirteen.SelectedValue == "-1")
            {
                _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];
                if (_dataTableItemStatusList.Rows[itemCheckboxindex]["thirteen_pcs"].ToString() == "ok")
                {
                    _ddlPcsThirteen.SelectedValue = "1";
                }
                else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["thirteen_pcs"].ToString() == "breakage")
                {
                    _ddlPcsThirteen.SelectedValue = "0";
                }
                else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["thirteen_pcs"].ToString() == "reject")
                {
                    _ddlPcsThirteen.SelectedValue = "2";
                }
                else
                {

                }
            }
            else if (_ddlPcsThirteen.SelectedValue == "1")
            {
                if (_totalAllPcs > _totalRecieved)
                {
                    _ddlPcsThirteen.SelectedValue = "-1";
                    ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);

                }
                else if (_totalAllPcs == _totalRecieved)
                {
                    _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];
                    if (_dataTableItemStatusList.Rows[itemCheckboxindex]["thirteen_pcs"].ToString() == "unread")
                    {
                        _ddlPcsThirteen.SelectedValue = "-1";
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["thirteen_pcs"].ToString() == "breakage")
                    {
                        if (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) > 0)
                        {
                            lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) + 1).ToString();
                            if (lblBreakageTotalPcsRepeater.Text == "0" || lblBreakageTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("thirteen_pcs" /*column Name*/, "ok");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["thirteen_pcs"].ToString() == "reject")
                    {
                        if (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) > 0)
                        {
                            lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) + 1).ToString();
                            if (lblRejectTotalPcsRepeater.Text == "0" || lblRejectTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblRejectTotalPcsRepeater.Text = (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("thirteen_pcs" /*column Name*/, "ok");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["thirteen_pcs"].ToString() == "ok")
                    {

                    }
                    else
                    {

                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);

                    }
                }
                else
                {
                    _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];
                    if (_dataTableItemStatusList.Rows[itemCheckboxindex]["thirteen_pcs"].ToString() == "unread")
                    {
                        lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) + 1).ToString();

                        _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("thirteen_pcs" /*column Name*/, "ok");
                        _dataTableItemStatusList.AcceptChanges();
                        OverAllTotalPcs();
                        btnUpdateData.Visible = false;
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["thirteen_pcs"].ToString() == "breakage")
                    {
                        if (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) > 0)
                        {
                            lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) + 1).ToString();
                            if (lblBreakageTotalPcsRepeater.Text == "0" || lblBreakageTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("thirteen_pcs" /*column Name*/, "ok");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["thirteen_pcs"].ToString() == "reject")
                    {
                        if (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) > 0)
                        {
                            lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) + 1).ToString();
                            if (lblRejectTotalPcsRepeater.Text == "0" || lblRejectTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblRejectTotalPcsRepeater.Text = (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("thirteen_pcs" /*column Name*/, "ok");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["thirteen_pcs"].ToString() == "ok")
                    {

                    }
                    else
                    {

                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);

                    }
                }

            }
            else if (_ddlPcsThirteen.SelectedValue == "0")
            {
                if (_totalAllPcs > _totalRecieved)
                {
                    _ddlPcsThirteen.SelectedValue = "-1";
                    ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);

                }
                else if (_totalAllPcs == _totalRecieved)
                {
                    _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];
                    if (_dataTableItemStatusList.Rows[itemCheckboxindex]["thirteen_pcs"].ToString() == "unread")
                    {
                        _ddlPcsThirteen.SelectedValue = "-1";
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["thirteen_pcs"].ToString() == "ok")
                    {
                        if (Convert.ToInt32(lblOkTotalPcsRepeater.Text) > 0)
                        {
                            lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) + 1).ToString();
                            if (lblOkTotalPcsRepeater.Text == "0" || lblOkTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("thirteen_pcs" /*column Name*/, "breakage");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["thirteen_pcs"].ToString() == "reject")
                    {
                        if (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) > 0)
                        {
                            lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) + 1).ToString();
                            if (lblRejectTotalPcsRepeater.Text == "0" || lblRejectTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblRejectTotalPcsRepeater.Text = (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("thirteen_pcs" /*column Name*/, "breakage");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["thirteen_pcs"].ToString() == "breakage")
                    {

                    }
                    else
                    {

                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);

                    }
                }
                else
                {
                    _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];
                    if (_dataTableItemStatusList.Rows[itemCheckboxindex]["thirteen_pcs"].ToString() == "unread")
                    {
                        lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) + 1).ToString();

                        _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("thirteen_pcs" /*column Name*/, "breakage");
                        _dataTableItemStatusList.AcceptChanges();
                        OverAllTotalPcs();
                        btnUpdateData.Visible = false;
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["thirteen_pcs"].ToString() == "ok")
                    {
                        if (Convert.ToInt32(lblOkTotalPcsRepeater.Text) > 0)
                        {
                            lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) + 1).ToString();
                            if (lblOkTotalPcsRepeater.Text == "0" || lblOkTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("thirteen_pcs" /*column Name*/, "breakage");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["thirteen_pcs"].ToString() == "reject")
                    {
                        if (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) > 0)
                        {
                            lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) + 1).ToString();
                            if (lblRejectTotalPcsRepeater.Text == "0" || lblRejectTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblRejectTotalPcsRepeater.Text = (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("thirteen_pcs" /*column Name*/, "breakage");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["thirteen_pcs"].ToString() == "breakage")
                    {

                    }
                    else
                    {

                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);

                    }
                }
            }
            else if (_ddlPcsThirteen.SelectedValue == "2")
            {
                if (_totalAllPcs > _totalRecieved)
                {
                    _ddlPcsThirteen.SelectedValue = "-1";
                    ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);

                }
                else if (_totalAllPcs == _totalRecieved)
                {
                    _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];
                    if (_dataTableItemStatusList.Rows[itemCheckboxindex]["thirteen_pcs"].ToString() == "unread")
                    {
                        _ddlPcsThirteen.SelectedValue = "-1";
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["thirteen_pcs"].ToString() == "ok")
                    {
                        if (Convert.ToInt32(lblOkTotalPcsRepeater.Text) > 0)
                        {
                            lblRejectTotalPcsRepeater.Text = (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) + 1).ToString();
                            if (lblOkTotalPcsRepeater.Text == "0" || lblOkTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("thirteen_pcs" /*column Name*/, "reject");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["thirteen_pcs"].ToString() == "breakage")
                    {
                        if (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) > 0)
                        {
                            lblRejectTotalPcsRepeater.Text = (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) + 1).ToString();
                            if (lblBreakageTotalPcsRepeater.Text == "0" || lblBreakageTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("thirteen_pcs" /*column Name*/, "reject");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["thirteen_pcs"].ToString() == "reject")
                    {

                    }
                    else
                    {

                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);

                    }
                }
                else
                {
                    _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];
                    if (_dataTableItemStatusList.Rows[itemCheckboxindex]["thirteen_pcs"].ToString() == "unread")
                    {
                        lblRejectTotalPcsRepeater.Text = (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) + 1).ToString();

                        _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("thirteen_pcs" /*column Name*/, "reject");
                        _dataTableItemStatusList.AcceptChanges();
                        OverAllTotalPcs();
                        btnUpdateData.Visible = false;
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["thirteen_pcs"].ToString() == "ok")
                    {
                        if (Convert.ToInt32(lblOkTotalPcsRepeater.Text) > 0)
                        {
                            lblRejectTotalPcsRepeater.Text = (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) + 1).ToString();
                            if (lblOkTotalPcsRepeater.Text == "0" || lblOkTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("thirteen_pcs" /*column Name*/, "reject");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["thirteen_pcs"].ToString() == "breakage")
                    {
                        if (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) > 0)
                        {
                            lblRejectTotalPcsRepeater.Text = (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) + 1).ToString();
                            if (lblBreakageTotalPcsRepeater.Text == "0" || lblBreakageTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("thirteen_pcs" /*column Name*/, "reject");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["thirteen_pcs"].ToString() == "reject")
                    {

                    }
                    else
                    {

                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);

                    }
                }
            }
            else
            {

            }
        }

        protected void ddlPcsTwelve_SelectedIndexChanged(object sender, EventArgs e)
        {
            DropDownList _ddlPcsTwelve = (DropDownList)sender;
            RepeaterItem item = (RepeaterItem)_ddlPcsTwelve.NamingContainer;
            Int32 itemCheckboxindex = ((RepeaterItem)_ddlPcsTwelve.NamingContainer).ItemIndex;
            //Int32 itemindex = ((RepeaterItem)_checkboxOne.NamingContainer).ItemIndex;
            Label lblOkTotalPcsRepeater = (Label)item.FindControl("lblOkTotalPcsRepeater");
            Label lblBreakageTotalPcsRepeater = (Label)item.FindControl("lblBreakageTotalPcsRepeater");
            Label lblRejectTotalPcsRepeater = (Label)item.FindControl("lblRejectTotalPcsRepeater");

            lblOkTotalPcsRepeater.Text = lblOkTotalPcsRepeater.Text == "" ? "0" : lblOkTotalPcsRepeater.Text;
            lblBreakageTotalPcsRepeater.Text = lblBreakageTotalPcsRepeater.Text == "" ? "0" : lblBreakageTotalPcsRepeater.Text;
            lblRejectTotalPcsRepeater.Text = lblRejectTotalPcsRepeater.Text == "" ? "0" : lblRejectTotalPcsRepeater.Text;

            int _totalAllPcs = Convert.ToInt32(txtTotalOkBreakReject.Text == "" ? "0" : txtTotalOkBreakReject.Text);
            int _totalRecieved = Convert.ToInt32(txtreceived.Text == "" ? "0" : txtreceived.Text);

            // -1 (Unselect), 1 (Ok), 0(Breakage) and 2 for Reejct


            if (_ddlPcsTwelve.SelectedValue == "-1")
            {
                _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];
                if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twelve_pcs"].ToString() == "ok")
                {
                    _ddlPcsTwelve.SelectedValue = "1";
                }
                else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twelve_pcs"].ToString() == "breakage")
                {
                    _ddlPcsTwelve.SelectedValue = "0";
                }
                else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twelve_pcs"].ToString() == "reject")
                {
                    _ddlPcsTwelve.SelectedValue = "2";
                }
                else
                {

                }
            }
            else if (_ddlPcsTwelve.SelectedValue == "1")
            {
                if (_totalAllPcs > _totalRecieved)
                {
                    _ddlPcsTwelve.SelectedValue = "-1";
                    ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);

                }
                else if (_totalAllPcs == _totalRecieved)
                {
                    _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];
                    if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twelve_pcs"].ToString() == "unread")
                    {
                        _ddlPcsTwelve.SelectedValue = "-1";
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twelve_pcs"].ToString() == "breakage")
                    {
                        if (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) > 0)
                        {
                            lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) + 1).ToString();
                            if (lblBreakageTotalPcsRepeater.Text == "0" || lblBreakageTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("twelve_pcs" /*column Name*/, "ok");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twelve_pcs"].ToString() == "reject")
                    {
                        if (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) > 0)
                        {
                            lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) + 1).ToString();
                            if (lblRejectTotalPcsRepeater.Text == "0" || lblRejectTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblRejectTotalPcsRepeater.Text = (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("twelve_pcs" /*column Name*/, "ok");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twelve_pcs"].ToString() == "ok")
                    {

                    }
                    else
                    {

                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);

                    }
                }
                else
                {
                    _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];
                    if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twelve_pcs"].ToString() == "unread")
                    {
                        lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) + 1).ToString();

                        _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("twelve_pcs" /*column Name*/, "ok");
                        _dataTableItemStatusList.AcceptChanges();
                        OverAllTotalPcs();
                        btnUpdateData.Visible = false;
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twelve_pcs"].ToString() == "breakage")
                    {
                        if (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) > 0)
                        {
                            lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) + 1).ToString();
                            if (lblBreakageTotalPcsRepeater.Text == "0" || lblBreakageTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("twelve_pcs" /*column Name*/, "ok");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twelve_pcs"].ToString() == "reject")
                    {
                        if (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) > 0)
                        {
                            lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) + 1).ToString();
                            if (lblRejectTotalPcsRepeater.Text == "0" || lblRejectTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblRejectTotalPcsRepeater.Text = (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("twelve_pcs" /*column Name*/, "ok");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twelve_pcs"].ToString() == "ok")
                    {

                    }
                    else
                    {

                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);

                    }
                }

            }
            else if (_ddlPcsTwelve.SelectedValue == "0")
            {
                if (_totalAllPcs > _totalRecieved)
                {
                    _ddlPcsTwelve.SelectedValue = "-1";
                    ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);

                }
                else if (_totalAllPcs == _totalRecieved)
                {
                    _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];
                    if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twelve_pcs"].ToString() == "unread")
                    {
                        _ddlPcsTwelve.SelectedValue = "-1";
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twelve_pcs"].ToString() == "ok")
                    {
                        if (Convert.ToInt32(lblOkTotalPcsRepeater.Text) > 0)
                        {
                            lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) + 1).ToString();
                            if (lblOkTotalPcsRepeater.Text == "0" || lblOkTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("twelve_pcs" /*column Name*/, "breakage");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twelve_pcs"].ToString() == "reject")
                    {
                        if (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) > 0)
                        {
                            lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) + 1).ToString();
                            if (lblRejectTotalPcsRepeater.Text == "0" || lblRejectTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblRejectTotalPcsRepeater.Text = (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("twelve_pcs" /*column Name*/, "breakage");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twelve_pcs"].ToString() == "breakage")
                    {

                    }
                    else
                    {

                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);

                    }
                }
                else
                {
                    _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];
                    if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twelve_pcs"].ToString() == "unread")
                    {
                        lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) + 1).ToString();

                        _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("twelve_pcs" /*column Name*/, "breakage");
                        _dataTableItemStatusList.AcceptChanges();
                        OverAllTotalPcs();
                        btnUpdateData.Visible = false;
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twelve_pcs"].ToString() == "ok")
                    {
                        if (Convert.ToInt32(lblOkTotalPcsRepeater.Text) > 0)
                        {
                            lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) + 1).ToString();
                            if (lblOkTotalPcsRepeater.Text == "0" || lblOkTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("twelve_pcs" /*column Name*/, "breakage");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twelve_pcs"].ToString() == "reject")
                    {
                        if (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) > 0)
                        {
                            lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) + 1).ToString();
                            if (lblRejectTotalPcsRepeater.Text == "0" || lblRejectTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblRejectTotalPcsRepeater.Text = (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("twelve_pcs" /*column Name*/, "breakage");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twelve_pcs"].ToString() == "breakage")
                    {

                    }
                    else
                    {

                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);

                    }
                }
            }
            else if (_ddlPcsTwelve.SelectedValue == "2")
            {
                if (_totalAllPcs > _totalRecieved)
                {
                    _ddlPcsTwelve.SelectedValue = "-1";
                    ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);

                }
                else if (_totalAllPcs == _totalRecieved)
                {
                    _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];
                    if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twelve_pcs"].ToString() == "unread")
                    {
                        _ddlPcsTwelve.SelectedValue = "-1";
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twelve_pcs"].ToString() == "ok")
                    {
                        if (Convert.ToInt32(lblOkTotalPcsRepeater.Text) > 0)
                        {
                            lblRejectTotalPcsRepeater.Text = (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) + 1).ToString();
                            if (lblOkTotalPcsRepeater.Text == "0" || lblOkTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("twelve_pcs" /*column Name*/, "reject");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twelve_pcs"].ToString() == "breakage")
                    {
                        if (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) > 0)
                        {
                            lblRejectTotalPcsRepeater.Text = (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) + 1).ToString();
                            if (lblBreakageTotalPcsRepeater.Text == "0" || lblBreakageTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("twelve_pcs" /*column Name*/, "reject");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twelve_pcs"].ToString() == "reject")
                    {

                    }
                    else
                    {

                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);

                    }
                }
                else
                {
                    _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];
                    if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twelve_pcs"].ToString() == "unread")
                    {
                        lblRejectTotalPcsRepeater.Text = (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) + 1).ToString();

                        _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("twelve_pcs" /*column Name*/, "reject");
                        _dataTableItemStatusList.AcceptChanges();
                        OverAllTotalPcs();
                        btnUpdateData.Visible = false;
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twelve_pcs"].ToString() == "ok")
                    {
                        if (Convert.ToInt32(lblOkTotalPcsRepeater.Text) > 0)
                        {
                            lblRejectTotalPcsRepeater.Text = (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) + 1).ToString();
                            if (lblOkTotalPcsRepeater.Text == "0" || lblOkTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("twelve_pcs" /*column Name*/, "reject");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twelve_pcs"].ToString() == "breakage")
                    {
                        if (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) > 0)
                        {
                            lblRejectTotalPcsRepeater.Text = (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) + 1).ToString();
                            if (lblBreakageTotalPcsRepeater.Text == "0" || lblBreakageTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("twelve_pcs" /*column Name*/, "reject");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twelve_pcs"].ToString() == "reject")
                    {

                    }
                    else
                    {

                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);

                    }
                }
            }
            else
            {

            }
        }

        protected void ddlPcsEleven_SelectedIndexChanged(object sender, EventArgs e)
        {
            DropDownList _ddlPcsEleven = (DropDownList)sender;
            RepeaterItem item = (RepeaterItem)_ddlPcsEleven.NamingContainer;
            Int32 itemCheckboxindex = ((RepeaterItem)_ddlPcsEleven.NamingContainer).ItemIndex;
            //Int32 itemindex = ((RepeaterItem)_checkboxOne.NamingContainer).ItemIndex;
            Label lblOkTotalPcsRepeater = (Label)item.FindControl("lblOkTotalPcsRepeater");
            Label lblBreakageTotalPcsRepeater = (Label)item.FindControl("lblBreakageTotalPcsRepeater");
            Label lblRejectTotalPcsRepeater = (Label)item.FindControl("lblRejectTotalPcsRepeater");

            lblOkTotalPcsRepeater.Text = lblOkTotalPcsRepeater.Text == "" ? "0" : lblOkTotalPcsRepeater.Text;
            lblBreakageTotalPcsRepeater.Text = lblBreakageTotalPcsRepeater.Text == "" ? "0" : lblBreakageTotalPcsRepeater.Text;
            lblRejectTotalPcsRepeater.Text = lblRejectTotalPcsRepeater.Text == "" ? "0" : lblRejectTotalPcsRepeater.Text;

            int _totalAllPcs = Convert.ToInt32(txtTotalOkBreakReject.Text == "" ? "0" : txtTotalOkBreakReject.Text);
            int _totalRecieved = Convert.ToInt32(txtreceived.Text == "" ? "0" : txtreceived.Text);

            // -1 (Unselect), 1 (Ok), 0(Breakage) and 2 for Reejct


            if (_ddlPcsEleven.SelectedValue == "-1")
            {
                _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];
                if (_dataTableItemStatusList.Rows[itemCheckboxindex]["eleven_pcs"].ToString() == "ok")
                {
                    _ddlPcsEleven.SelectedValue = "1";
                }
                else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["eleven_pcs"].ToString() == "breakage")
                {
                    _ddlPcsEleven.SelectedValue = "0";
                }
                else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["eleven_pcs"].ToString() == "reject")
                {
                    _ddlPcsEleven.SelectedValue = "2";
                }
                else
                {

                }
            }
            else if (_ddlPcsEleven.SelectedValue == "1")
            {
                if (_totalAllPcs > _totalRecieved)
                {
                    _ddlPcsEleven.SelectedValue = "-1";
                    ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);

                }
                else if (_totalAllPcs == _totalRecieved)
                {
                    _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];
                    if (_dataTableItemStatusList.Rows[itemCheckboxindex]["eleven_pcs"].ToString() == "unread")
                    {
                        _ddlPcsEleven.SelectedValue = "-1";
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["eleven_pcs"].ToString() == "breakage")
                    {
                        if (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) > 0)
                        {
                            lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) + 1).ToString();
                            if (lblBreakageTotalPcsRepeater.Text == "0" || lblBreakageTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("eleven_pcs" /*column Name*/, "ok");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["eleven_pcs"].ToString() == "reject")
                    {
                        if (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) > 0)
                        {
                            lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) + 1).ToString();
                            if (lblRejectTotalPcsRepeater.Text == "0" || lblRejectTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblRejectTotalPcsRepeater.Text = (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("eleven_pcs" /*column Name*/, "ok");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["eleven_pcs"].ToString() == "ok")
                    {

                    }
                    else
                    {

                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);

                    }
                }
                else
                {
                    _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];
                    if (_dataTableItemStatusList.Rows[itemCheckboxindex]["eleven_pcs"].ToString() == "unread")
                    {
                        lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) + 1).ToString();

                        _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("eleven_pcs" /*column Name*/, "ok");
                        _dataTableItemStatusList.AcceptChanges();
                        OverAllTotalPcs();
                        btnUpdateData.Visible = false;
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["eleven_pcs"].ToString() == "breakage")
                    {
                        if (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) > 0)
                        {
                            lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) + 1).ToString();
                            if (lblBreakageTotalPcsRepeater.Text == "0" || lblBreakageTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("eleven_pcs" /*column Name*/, "ok");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["eleven_pcs"].ToString() == "reject")
                    {
                        if (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) > 0)
                        {
                            lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) + 1).ToString();
                            if (lblRejectTotalPcsRepeater.Text == "0" || lblRejectTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblRejectTotalPcsRepeater.Text = (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("eleven_pcs" /*column Name*/, "ok");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["eleven_pcs"].ToString() == "ok")
                    {

                    }
                    else
                    {

                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);

                    }
                }

            }
            else if (_ddlPcsEleven.SelectedValue == "0")
            {
                if (_totalAllPcs > _totalRecieved)
                {
                    _ddlPcsEleven.SelectedValue = "-1";
                    ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);

                }
                else if (_totalAllPcs == _totalRecieved)
                {
                    _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];
                    if (_dataTableItemStatusList.Rows[itemCheckboxindex]["eleven_pcs"].ToString() == "unread")
                    {
                        _ddlPcsEleven.SelectedValue = "-1";
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["eleven_pcs"].ToString() == "ok")
                    {
                        if (Convert.ToInt32(lblOkTotalPcsRepeater.Text) > 0)
                        {
                            lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) + 1).ToString();
                            if (lblOkTotalPcsRepeater.Text == "0" || lblOkTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("eleven_pcs" /*column Name*/, "breakage");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["eleven_pcs"].ToString() == "reject")
                    {
                        if (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) > 0)
                        {
                            lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) + 1).ToString();
                            if (lblRejectTotalPcsRepeater.Text == "0" || lblRejectTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblRejectTotalPcsRepeater.Text = (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("eleven_pcs" /*column Name*/, "breakage");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["eleven_pcs"].ToString() == "breakage")
                    {

                    }
                    else
                    {

                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);

                    }
                }
                else
                {
                    _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];
                    if (_dataTableItemStatusList.Rows[itemCheckboxindex]["eleven_pcs"].ToString() == "unread")
                    {
                        lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) + 1).ToString();

                        _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("eleven_pcs" /*column Name*/, "breakage");
                        _dataTableItemStatusList.AcceptChanges();
                        OverAllTotalPcs();
                        btnUpdateData.Visible = false;
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["eleven_pcs"].ToString() == "ok")
                    {
                        if (Convert.ToInt32(lblOkTotalPcsRepeater.Text) > 0)
                        {
                            lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) + 1).ToString();
                            if (lblOkTotalPcsRepeater.Text == "0" || lblOkTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("eleven_pcs" /*column Name*/, "breakage");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["eleven_pcs"].ToString() == "reject")
                    {
                        if (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) > 0)
                        {
                            lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) + 1).ToString();
                            if (lblRejectTotalPcsRepeater.Text == "0" || lblRejectTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblRejectTotalPcsRepeater.Text = (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("eleven_pcs" /*column Name*/, "breakage");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["eleven_pcs"].ToString() == "breakage")
                    {

                    }
                    else
                    {

                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);

                    }
                }
            }
            else if (_ddlPcsEleven.SelectedValue == "2")
            {
                if (_totalAllPcs > _totalRecieved)
                {
                    _ddlPcsEleven.SelectedValue = "-1";
                    ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);

                }
                else if (_totalAllPcs == _totalRecieved)
                {
                    _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];
                    if (_dataTableItemStatusList.Rows[itemCheckboxindex]["eleven_pcs"].ToString() == "unread")
                    {
                        _ddlPcsEleven.SelectedValue = "-1";
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["eleven_pcs"].ToString() == "ok")
                    {
                        if (Convert.ToInt32(lblOkTotalPcsRepeater.Text) > 0)
                        {
                            lblRejectTotalPcsRepeater.Text = (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) + 1).ToString();
                            if (lblOkTotalPcsRepeater.Text == "0" || lblOkTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("eleven_pcs" /*column Name*/, "reject");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["eleven_pcs"].ToString() == "breakage")
                    {
                        if (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) > 0)
                        {
                            lblRejectTotalPcsRepeater.Text = (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) + 1).ToString();
                            if (lblBreakageTotalPcsRepeater.Text == "0" || lblBreakageTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("eleven_pcs" /*column Name*/, "reject");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["eleven_pcs"].ToString() == "reject")
                    {

                    }
                    else
                    {

                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);

                    }
                }
                else
                {
                    _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];
                    if (_dataTableItemStatusList.Rows[itemCheckboxindex]["eleven_pcs"].ToString() == "unread")
                    {
                        lblRejectTotalPcsRepeater.Text = (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) + 1).ToString();

                        _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("eleven_pcs" /*column Name*/, "reject");
                        _dataTableItemStatusList.AcceptChanges();
                        OverAllTotalPcs();
                        btnUpdateData.Visible = false;
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["eleven_pcs"].ToString() == "ok")
                    {
                        if (Convert.ToInt32(lblOkTotalPcsRepeater.Text) > 0)
                        {
                            lblRejectTotalPcsRepeater.Text = (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) + 1).ToString();
                            if (lblOkTotalPcsRepeater.Text == "0" || lblOkTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("eleven_pcs" /*column Name*/, "reject");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["eleven_pcs"].ToString() == "breakage")
                    {
                        if (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) > 0)
                        {
                            lblRejectTotalPcsRepeater.Text = (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) + 1).ToString();
                            if (lblBreakageTotalPcsRepeater.Text == "0" || lblBreakageTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("eleven_pcs" /*column Name*/, "reject");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["eleven_pcs"].ToString() == "reject")
                    {

                    }
                    else
                    {

                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);

                    }
                }
            }
            else
            {

            }
        }

        protected void ddlPcsTwenty_SelectedIndexChanged(object sender, EventArgs e)
        {
            DropDownList _ddlPcsTwenty = (DropDownList)sender;
            RepeaterItem item = (RepeaterItem)_ddlPcsTwenty.NamingContainer;
            Int32 itemCheckboxindex = ((RepeaterItem)_ddlPcsTwenty.NamingContainer).ItemIndex;
            //Int32 itemindex = ((RepeaterItem)_checkboxOne.NamingContainer).ItemIndex;
            Label lblOkTotalPcsRepeater = (Label)item.FindControl("lblOkTotalPcsRepeater");
            Label lblBreakageTotalPcsRepeater = (Label)item.FindControl("lblBreakageTotalPcsRepeater");
            Label lblRejectTotalPcsRepeater = (Label)item.FindControl("lblRejectTotalPcsRepeater");

            lblOkTotalPcsRepeater.Text = lblOkTotalPcsRepeater.Text == "" ? "0" : lblOkTotalPcsRepeater.Text;
            lblBreakageTotalPcsRepeater.Text = lblBreakageTotalPcsRepeater.Text == "" ? "0" : lblBreakageTotalPcsRepeater.Text;
            lblRejectTotalPcsRepeater.Text = lblRejectTotalPcsRepeater.Text == "" ? "0" : lblRejectTotalPcsRepeater.Text;

            int _totalAllPcs = Convert.ToInt32(txtTotalOkBreakReject.Text == "" ? "0" : txtTotalOkBreakReject.Text);
            int _totalRecieved = Convert.ToInt32(txtreceived.Text == "" ? "0" : txtreceived.Text);

            // -1 (Unselect), 1 (Ok), 0(Breakage) and 2 for Reejct


            if (_ddlPcsTwenty.SelectedValue == "-1")
            {
                _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];
                if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twenty_pcs"].ToString() == "ok")
                {
                    _ddlPcsTwenty.SelectedValue = "1";
                }
                else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twenty_pcs"].ToString() == "breakage")
                {
                    _ddlPcsTwenty.SelectedValue = "0";
                }
                else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twenty_pcs"].ToString() == "reject")
                {
                    _ddlPcsTwenty.SelectedValue = "2";
                }
                else
                {

                }
            }
            else if (_ddlPcsTwenty.SelectedValue == "1")
            {
                if (_totalAllPcs > _totalRecieved)
                {

                    ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);

                }
                else if (_totalAllPcs == _totalRecieved)
                {
                    _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];
                    if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twenty_pcs"].ToString() == "unread")
                    {
                        _ddlPcsTwenty.SelectedValue = "-1";
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twenty_pcs"].ToString() == "breakage")
                    {
                        if (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) > 0)
                        {
                            lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) + 1).ToString();
                            if (lblBreakageTotalPcsRepeater.Text == "0" || lblBreakageTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("twenty_pcs" /*column Name*/, "ok");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twenty_pcs"].ToString() == "reject")
                    {
                        if (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) > 0)
                        {
                            lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) + 1).ToString();
                            if (lblRejectTotalPcsRepeater.Text == "0" || lblRejectTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblRejectTotalPcsRepeater.Text = (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("twenty_pcs" /*column Name*/, "ok");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twenty_pcs"].ToString() == "ok")
                    {

                    }
                    else
                    {

                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);

                    }
                }
                else
                {
                    _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];
                    if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twenty_pcs"].ToString() == "unread")
                    {
                        lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) + 1).ToString();

                        _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("twenty_pcs" /*column Name*/, "ok");
                        _dataTableItemStatusList.AcceptChanges();
                        OverAllTotalPcs();
                        btnUpdateData.Visible = false;
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twenty_pcs"].ToString() == "breakage")
                    {
                        if (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) > 0)
                        {
                            lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) + 1).ToString();
                            if (lblBreakageTotalPcsRepeater.Text == "0" || lblBreakageTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("twenty_pcs" /*column Name*/, "ok");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twenty_pcs"].ToString() == "reject")
                    {
                        if (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) > 0)
                        {
                            lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) + 1).ToString();
                            if (lblRejectTotalPcsRepeater.Text == "0" || lblRejectTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblRejectTotalPcsRepeater.Text = (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("twenty_pcs" /*column Name*/, "ok");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twenty_pcs"].ToString() == "ok")
                    {

                    }
                    else
                    {

                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);

                    }
                }

            }
            else if (_ddlPcsTwenty.SelectedValue == "0")
            {
                if (_totalAllPcs > _totalRecieved)
                {

                    ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);

                }
                else if (_totalAllPcs == _totalRecieved)
                {
                    _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];
                    if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twenty_pcs"].ToString() == "unread")
                    {
                        _ddlPcsTwenty.SelectedValue = "-1";
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twenty_pcs"].ToString() == "ok")
                    {
                        if (Convert.ToInt32(lblOkTotalPcsRepeater.Text) > 0)
                        {
                            lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) + 1).ToString();
                            if (lblOkTotalPcsRepeater.Text == "0" || lblOkTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("twenty_pcs" /*column Name*/, "breakage");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twenty_pcs"].ToString() == "reject")
                    {
                        if (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) > 0)
                        {
                            lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) + 1).ToString();
                            if (lblRejectTotalPcsRepeater.Text == "0" || lblRejectTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblRejectTotalPcsRepeater.Text = (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("twenty_pcs" /*column Name*/, "breakage");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twenty_pcs"].ToString() == "breakage")
                    {

                    }
                    else
                    {

                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);

                    }
                }
                else
                {
                    _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];
                    if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twenty_pcs"].ToString() == "unread")
                    {
                        lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) + 1).ToString();

                        _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("twenty_pcs" /*column Name*/, "breakage");
                        _dataTableItemStatusList.AcceptChanges();
                        OverAllTotalPcs();
                        btnUpdateData.Visible = false;
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twenty_pcs"].ToString() == "ok")
                    {
                        if (Convert.ToInt32(lblOkTotalPcsRepeater.Text) > 0)
                        {
                            lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) + 1).ToString();
                            if (lblOkTotalPcsRepeater.Text == "0" || lblOkTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("twenty_pcs" /*column Name*/, "breakage");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twenty_pcs"].ToString() == "reject")
                    {
                        if (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) > 0)
                        {
                            lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) + 1).ToString();
                            if (lblRejectTotalPcsRepeater.Text == "0" || lblRejectTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblRejectTotalPcsRepeater.Text = (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("twenty_pcs" /*column Name*/, "breakage");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twenty_pcs"].ToString() == "breakage")
                    {

                    }
                    else
                    {

                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);

                    }
                }
            }
            else if (_ddlPcsTwenty.SelectedValue == "2")
            {
                if (_totalAllPcs > _totalRecieved)
                {

                    ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);

                }
                else if (_totalAllPcs == _totalRecieved)
                {
                    _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];
                    if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twenty_pcs"].ToString() == "unread")
                    {
                        _ddlPcsTwenty.SelectedValue = "-1";
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twenty_pcs"].ToString() == "ok")
                    {
                        if (Convert.ToInt32(lblOkTotalPcsRepeater.Text) > 0)
                        {
                            lblRejectTotalPcsRepeater.Text = (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) + 1).ToString();
                            if (lblOkTotalPcsRepeater.Text == "0" || lblOkTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("twenty_pcs" /*column Name*/, "reject");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twenty_pcs"].ToString() == "breakage")
                    {
                        if (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) > 0)
                        {
                            lblRejectTotalPcsRepeater.Text = (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) + 1).ToString();
                            if (lblBreakageTotalPcsRepeater.Text == "0" || lblBreakageTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("twenty_pcs" /*column Name*/, "reject");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twenty_pcs"].ToString() == "reject")
                    {

                    }
                    else
                    {

                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);

                    }
                }
                else
                {
                    _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];
                    if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twenty_pcs"].ToString() == "unread")
                    {
                        lblRejectTotalPcsRepeater.Text = (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) + 1).ToString();

                        _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("twenty_pcs" /*column Name*/, "reject");
                        _dataTableItemStatusList.AcceptChanges();
                        OverAllTotalPcs();
                        btnUpdateData.Visible = false;
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twenty_pcs"].ToString() == "ok")
                    {
                        if (Convert.ToInt32(lblOkTotalPcsRepeater.Text) > 0)
                        {
                            lblRejectTotalPcsRepeater.Text = (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) + 1).ToString();
                            if (lblOkTotalPcsRepeater.Text == "0" || lblOkTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("twenty_pcs" /*column Name*/, "reject");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twenty_pcs"].ToString() == "breakage")
                    {
                        if (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) > 0)
                        {
                            lblRejectTotalPcsRepeater.Text = (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) + 1).ToString();
                            if (lblBreakageTotalPcsRepeater.Text == "0" || lblBreakageTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("twenty_pcs" /*column Name*/, "reject");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twenty_pcs"].ToString() == "reject")
                    {

                    }
                    else
                    {

                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);

                    }
                }
            }
            else
            {

            }
        }

        protected void ddlPcsNineteen_SelectedIndexChanged(object sender, EventArgs e)
        {
            DropDownList _ddlPcsNinteen = (DropDownList)sender;
            RepeaterItem item = (RepeaterItem)_ddlPcsNinteen.NamingContainer;
            Int32 itemCheckboxindex = ((RepeaterItem)_ddlPcsNinteen.NamingContainer).ItemIndex;
            //Int32 itemindex = ((RepeaterItem)_checkboxOne.NamingContainer).ItemIndex;
            Label lblOkTotalPcsRepeater = (Label)item.FindControl("lblOkTotalPcsRepeater");
            Label lblBreakageTotalPcsRepeater = (Label)item.FindControl("lblBreakageTotalPcsRepeater");
            Label lblRejectTotalPcsRepeater = (Label)item.FindControl("lblRejectTotalPcsRepeater");

            lblOkTotalPcsRepeater.Text = lblOkTotalPcsRepeater.Text == "" ? "0" : lblOkTotalPcsRepeater.Text;
            lblBreakageTotalPcsRepeater.Text = lblBreakageTotalPcsRepeater.Text == "" ? "0" : lblBreakageTotalPcsRepeater.Text;
            lblRejectTotalPcsRepeater.Text = lblRejectTotalPcsRepeater.Text == "" ? "0" : lblRejectTotalPcsRepeater.Text;

            int _totalAllPcs = Convert.ToInt32(txtTotalOkBreakReject.Text == "" ? "0" : txtTotalOkBreakReject.Text);
            int _totalRecieved = Convert.ToInt32(txtreceived.Text == "" ? "0" : txtreceived.Text);

            // -1 (Unselect), 1 (Ok), 0(Breakage) and 2 for Reejct


            if (_ddlPcsNinteen.SelectedValue == "-1")
            {
                _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];
                if (_dataTableItemStatusList.Rows[itemCheckboxindex]["ninteen_pcs"].ToString() == "ok")
                {
                    _ddlPcsNinteen.SelectedValue = "1";
                }
                else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["ninteen_pcs"].ToString() == "breakage")
                {
                    _ddlPcsNinteen.SelectedValue = "0";
                }
                else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["ninteen_pcs"].ToString() == "reject")
                {
                    _ddlPcsNinteen.SelectedValue = "2";
                }
                else
                {

                }
            }
            else if (_ddlPcsNinteen.SelectedValue == "1")
            {
                if (_totalAllPcs > _totalRecieved)
                {

                    ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);

                }
                else if (_totalAllPcs == _totalRecieved)
                {
                    _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];
                    if (_dataTableItemStatusList.Rows[itemCheckboxindex]["ninteen_pcs"].ToString() == "unread")
                    {
                        _ddlPcsNinteen.SelectedValue = "-1";
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["ninteen_pcs"].ToString() == "breakage")
                    {
                        if (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) > 0)
                        {
                            lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) + 1).ToString();
                            if (lblBreakageTotalPcsRepeater.Text == "0" || lblBreakageTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("ninteen_pcs" /*column Name*/, "ok");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["ninteen_pcs"].ToString() == "reject")
                    {
                        if (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) > 0)
                        {
                            lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) + 1).ToString();
                            if (lblRejectTotalPcsRepeater.Text == "0" || lblRejectTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblRejectTotalPcsRepeater.Text = (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("ninteen_pcs" /*column Name*/, "ok");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["ninteen_pcs"].ToString() == "ok")
                    {

                    }
                    else
                    {

                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);

                    }
                }
                else
                {
                    _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];
                    if (_dataTableItemStatusList.Rows[itemCheckboxindex]["ninteen_pcs"].ToString() == "unread")
                    {
                        lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) + 1).ToString();

                        _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("ninteen_pcs" /*column Name*/, "ok");
                        _dataTableItemStatusList.AcceptChanges();
                        OverAllTotalPcs();
                        btnUpdateData.Visible = false;
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["ninteen_pcs"].ToString() == "breakage")
                    {
                        if (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) > 0)
                        {
                            lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) + 1).ToString();
                            if (lblBreakageTotalPcsRepeater.Text == "0" || lblBreakageTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("ninteen_pcs" /*column Name*/, "ok");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["ninteen_pcs"].ToString() == "reject")
                    {
                        if (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) > 0)
                        {
                            lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) + 1).ToString();
                            if (lblRejectTotalPcsRepeater.Text == "0" || lblRejectTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblRejectTotalPcsRepeater.Text = (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("ninteen_pcs" /*column Name*/, "ok");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["ninteen_pcs"].ToString() == "ok")
                    {

                    }
                    else
                    {

                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);

                    }
                }

            }
            else if (_ddlPcsNinteen.SelectedValue == "0")
            {
                if (_totalAllPcs > _totalRecieved)
                {

                    ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);

                }
                else if (_totalAllPcs == _totalRecieved)
                {
                    _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];
                    if (_dataTableItemStatusList.Rows[itemCheckboxindex]["ninteen_pcs"].ToString() == "unread")
                    {
                        _ddlPcsNinteen.SelectedValue = "-1";
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["ninteen_pcs"].ToString() == "ok")
                    {
                        if (Convert.ToInt32(lblOkTotalPcsRepeater.Text) > 0)
                        {
                            lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) + 1).ToString();
                            if (lblOkTotalPcsRepeater.Text == "0" || lblOkTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("ninteen_pcs" /*column Name*/, "breakage");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["ninteen_pcs"].ToString() == "reject")
                    {
                        if (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) > 0)
                        {
                            lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) + 1).ToString();
                            if (lblRejectTotalPcsRepeater.Text == "0" || lblRejectTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblRejectTotalPcsRepeater.Text = (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("ninteen_pcs" /*column Name*/, "breakage");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["ninteen_pcs"].ToString() == "breakage")
                    {

                    }
                    else
                    {

                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);

                    }
                }
                else
                {
                    _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];
                    if (_dataTableItemStatusList.Rows[itemCheckboxindex]["ninteen_pcs"].ToString() == "unread")
                    {
                        lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) + 1).ToString();

                        _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("ninteen_pcs" /*column Name*/, "breakage");
                        _dataTableItemStatusList.AcceptChanges();
                        OverAllTotalPcs();
                        btnUpdateData.Visible = false;
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["ninteen_pcs"].ToString() == "ok")
                    {
                        if (Convert.ToInt32(lblOkTotalPcsRepeater.Text) > 0)
                        {
                            lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) + 1).ToString();
                            if (lblOkTotalPcsRepeater.Text == "0" || lblOkTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("ninteen_pcs" /*column Name*/, "breakage");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["ninteen_pcs"].ToString() == "reject")
                    {
                        if (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) > 0)
                        {
                            lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) + 1).ToString();
                            if (lblRejectTotalPcsRepeater.Text == "0" || lblRejectTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblRejectTotalPcsRepeater.Text = (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("ninteen_pcs" /*column Name*/, "breakage");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["ninteen_pcs"].ToString() == "breakage")
                    {

                    }
                    else
                    {

                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);

                    }
                }
            }
            else if (_ddlPcsNinteen.SelectedValue == "2")
            {
                if (_totalAllPcs > _totalRecieved)
                {

                    ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);

                }
                else if (_totalAllPcs == _totalRecieved)
                {
                    _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];
                    if (_dataTableItemStatusList.Rows[itemCheckboxindex]["ninteen_pcs"].ToString() == "unread")
                    {
                        _ddlPcsNinteen.SelectedValue = "-1";
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["ninteen_pcs"].ToString() == "ok")
                    {
                        if (Convert.ToInt32(lblOkTotalPcsRepeater.Text) > 0)
                        {
                            lblRejectTotalPcsRepeater.Text = (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) + 1).ToString();
                            if (lblOkTotalPcsRepeater.Text == "0" || lblOkTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("ninteen_pcs" /*column Name*/, "reject");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["ninteen_pcs"].ToString() == "breakage")
                    {
                        if (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) > 0)
                        {
                            lblRejectTotalPcsRepeater.Text = (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) + 1).ToString();
                            if (lblBreakageTotalPcsRepeater.Text == "0" || lblBreakageTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("ninteen_pcs" /*column Name*/, "reject");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["ninteen_pcs"].ToString() == "reject")
                    {

                    }
                    else
                    {

                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);

                    }
                }
                else
                {
                    _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];
                    if (_dataTableItemStatusList.Rows[itemCheckboxindex]["ninteen_pcs"].ToString() == "unread")
                    {
                        lblRejectTotalPcsRepeater.Text = (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) + 1).ToString();

                        _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("ninteen_pcs" /*column Name*/, "reject");
                        _dataTableItemStatusList.AcceptChanges();
                        OverAllTotalPcs();
                        btnUpdateData.Visible = false;
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["ninteen_pcs"].ToString() == "ok")
                    {
                        if (Convert.ToInt32(lblOkTotalPcsRepeater.Text) > 0)
                        {
                            lblRejectTotalPcsRepeater.Text = (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) + 1).ToString();
                            if (lblOkTotalPcsRepeater.Text == "0" || lblOkTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("ninteen_pcs" /*column Name*/, "reject");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["ninteen_pcs"].ToString() == "breakage")
                    {
                        if (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) > 0)
                        {
                            lblRejectTotalPcsRepeater.Text = (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) + 1).ToString();
                            if (lblBreakageTotalPcsRepeater.Text == "0" || lblBreakageTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("ninteen_pcs" /*column Name*/, "reject");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["ninteen_pcs"].ToString() == "reject")
                    {

                    }
                    else
                    {

                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);

                    }
                }
            }
            else
            {

            }
        }

        protected void ddlPcsEighteen_SelectedIndexChanged(object sender, EventArgs e)
        {
            DropDownList _ddlPcsEighteen = (DropDownList)sender;
            RepeaterItem item = (RepeaterItem)_ddlPcsEighteen.NamingContainer;
            Int32 itemCheckboxindex = ((RepeaterItem)_ddlPcsEighteen.NamingContainer).ItemIndex;
            //Int32 itemindex = ((RepeaterItem)_checkboxOne.NamingContainer).ItemIndex;
            Label lblOkTotalPcsRepeater = (Label)item.FindControl("lblOkTotalPcsRepeater");
            Label lblBreakageTotalPcsRepeater = (Label)item.FindControl("lblBreakageTotalPcsRepeater");
            Label lblRejectTotalPcsRepeater = (Label)item.FindControl("lblRejectTotalPcsRepeater");

            lblOkTotalPcsRepeater.Text = lblOkTotalPcsRepeater.Text == "" ? "0" : lblOkTotalPcsRepeater.Text;
            lblBreakageTotalPcsRepeater.Text = lblBreakageTotalPcsRepeater.Text == "" ? "0" : lblBreakageTotalPcsRepeater.Text;
            lblRejectTotalPcsRepeater.Text = lblRejectTotalPcsRepeater.Text == "" ? "0" : lblRejectTotalPcsRepeater.Text;

            int _totalAllPcs = Convert.ToInt32(txtTotalOkBreakReject.Text == "" ? "0" : txtTotalOkBreakReject.Text);
            int _totalRecieved = Convert.ToInt32(txtreceived.Text == "" ? "0" : txtreceived.Text);

            // -1 (Unselect), 1 (Ok), 0(Breakage) and 2 for Reejct


            if (_ddlPcsEighteen.SelectedValue == "-1")
            {
                _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];
                if (_dataTableItemStatusList.Rows[itemCheckboxindex]["eighteen_pcs"].ToString() == "ok")
                {
                    _ddlPcsEighteen.SelectedValue = "1";
                }
                else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["eighteen_pcs"].ToString() == "breakage")
                {
                    _ddlPcsEighteen.SelectedValue = "0";
                }
                else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["eighteen_pcs"].ToString() == "reject")
                {
                    _ddlPcsEighteen.SelectedValue = "2";
                }
                else
                {

                }
            }
            else if (_ddlPcsEighteen.SelectedValue == "1")
            {
                if (_totalAllPcs > _totalRecieved)
                {

                    ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);

                }
                else if (_totalAllPcs == _totalRecieved)
                {
                    _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];
                    if (_dataTableItemStatusList.Rows[itemCheckboxindex]["eighteen_pcs"].ToString() == "unread")
                    {
                        _ddlPcsEighteen.SelectedValue = "-1";
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["eighteen_pcs"].ToString() == "breakage")
                    {
                        if (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) > 0)
                        {
                            lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) + 1).ToString();
                            if (lblBreakageTotalPcsRepeater.Text == "0" || lblBreakageTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("eighteen_pcs" /*column Name*/, "ok");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["eighteen_pcs"].ToString() == "reject")
                    {
                        if (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) > 0)
                        {
                            lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) + 1).ToString();
                            if (lblRejectTotalPcsRepeater.Text == "0" || lblRejectTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblRejectTotalPcsRepeater.Text = (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("eighteen_pcs" /*column Name*/, "ok");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["eighteen_pcs"].ToString() == "ok")
                    {

                    }
                    else
                    {

                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);

                    }
                }
                else
                {
                    _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];
                    if (_dataTableItemStatusList.Rows[itemCheckboxindex]["eighteen_pcs"].ToString() == "unread")
                    {
                        lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) + 1).ToString();

                        _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("eighteen_pcs" /*column Name*/, "ok");
                        _dataTableItemStatusList.AcceptChanges();
                        OverAllTotalPcs();
                        btnUpdateData.Visible = false;
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["eighteen_pcs"].ToString() == "breakage")
                    {
                        if (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) > 0)
                        {
                            lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) + 1).ToString();
                            if (lblBreakageTotalPcsRepeater.Text == "0" || lblBreakageTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("eighteen_pcs" /*column Name*/, "ok");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["eighteen_pcs"].ToString() == "reject")
                    {
                        if (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) > 0)
                        {
                            lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) + 1).ToString();
                            if (lblRejectTotalPcsRepeater.Text == "0" || lblRejectTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblRejectTotalPcsRepeater.Text = (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("eighteen_pcs" /*column Name*/, "ok");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["eighteen_pcs"].ToString() == "ok")
                    {

                    }
                    else
                    {

                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);

                    }
                }

            }
            else if (_ddlPcsEighteen.SelectedValue == "0")
            {
                if (_totalAllPcs > _totalRecieved)
                {

                    ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);

                }
                else if (_totalAllPcs == _totalRecieved)
                {
                    _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];
                    if (_dataTableItemStatusList.Rows[itemCheckboxindex]["eighteen_pcs"].ToString() == "unread")
                    {
                        _ddlPcsEighteen.SelectedValue = "-1";
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["eighteen_pcs"].ToString() == "ok")
                    {
                        if (Convert.ToInt32(lblOkTotalPcsRepeater.Text) > 0)
                        {
                            lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) + 1).ToString();
                            if (lblOkTotalPcsRepeater.Text == "0" || lblOkTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("eighteen_pcs" /*column Name*/, "breakage");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["eighteen_pcs"].ToString() == "reject")
                    {
                        if (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) > 0)
                        {
                            lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) + 1).ToString();
                            if (lblRejectTotalPcsRepeater.Text == "0" || lblRejectTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblRejectTotalPcsRepeater.Text = (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("eighteen_pcs" /*column Name*/, "breakage");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["eighteen_pcs"].ToString() == "breakage")
                    {

                    }
                    else
                    {

                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);

                    }
                }
                else
                {
                    _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];
                    if (_dataTableItemStatusList.Rows[itemCheckboxindex]["eighteen_pcs"].ToString() == "unread")
                    {
                        lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) + 1).ToString();

                        _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("eighteen_pcs" /*column Name*/, "breakage");
                        _dataTableItemStatusList.AcceptChanges();
                        OverAllTotalPcs();
                        btnUpdateData.Visible = false;
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["eighteen_pcs"].ToString() == "ok")
                    {
                        if (Convert.ToInt32(lblOkTotalPcsRepeater.Text) > 0)
                        {
                            lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) + 1).ToString();
                            if (lblOkTotalPcsRepeater.Text == "0" || lblOkTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("eighteen_pcs" /*column Name*/, "breakage");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["eighteen_pcs"].ToString() == "reject")
                    {
                        if (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) > 0)
                        {
                            lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) + 1).ToString();
                            if (lblRejectTotalPcsRepeater.Text == "0" || lblRejectTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblRejectTotalPcsRepeater.Text = (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("eighteen_pcs" /*column Name*/, "breakage");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["eighteen_pcs"].ToString() == "breakage")
                    {

                    }
                    else
                    {

                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);

                    }
                }
            }
            else if (_ddlPcsEighteen.SelectedValue == "2")
            {
                if (_totalAllPcs > _totalRecieved)
                {

                    ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);

                }
                else if (_totalAllPcs == _totalRecieved)
                {
                    _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];
                    if (_dataTableItemStatusList.Rows[itemCheckboxindex]["eighteen_pcs"].ToString() == "unread")
                    {
                        _ddlPcsEighteen.SelectedValue = "-1";
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["eighteen_pcs"].ToString() == "ok")
                    {
                        if (Convert.ToInt32(lblOkTotalPcsRepeater.Text) > 0)
                        {
                            lblRejectTotalPcsRepeater.Text = (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) + 1).ToString();
                            if (lblOkTotalPcsRepeater.Text == "0" || lblOkTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("eighteen_pcs" /*column Name*/, "reject");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["eighteen_pcs"].ToString() == "breakage")
                    {
                        if (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) > 0)
                        {
                            lblRejectTotalPcsRepeater.Text = (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) + 1).ToString();
                            if (lblBreakageTotalPcsRepeater.Text == "0" || lblBreakageTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("eighteen_pcs" /*column Name*/, "reject");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["eighteen_pcs"].ToString() == "reject")
                    {

                    }
                    else
                    {

                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);

                    }
                }
                else
                {
                    _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];
                    if (_dataTableItemStatusList.Rows[itemCheckboxindex]["eighteen_pcs"].ToString() == "unread")
                    {
                        lblRejectTotalPcsRepeater.Text = (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) + 1).ToString();

                        _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("eighteen_pcs" /*column Name*/, "reject");
                        _dataTableItemStatusList.AcceptChanges();
                        OverAllTotalPcs();
                        btnUpdateData.Visible = false;
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["eighteen_pcs"].ToString() == "ok")
                    {
                        if (Convert.ToInt32(lblOkTotalPcsRepeater.Text) > 0)
                        {
                            lblRejectTotalPcsRepeater.Text = (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) + 1).ToString();
                            if (lblOkTotalPcsRepeater.Text == "0" || lblOkTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("eighteen_pcs" /*column Name*/, "reject");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["eighteen_pcs"].ToString() == "breakage")
                    {
                        if (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) > 0)
                        {
                            lblRejectTotalPcsRepeater.Text = (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) + 1).ToString();
                            if (lblBreakageTotalPcsRepeater.Text == "0" || lblBreakageTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("eighteen_pcs" /*column Name*/, "reject");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["eighteen_pcs"].ToString() == "reject")
                    {

                    }
                    else
                    {

                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);

                    }
                }
            }
            else
            {

            }
        }

        protected void ddlPcsSeventeen_SelectedIndexChanged(object sender, EventArgs e)
        {
            DropDownList _ddlPcsSeventeen = (DropDownList)sender;
            RepeaterItem item = (RepeaterItem)_ddlPcsSeventeen.NamingContainer;
            Int32 itemCheckboxindex = ((RepeaterItem)_ddlPcsSeventeen.NamingContainer).ItemIndex;
            //Int32 itemindex = ((RepeaterItem)_checkboxOne.NamingContainer).ItemIndex;
            Label lblOkTotalPcsRepeater = (Label)item.FindControl("lblOkTotalPcsRepeater");
            Label lblBreakageTotalPcsRepeater = (Label)item.FindControl("lblBreakageTotalPcsRepeater");
            Label lblRejectTotalPcsRepeater = (Label)item.FindControl("lblRejectTotalPcsRepeater");

            lblOkTotalPcsRepeater.Text = lblOkTotalPcsRepeater.Text == "" ? "0" : lblOkTotalPcsRepeater.Text;
            lblBreakageTotalPcsRepeater.Text = lblBreakageTotalPcsRepeater.Text == "" ? "0" : lblBreakageTotalPcsRepeater.Text;
            lblRejectTotalPcsRepeater.Text = lblRejectTotalPcsRepeater.Text == "" ? "0" : lblRejectTotalPcsRepeater.Text;

            int _totalAllPcs = Convert.ToInt32(txtTotalOkBreakReject.Text == "" ? "0" : txtTotalOkBreakReject.Text);
            int _totalRecieved = Convert.ToInt32(txtreceived.Text == "" ? "0" : txtreceived.Text);

            // -1 (Unselect), 1 (Ok), 0(Breakage) and 2 for Reejct


            if (_ddlPcsSeventeen.SelectedValue == "-1")
            {
                _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];
                if (_dataTableItemStatusList.Rows[itemCheckboxindex]["seventeen_pcs"].ToString() == "ok")
                {
                    _ddlPcsSeventeen.SelectedValue = "1";
                }
                else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["seventeen_pcs"].ToString() == "breakage")
                {
                    _ddlPcsSeventeen.SelectedValue = "0";
                }
                else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["seventeen_pcs"].ToString() == "reject")
                {
                    _ddlPcsSeventeen.SelectedValue = "2";
                }
                else
                {

                }
            }
            else if (_ddlPcsSeventeen.SelectedValue == "1")
            {
                if (_totalAllPcs > _totalRecieved)
                {

                    ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);

                }
                else if (_totalAllPcs == _totalRecieved)
                {
                    _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];
                    if (_dataTableItemStatusList.Rows[itemCheckboxindex]["seventeen_pcs"].ToString() == "unread")
                    {
                        _ddlPcsSeventeen.SelectedValue = "-1";
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["seventeen_pcs"].ToString() == "breakage")
                    {
                        if (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) > 0)
                        {
                            lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) + 1).ToString();
                            if (lblBreakageTotalPcsRepeater.Text == "0" || lblBreakageTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("seventeen_pcs" /*column Name*/, "ok");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["seventeen_pcs"].ToString() == "reject")
                    {
                        if (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) > 0)
                        {
                            lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) + 1).ToString();
                            if (lblRejectTotalPcsRepeater.Text == "0" || lblRejectTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblRejectTotalPcsRepeater.Text = (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("seventeen_pcs" /*column Name*/, "ok");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["seventeen_pcs"].ToString() == "ok")
                    {

                    }
                    else
                    {

                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);

                    }
                }
                else
                {
                    _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];
                    if (_dataTableItemStatusList.Rows[itemCheckboxindex]["seventeen_pcs"].ToString() == "unread")
                    {
                        lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) + 1).ToString();

                        _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("seventeen_pcs" /*column Name*/, "ok");
                        _dataTableItemStatusList.AcceptChanges();
                        OverAllTotalPcs();
                        btnUpdateData.Visible = false;
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["seventeen_pcs"].ToString() == "breakage")
                    {
                        if (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) > 0)
                        {
                            lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) + 1).ToString();
                            if (lblBreakageTotalPcsRepeater.Text == "0" || lblBreakageTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("seventeen_pcs" /*column Name*/, "ok");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["seventeen_pcs"].ToString() == "reject")
                    {
                        if (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) > 0)
                        {
                            lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) + 1).ToString();
                            if (lblRejectTotalPcsRepeater.Text == "0" || lblRejectTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblRejectTotalPcsRepeater.Text = (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("seventeen_pcs" /*column Name*/, "ok");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["seventeen_pcs"].ToString() == "ok")
                    {

                    }
                    else
                    {

                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);

                    }
                }

            }
            else if (_ddlPcsSeventeen.SelectedValue == "0")
            {
                if (_totalAllPcs > _totalRecieved)
                {

                    ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);

                }
                else if (_totalAllPcs == _totalRecieved)
                {
                    _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];
                    if (_dataTableItemStatusList.Rows[itemCheckboxindex]["seventeen_pcs"].ToString() == "unread")
                    {
                        _ddlPcsSeventeen.SelectedValue = "-1";
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["seventeen_pcs"].ToString() == "ok")
                    {
                        if (Convert.ToInt32(lblOkTotalPcsRepeater.Text) > 0)
                        {
                            lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) + 1).ToString();
                            if (lblOkTotalPcsRepeater.Text == "0" || lblOkTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("seventeen_pcs" /*column Name*/, "breakage");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["seventeen_pcs"].ToString() == "reject")
                    {
                        if (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) > 0)
                        {
                            lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) + 1).ToString();
                            if (lblRejectTotalPcsRepeater.Text == "0" || lblRejectTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblRejectTotalPcsRepeater.Text = (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("seventeen_pcs" /*column Name*/, "breakage");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["seventeen_pcs"].ToString() == "breakage")
                    {

                    }
                    else
                    {

                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);

                    }
                }
                else
                {
                    _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];
                    if (_dataTableItemStatusList.Rows[itemCheckboxindex]["seventeen_pcs"].ToString() == "unread")
                    {
                        lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) + 1).ToString();

                        _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("seventeen_pcs" /*column Name*/, "breakage");
                        _dataTableItemStatusList.AcceptChanges();
                        OverAllTotalPcs();
                        btnUpdateData.Visible = false;
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["seventeen_pcs"].ToString() == "ok")
                    {
                        if (Convert.ToInt32(lblOkTotalPcsRepeater.Text) > 0)
                        {
                            lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) + 1).ToString();
                            if (lblOkTotalPcsRepeater.Text == "0" || lblOkTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("seventeen_pcs" /*column Name*/, "breakage");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["seventeen_pcs"].ToString() == "reject")
                    {
                        if (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) > 0)
                        {
                            lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) + 1).ToString();
                            if (lblRejectTotalPcsRepeater.Text == "0" || lblRejectTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblRejectTotalPcsRepeater.Text = (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("seventeen_pcs" /*column Name*/, "breakage");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["seventeen_pcs"].ToString() == "breakage")
                    {

                    }
                    else
                    {

                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);

                    }
                }
            }
            else if (_ddlPcsSeventeen.SelectedValue == "2")
            {
                if (_totalAllPcs > _totalRecieved)
                {

                    ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);

                }
                else if (_totalAllPcs == _totalRecieved)
                {
                    _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];
                    if (_dataTableItemStatusList.Rows[itemCheckboxindex]["seventeen_pcs"].ToString() == "unread")
                    {
                        _ddlPcsSeventeen.SelectedValue = "-1";
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["seventeen_pcs"].ToString() == "ok")
                    {
                        if (Convert.ToInt32(lblOkTotalPcsRepeater.Text) > 0)
                        {
                            lblRejectTotalPcsRepeater.Text = (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) + 1).ToString();
                            if (lblOkTotalPcsRepeater.Text == "0" || lblOkTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("seventeen_pcs" /*column Name*/, "reject");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["seventeen_pcs"].ToString() == "breakage")
                    {
                        if (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) > 0)
                        {
                            lblRejectTotalPcsRepeater.Text = (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) + 1).ToString();
                            if (lblBreakageTotalPcsRepeater.Text == "0" || lblBreakageTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("seventeen_pcs" /*column Name*/, "reject");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["seventeen_pcs"].ToString() == "reject")
                    {

                    }
                    else
                    {

                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);

                    }
                }
                else
                {
                    _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];
                    if (_dataTableItemStatusList.Rows[itemCheckboxindex]["seventeen_pcs"].ToString() == "unread")
                    {
                        lblRejectTotalPcsRepeater.Text = (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) + 1).ToString();

                        _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("seventeen_pcs" /*column Name*/, "reject");
                        _dataTableItemStatusList.AcceptChanges();
                        OverAllTotalPcs();
                        btnUpdateData.Visible = false;
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["seventeen_pcs"].ToString() == "ok")
                    {
                        if (Convert.ToInt32(lblOkTotalPcsRepeater.Text) > 0)
                        {
                            lblRejectTotalPcsRepeater.Text = (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) + 1).ToString();
                            if (lblOkTotalPcsRepeater.Text == "0" || lblOkTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("seventeen_pcs" /*column Name*/, "reject");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["seventeen_pcs"].ToString() == "breakage")
                    {
                        if (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) > 0)
                        {
                            lblRejectTotalPcsRepeater.Text = (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) + 1).ToString();
                            if (lblBreakageTotalPcsRepeater.Text == "0" || lblBreakageTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("seventeen_pcs" /*column Name*/, "reject");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["seventeen_pcs"].ToString() == "reject")
                    {

                    }
                    else
                    {

                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);

                    }
                }
            }
            else
            {

            }
        }

        protected void ddlPcsSixteen_SelectedIndexChanged(object sender, EventArgs e)
        {
            DropDownList _ddlPcsSixteen = (DropDownList)sender;
            RepeaterItem item = (RepeaterItem)_ddlPcsSixteen.NamingContainer;
            Int32 itemCheckboxindex = ((RepeaterItem)_ddlPcsSixteen.NamingContainer).ItemIndex;
            //Int32 itemindex = ((RepeaterItem)_checkboxOne.NamingContainer).ItemIndex;
            Label lblOkTotalPcsRepeater = (Label)item.FindControl("lblOkTotalPcsRepeater");
            Label lblBreakageTotalPcsRepeater = (Label)item.FindControl("lblBreakageTotalPcsRepeater");
            Label lblRejectTotalPcsRepeater = (Label)item.FindControl("lblRejectTotalPcsRepeater");

            lblOkTotalPcsRepeater.Text = lblOkTotalPcsRepeater.Text == "" ? "0" : lblOkTotalPcsRepeater.Text;
            lblBreakageTotalPcsRepeater.Text = lblBreakageTotalPcsRepeater.Text == "" ? "0" : lblBreakageTotalPcsRepeater.Text;
            lblRejectTotalPcsRepeater.Text = lblRejectTotalPcsRepeater.Text == "" ? "0" : lblRejectTotalPcsRepeater.Text;

            int _totalAllPcs = Convert.ToInt32(txtTotalOkBreakReject.Text == "" ? "0" : txtTotalOkBreakReject.Text);
            int _totalRecieved = Convert.ToInt32(txtreceived.Text == "" ? "0" : txtreceived.Text);

            // -1 (Unselect), 1 (Ok), 0(Breakage) and 2 for Reejct


            if (_ddlPcsSixteen.SelectedValue == "-1")
            {
                _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];
                if (_dataTableItemStatusList.Rows[itemCheckboxindex]["sixteen_pcs"].ToString() == "ok")
                {
                    _ddlPcsSixteen.SelectedValue = "1";
                }
                else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["sixteen_pcs"].ToString() == "breakage")
                {
                    _ddlPcsSixteen.SelectedValue = "0";
                }
                else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["sixteen_pcs"].ToString() == "reject")
                {
                    _ddlPcsSixteen.SelectedValue = "2";
                }
                else
                {

                }
            }
            else if (_ddlPcsSixteen.SelectedValue == "1")
            {
                if (_totalAllPcs > _totalRecieved)
                {

                    ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);

                }
                else if (_totalAllPcs == _totalRecieved)
                {
                    _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];
                    if (_dataTableItemStatusList.Rows[itemCheckboxindex]["sixteen_pcs"].ToString() == "unread")
                    {
                        _ddlPcsSixteen.SelectedValue = "-1";
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["sixteen_pcs"].ToString() == "breakage")
                    {
                        if (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) > 0)
                        {
                            lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) + 1).ToString();
                            if (lblBreakageTotalPcsRepeater.Text == "0" || lblBreakageTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("sixteen_pcs" /*column Name*/, "ok");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["sixteen_pcs"].ToString() == "reject")
                    {
                        if (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) > 0)
                        {
                            lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) + 1).ToString();
                            if (lblRejectTotalPcsRepeater.Text == "0" || lblRejectTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblRejectTotalPcsRepeater.Text = (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("sixteen_pcs" /*column Name*/, "ok");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["sixteen_pcs"].ToString() == "ok")
                    {

                    }
                    else
                    {

                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);

                    }
                }
                else
                {
                    _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];
                    if (_dataTableItemStatusList.Rows[itemCheckboxindex]["sixteen_pcs"].ToString() == "unread")
                    {
                        lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) + 1).ToString();

                        _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("sixteen_pcs" /*column Name*/, "ok");
                        _dataTableItemStatusList.AcceptChanges();
                        OverAllTotalPcs();
                        btnUpdateData.Visible = false;
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["sixteen_pcs"].ToString() == "breakage")
                    {
                        if (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) > 0)
                        {
                            lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) + 1).ToString();
                            if (lblBreakageTotalPcsRepeater.Text == "0" || lblBreakageTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("sixteen_pcs" /*column Name*/, "ok");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["sixteen_pcs"].ToString() == "reject")
                    {
                        if (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) > 0)
                        {
                            lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) + 1).ToString();
                            if (lblRejectTotalPcsRepeater.Text == "0" || lblRejectTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblRejectTotalPcsRepeater.Text = (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("sixteen_pcs" /*column Name*/, "ok");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["sixteen_pcs"].ToString() == "ok")
                    {

                    }
                    else
                    {

                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);

                    }
                }

            }
            else if (_ddlPcsSixteen.SelectedValue == "0")
            {
                if (_totalAllPcs > _totalRecieved)
                {

                    ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);

                }
                else if (_totalAllPcs == _totalRecieved)
                {
                    _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];
                    if (_dataTableItemStatusList.Rows[itemCheckboxindex]["sixteen_pcs"].ToString() == "unread")
                    {
                        _ddlPcsSixteen.SelectedValue = "-1";
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["sixteen_pcs"].ToString() == "ok")
                    {
                        if (Convert.ToInt32(lblOkTotalPcsRepeater.Text) > 0)
                        {
                            lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) + 1).ToString();
                            if (lblOkTotalPcsRepeater.Text == "0" || lblOkTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("sixteen_pcs" /*column Name*/, "breakage");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["sixteen_pcs"].ToString() == "reject")
                    {
                        if (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) > 0)
                        {
                            lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) + 1).ToString();
                            if (lblRejectTotalPcsRepeater.Text == "0" || lblRejectTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblRejectTotalPcsRepeater.Text = (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("sixteen_pcs" /*column Name*/, "breakage");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["sixteen_pcs"].ToString() == "breakage")
                    {

                    }
                    else
                    {

                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);

                    }
                }
                else
                {
                    _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];
                    if (_dataTableItemStatusList.Rows[itemCheckboxindex]["sixteen_pcs"].ToString() == "unread")
                    {
                        lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) + 1).ToString();

                        _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("sixteen_pcs" /*column Name*/, "breakage");
                        _dataTableItemStatusList.AcceptChanges();
                        OverAllTotalPcs();
                        btnUpdateData.Visible = false;
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["sixteen_pcs"].ToString() == "ok")
                    {
                        if (Convert.ToInt32(lblOkTotalPcsRepeater.Text) > 0)
                        {
                            lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) + 1).ToString();
                            if (lblOkTotalPcsRepeater.Text == "0" || lblOkTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("sixteen_pcs" /*column Name*/, "breakage");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["sixteen_pcs"].ToString() == "reject")
                    {
                        if (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) > 0)
                        {
                            lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) + 1).ToString();
                            if (lblRejectTotalPcsRepeater.Text == "0" || lblRejectTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblRejectTotalPcsRepeater.Text = (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("sixteen_pcs" /*column Name*/, "breakage");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["sixteen_pcs"].ToString() == "breakage")
                    {

                    }
                    else
                    {

                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);

                    }
                }
            }
            else if (_ddlPcsSixteen.SelectedValue == "2")
            {
                if (_totalAllPcs > _totalRecieved)
                {

                    ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);

                }
                else if (_totalAllPcs == _totalRecieved)
                {
                    _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];
                    if (_dataTableItemStatusList.Rows[itemCheckboxindex]["sixteen_pcs"].ToString() == "unread")
                    {
                        _ddlPcsSixteen.SelectedValue = "-1";
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["sixteen_pcs"].ToString() == "ok")
                    {
                        if (Convert.ToInt32(lblOkTotalPcsRepeater.Text) > 0)
                        {
                            lblRejectTotalPcsRepeater.Text = (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) + 1).ToString();
                            if (lblOkTotalPcsRepeater.Text == "0" || lblOkTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("sixteen_pcs" /*column Name*/, "reject");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["sixteen_pcs"].ToString() == "breakage")
                    {
                        if (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) > 0)
                        {
                            lblRejectTotalPcsRepeater.Text = (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) + 1).ToString();
                            if (lblBreakageTotalPcsRepeater.Text == "0" || lblBreakageTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("sixteen_pcs" /*column Name*/, "reject");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["sixteen_pcs"].ToString() == "reject")
                    {

                    }
                    else
                    {

                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);

                    }
                }
                else
                {
                    _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];
                    if (_dataTableItemStatusList.Rows[itemCheckboxindex]["sixteen_pcs"].ToString() == "unread")
                    {
                        lblRejectTotalPcsRepeater.Text = (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) + 1).ToString();

                        _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("sixteen_pcs" /*column Name*/, "reject");
                        _dataTableItemStatusList.AcceptChanges();
                        OverAllTotalPcs();
                        btnUpdateData.Visible = false;
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["sixteen_pcs"].ToString() == "ok")
                    {
                        if (Convert.ToInt32(lblOkTotalPcsRepeater.Text) > 0)
                        {
                            lblRejectTotalPcsRepeater.Text = (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) + 1).ToString();
                            if (lblOkTotalPcsRepeater.Text == "0" || lblOkTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("sixteen_pcs" /*column Name*/, "reject");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["sixteen_pcs"].ToString() == "breakage")
                    {
                        if (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) > 0)
                        {
                            lblRejectTotalPcsRepeater.Text = (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) + 1).ToString();
                            if (lblBreakageTotalPcsRepeater.Text == "0" || lblBreakageTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("sixteen_pcs" /*column Name*/, "reject");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["sixteen_pcs"].ToString() == "reject")
                    {

                    }
                    else
                    {

                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);

                    }
                }
            }
            else
            {

            }
        }

        protected void ddlPcsTwentyFive_SelectedIndexChanged(object sender, EventArgs e)
        {
            DropDownList _ddlPcsTwentyFive = (DropDownList)sender;
            RepeaterItem item = (RepeaterItem)_ddlPcsTwentyFive.NamingContainer;
            Int32 itemCheckboxindex = ((RepeaterItem)_ddlPcsTwentyFive.NamingContainer).ItemIndex;
            //Int32 itemindex = ((RepeaterItem)_checkboxOne.NamingContainer).ItemIndex;
            Label lblOkTotalPcsRepeater = (Label)item.FindControl("lblOkTotalPcsRepeater");
            Label lblBreakageTotalPcsRepeater = (Label)item.FindControl("lblBreakageTotalPcsRepeater");
            Label lblRejectTotalPcsRepeater = (Label)item.FindControl("lblRejectTotalPcsRepeater");

            lblOkTotalPcsRepeater.Text = lblOkTotalPcsRepeater.Text == "" ? "0" : lblOkTotalPcsRepeater.Text;
            lblBreakageTotalPcsRepeater.Text = lblBreakageTotalPcsRepeater.Text == "" ? "0" : lblBreakageTotalPcsRepeater.Text;
            lblRejectTotalPcsRepeater.Text = lblRejectTotalPcsRepeater.Text == "" ? "0" : lblRejectTotalPcsRepeater.Text;

            int _totalAllPcs = Convert.ToInt32(txtTotalOkBreakReject.Text == "" ? "0" : txtTotalOkBreakReject.Text);
            int _totalRecieved = Convert.ToInt32(txtreceived.Text == "" ? "0" : txtreceived.Text);

            // -1 (Unselect), 1 (Ok), 0(Breakage) and 2 for Reejct


            if (_ddlPcsTwentyFive.SelectedValue == "-1")
            {
                _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];
                if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twentyfive_pcs"].ToString() == "ok")
                {
                    _ddlPcsTwentyFive.SelectedValue = "1";
                }
                else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twentyfive_pcs"].ToString() == "breakage")
                {
                    _ddlPcsTwentyFive.SelectedValue = "0";
                }
                else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twentyfive_pcs"].ToString() == "reject")
                {
                    _ddlPcsTwentyFive.SelectedValue = "2";
                }
                else
                {

                }
            }
            else if (_ddlPcsTwentyFive.SelectedValue == "1")
            {
                if (_totalAllPcs > _totalRecieved)
                {

                    ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);

                }
                else if (_totalAllPcs == _totalRecieved)
                {
                    _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];
                    if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twentyfive_pcs"].ToString() == "unread")
                    {
                        _ddlPcsTwentyFive.SelectedValue = "-1";
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twentyfive_pcs"].ToString() == "breakage")
                    {
                        if (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) > 0)
                        {
                            lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) + 1).ToString();
                            if (lblBreakageTotalPcsRepeater.Text == "0" || lblBreakageTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("twentyfive_pcs" /*column Name*/, "ok");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twentyfive_pcs"].ToString() == "reject")
                    {
                        if (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) > 0)
                        {
                            lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) + 1).ToString();
                            if (lblRejectTotalPcsRepeater.Text == "0" || lblRejectTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblRejectTotalPcsRepeater.Text = (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("twentyfive_pcs" /*column Name*/, "ok");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twentyfive_pcs"].ToString() == "ok")
                    {

                    }
                    else
                    {

                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);

                    }
                }
                else
                {
                    _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];
                    if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twentyfive_pcs"].ToString() == "unread")
                    {
                        lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) + 1).ToString();

                        _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("twentyfive_pcs" /*column Name*/, "ok");
                        _dataTableItemStatusList.AcceptChanges();
                        OverAllTotalPcs();
                        btnUpdateData.Visible = false;
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twentyfive_pcs"].ToString() == "breakage")
                    {
                        if (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) > 0)
                        {
                            lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) + 1).ToString();
                            if (lblBreakageTotalPcsRepeater.Text == "0" || lblBreakageTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("twentyfive_pcs" /*column Name*/, "ok");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twentyfive_pcs"].ToString() == "reject")
                    {
                        if (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) > 0)
                        {
                            lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) + 1).ToString();
                            if (lblRejectTotalPcsRepeater.Text == "0" || lblRejectTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblRejectTotalPcsRepeater.Text = (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("twentyfive_pcs" /*column Name*/, "ok");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twentyfive_pcs"].ToString() == "ok")
                    {

                    }
                    else
                    {

                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);

                    }
                }

            }
            else if (_ddlPcsTwentyFive.SelectedValue == "0")
            {
                if (_totalAllPcs > _totalRecieved)
                {

                    ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);

                }
                else if (_totalAllPcs == _totalRecieved)
                {
                    _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];
                    if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twentyfive_pcs"].ToString() == "unread")
                    {
                        _ddlPcsTwentyFive.SelectedValue = "-1";
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twentyfive_pcs"].ToString() == "ok")
                    {
                        if (Convert.ToInt32(lblOkTotalPcsRepeater.Text) > 0)
                        {
                            lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) + 1).ToString();
                            if (lblOkTotalPcsRepeater.Text == "0" || lblOkTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("twentyfive_pcs" /*column Name*/, "breakage");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twentyfive_pcs"].ToString() == "reject")
                    {
                        if (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) > 0)
                        {
                            lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) + 1).ToString();
                            if (lblRejectTotalPcsRepeater.Text == "0" || lblRejectTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblRejectTotalPcsRepeater.Text = (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("twentyfive_pcs" /*column Name*/, "breakage");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twentyfive_pcs"].ToString() == "breakage")
                    {

                    }
                    else
                    {

                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);

                    }
                }
                else
                {
                    _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];
                    if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twentyfive_pcs"].ToString() == "unread")
                    {
                        lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) + 1).ToString();

                        _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("twentyfive_pcs" /*column Name*/, "breakage");
                        _dataTableItemStatusList.AcceptChanges();
                        OverAllTotalPcs();
                        btnUpdateData.Visible = false;
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twentyfive_pcs"].ToString() == "ok")
                    {
                        if (Convert.ToInt32(lblOkTotalPcsRepeater.Text) > 0)
                        {
                            lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) + 1).ToString();
                            if (lblOkTotalPcsRepeater.Text == "0" || lblOkTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("twentyfive_pcs" /*column Name*/, "breakage");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twentyfive_pcs"].ToString() == "reject")
                    {
                        if (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) > 0)
                        {
                            lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) + 1).ToString();
                            if (lblRejectTotalPcsRepeater.Text == "0" || lblRejectTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblRejectTotalPcsRepeater.Text = (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("twentyfive_pcs" /*column Name*/, "breakage");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twentyfive_pcs"].ToString() == "breakage")
                    {

                    }
                    else
                    {

                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);

                    }
                }
            }
            else if (_ddlPcsTwentyFive.SelectedValue == "2")
            {
                if (_totalAllPcs > _totalRecieved)
                {

                    ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);

                }
                else if (_totalAllPcs == _totalRecieved)
                {
                    _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];
                    if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twentyfive_pcs"].ToString() == "unread")
                    {
                        _ddlPcsTwentyFive.SelectedValue = "-1";
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twentyfive_pcs"].ToString() == "ok")
                    {
                        if (Convert.ToInt32(lblOkTotalPcsRepeater.Text) > 0)
                        {
                            lblRejectTotalPcsRepeater.Text = (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) + 1).ToString();
                            if (lblOkTotalPcsRepeater.Text == "0" || lblOkTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("twentyfive_pcs" /*column Name*/, "reject");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twentyfive_pcs"].ToString() == "breakage")
                    {
                        if (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) > 0)
                        {
                            lblRejectTotalPcsRepeater.Text = (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) + 1).ToString();
                            if (lblBreakageTotalPcsRepeater.Text == "0" || lblBreakageTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("twentyfive_pcs" /*column Name*/, "reject");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twentyfive_pcs"].ToString() == "reject")
                    {

                    }
                    else
                    {

                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);

                    }
                }
                else
                {
                    _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];
                    if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twentyfive_pcs"].ToString() == "unread")
                    {
                        lblRejectTotalPcsRepeater.Text = (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) + 1).ToString();

                        _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("twentyfive_pcs" /*column Name*/, "reject");
                        _dataTableItemStatusList.AcceptChanges();
                        OverAllTotalPcs();
                        btnUpdateData.Visible = false;
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twentyfive_pcs"].ToString() == "ok")
                    {
                        if (Convert.ToInt32(lblOkTotalPcsRepeater.Text) > 0)
                        {
                            lblRejectTotalPcsRepeater.Text = (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) + 1).ToString();
                            if (lblOkTotalPcsRepeater.Text == "0" || lblOkTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("twentyfive_pcs" /*column Name*/, "reject");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twentyfive_pcs"].ToString() == "breakage")
                    {
                        if (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) > 0)
                        {
                            lblRejectTotalPcsRepeater.Text = (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) + 1).ToString();
                            if (lblBreakageTotalPcsRepeater.Text == "0" || lblBreakageTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("twentyfive_pcs" /*column Name*/, "reject");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twentyfive_pcs"].ToString() == "reject")
                    {

                    }
                    else
                    {

                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);

                    }
                }
            }
            else
            {

            }
        }

        protected void ddlPcsTwentyFour_SelectedIndexChanged(object sender, EventArgs e)
        {
            DropDownList _ddlPcsTwentyFour = (DropDownList)sender;
            RepeaterItem item = (RepeaterItem)_ddlPcsTwentyFour.NamingContainer;
            Int32 itemCheckboxindex = ((RepeaterItem)_ddlPcsTwentyFour.NamingContainer).ItemIndex;
            //Int32 itemindex = ((RepeaterItem)_checkboxOne.NamingContainer).ItemIndex;
            Label lblOkTotalPcsRepeater = (Label)item.FindControl("lblOkTotalPcsRepeater");
            Label lblBreakageTotalPcsRepeater = (Label)item.FindControl("lblBreakageTotalPcsRepeater");
            Label lblRejectTotalPcsRepeater = (Label)item.FindControl("lblRejectTotalPcsRepeater");

            lblOkTotalPcsRepeater.Text = lblOkTotalPcsRepeater.Text == "" ? "0" : lblOkTotalPcsRepeater.Text;
            lblBreakageTotalPcsRepeater.Text = lblBreakageTotalPcsRepeater.Text == "" ? "0" : lblBreakageTotalPcsRepeater.Text;
            lblRejectTotalPcsRepeater.Text = lblRejectTotalPcsRepeater.Text == "" ? "0" : lblRejectTotalPcsRepeater.Text;

            int _totalAllPcs = Convert.ToInt32(txtTotalOkBreakReject.Text == "" ? "0" : txtTotalOkBreakReject.Text);
            int _totalRecieved = Convert.ToInt32(txtreceived.Text == "" ? "0" : txtreceived.Text);

            // -1 (Unselect), 1 (Ok), 0(Breakage) and 2 for Reejct


            if (_ddlPcsTwentyFour.SelectedValue == "-1")
            {
                _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];
                if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twentyfour_pcs"].ToString() == "ok")
                {
                    _ddlPcsTwentyFour.SelectedValue = "1";
                }
                else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twentyfour_pcs"].ToString() == "breakage")
                {
                    _ddlPcsTwentyFour.SelectedValue = "0";
                }
                else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twentyfour_pcs"].ToString() == "reject")
                {
                    _ddlPcsTwentyFour.SelectedValue = "2";
                }
                else
                {

                }
            }
            else if (_ddlPcsTwentyFour.SelectedValue == "1")
            {
                if (_totalAllPcs > _totalRecieved)
                {

                    ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);

                }
                else if (_totalAllPcs == _totalRecieved)
                {
                    _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];
                    if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twentyfour_pcs"].ToString() == "unread")
                    {
                        _ddlPcsTwentyFour.SelectedValue = "-1";
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twentyfour_pcs"].ToString() == "breakage")
                    {
                        if (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) > 0)
                        {
                            lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) + 1).ToString();
                            if (lblBreakageTotalPcsRepeater.Text == "0" || lblBreakageTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("twentyfour_pcs" /*column Name*/, "ok");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twentyfour_pcs"].ToString() == "reject")
                    {
                        if (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) > 0)
                        {
                            lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) + 1).ToString();
                            if (lblRejectTotalPcsRepeater.Text == "0" || lblRejectTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblRejectTotalPcsRepeater.Text = (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("twentyfour_pcs" /*column Name*/, "ok");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twentyfour_pcs"].ToString() == "ok")
                    {

                    }
                    else
                    {

                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);

                    }
                }
                else
                {
                    _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];
                    if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twentyfour_pcs"].ToString() == "unread")
                    {
                        lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) + 1).ToString();

                        _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("twentyfour_pcs" /*column Name*/, "ok");
                        _dataTableItemStatusList.AcceptChanges();
                        OverAllTotalPcs();
                        btnUpdateData.Visible = false;
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twentyfour_pcs"].ToString() == "breakage")
                    {
                        if (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) > 0)
                        {
                            lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) + 1).ToString();
                            if (lblBreakageTotalPcsRepeater.Text == "0" || lblBreakageTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("twentyfour_pcs" /*column Name*/, "ok");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twentyfour_pcs"].ToString() == "reject")
                    {
                        if (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) > 0)
                        {
                            lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) + 1).ToString();
                            if (lblRejectTotalPcsRepeater.Text == "0" || lblRejectTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblRejectTotalPcsRepeater.Text = (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("twentyfour_pcs" /*column Name*/, "ok");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twentyfour_pcs"].ToString() == "ok")
                    {

                    }
                    else
                    {

                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);

                    }
                }

            }
            else if (_ddlPcsTwentyFour.SelectedValue == "0")
            {
                if (_totalAllPcs > _totalRecieved)
                {

                    ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);

                }
                else if (_totalAllPcs == _totalRecieved)
                {
                    _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];
                    if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twentyfour_pcs"].ToString() == "unread")
                    {
                        _ddlPcsTwentyFour.SelectedValue = "-1";
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twentyfour_pcs"].ToString() == "ok")
                    {
                        if (Convert.ToInt32(lblOkTotalPcsRepeater.Text) > 0)
                        {
                            lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) + 1).ToString();
                            if (lblOkTotalPcsRepeater.Text == "0" || lblOkTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("twentyfour_pcs" /*column Name*/, "breakage");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twentyfour_pcs"].ToString() == "reject")
                    {
                        if (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) > 0)
                        {
                            lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) + 1).ToString();
                            if (lblRejectTotalPcsRepeater.Text == "0" || lblRejectTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblRejectTotalPcsRepeater.Text = (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("twentyfour_pcs" /*column Name*/, "breakage");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twentyfour_pcs"].ToString() == "breakage")
                    {

                    }
                    else
                    {

                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);

                    }
                }
                else
                {
                    _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];
                    if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twentyfour_pcs"].ToString() == "unread")
                    {
                        lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) + 1).ToString();

                        _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("twentyfour_pcs" /*column Name*/, "breakage");
                        _dataTableItemStatusList.AcceptChanges();
                        OverAllTotalPcs();
                        btnUpdateData.Visible = false;
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twentyfour_pcs"].ToString() == "ok")
                    {
                        if (Convert.ToInt32(lblOkTotalPcsRepeater.Text) > 0)
                        {
                            lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) + 1).ToString();
                            if (lblOkTotalPcsRepeater.Text == "0" || lblOkTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("twentyfour_pcs" /*column Name*/, "breakage");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twentyfour_pcs"].ToString() == "reject")
                    {
                        if (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) > 0)
                        {
                            lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) + 1).ToString();
                            if (lblRejectTotalPcsRepeater.Text == "0" || lblRejectTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblRejectTotalPcsRepeater.Text = (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("twentyfour_pcs" /*column Name*/, "breakage");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twentyfour_pcs"].ToString() == "breakage")
                    {

                    }
                    else
                    {

                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);

                    }
                }
            }
            else if (_ddlPcsTwentyFour.SelectedValue == "2")
            {
                if (_totalAllPcs > _totalRecieved)
                {

                    ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);

                }
                else if (_totalAllPcs == _totalRecieved)
                {
                    _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];
                    if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twentyfour_pcs"].ToString() == "unread")
                    {
                        _ddlPcsTwentyFour.SelectedValue = "-1";
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twentyfour_pcs"].ToString() == "ok")
                    {
                        if (Convert.ToInt32(lblOkTotalPcsRepeater.Text) > 0)
                        {
                            lblRejectTotalPcsRepeater.Text = (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) + 1).ToString();
                            if (lblOkTotalPcsRepeater.Text == "0" || lblOkTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("twentyfour_pcs" /*column Name*/, "reject");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twentyfour_pcs"].ToString() == "breakage")
                    {
                        if (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) > 0)
                        {
                            lblRejectTotalPcsRepeater.Text = (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) + 1).ToString();
                            if (lblBreakageTotalPcsRepeater.Text == "0" || lblBreakageTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("twentyfour_pcs" /*column Name*/, "reject");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twentyfour_pcs"].ToString() == "reject")
                    {

                    }
                    else
                    {

                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);

                    }
                }
                else
                {
                    _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];
                    if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twentyfour_pcs"].ToString() == "unread")
                    {
                        lblRejectTotalPcsRepeater.Text = (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) + 1).ToString();

                        _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("twentyfour_pcs" /*column Name*/, "reject");
                        _dataTableItemStatusList.AcceptChanges();
                        OverAllTotalPcs();
                        btnUpdateData.Visible = false;
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twentyfour_pcs"].ToString() == "ok")
                    {
                        if (Convert.ToInt32(lblOkTotalPcsRepeater.Text) > 0)
                        {
                            lblRejectTotalPcsRepeater.Text = (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) + 1).ToString();
                            if (lblOkTotalPcsRepeater.Text == "0" || lblOkTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("twentyfour_pcs" /*column Name*/, "reject");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twentyfour_pcs"].ToString() == "breakage")
                    {
                        if (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) > 0)
                        {
                            lblRejectTotalPcsRepeater.Text = (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) + 1).ToString();
                            if (lblBreakageTotalPcsRepeater.Text == "0" || lblBreakageTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("twentyfour_pcs" /*column Name*/, "reject");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twentyfour_pcs"].ToString() == "reject")
                    {

                    }
                    else
                    {

                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);

                    }
                }
            }
            else
            {

            }
        }

        protected void ddlPcsTwentyThree_SelectedIndexChanged(object sender, EventArgs e)
        {
            DropDownList _ddlPcsTwentyThree = (DropDownList)sender;
            RepeaterItem item = (RepeaterItem)_ddlPcsTwentyThree.NamingContainer;
            Int32 itemCheckboxindex = ((RepeaterItem)_ddlPcsTwentyThree.NamingContainer).ItemIndex;
            //Int32 itemindex = ((RepeaterItem)_checkboxOne.NamingContainer).ItemIndex;
            Label lblOkTotalPcsRepeater = (Label)item.FindControl("lblOkTotalPcsRepeater");
            Label lblBreakageTotalPcsRepeater = (Label)item.FindControl("lblBreakageTotalPcsRepeater");
            Label lblRejectTotalPcsRepeater = (Label)item.FindControl("lblRejectTotalPcsRepeater");

            lblOkTotalPcsRepeater.Text = lblOkTotalPcsRepeater.Text == "" ? "0" : lblOkTotalPcsRepeater.Text;
            lblBreakageTotalPcsRepeater.Text = lblBreakageTotalPcsRepeater.Text == "" ? "0" : lblBreakageTotalPcsRepeater.Text;
            lblRejectTotalPcsRepeater.Text = lblRejectTotalPcsRepeater.Text == "" ? "0" : lblRejectTotalPcsRepeater.Text;

            int _totalAllPcs = Convert.ToInt32(txtTotalOkBreakReject.Text == "" ? "0" : txtTotalOkBreakReject.Text);
            int _totalRecieved = Convert.ToInt32(txtreceived.Text == "" ? "0" : txtreceived.Text);

            // -1 (Unselect), 1 (Ok), 0(Breakage) and 2 for Reejct


            if (_ddlPcsTwentyThree.SelectedValue == "-1")
            {
                _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];
                if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twentythree_pcs"].ToString() == "ok")
                {
                    _ddlPcsTwentyThree.SelectedValue = "1";
                }
                else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twentythree_pcs"].ToString() == "breakage")
                {
                    _ddlPcsTwentyThree.SelectedValue = "0";
                }
                else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twentythree_pcs"].ToString() == "reject")
                {
                    _ddlPcsTwentyThree.SelectedValue = "2";
                }
                else
                {

                }
            }
            else if (_ddlPcsTwentyThree.SelectedValue == "1")
            {
                if (_totalAllPcs > _totalRecieved)
                {

                    ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);

                }
                else if (_totalAllPcs == _totalRecieved)
                {
                    _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];
                    if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twentythree_pcs"].ToString() == "unread")
                    {
                        _ddlPcsTwentyThree.SelectedValue = "-1";
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twentythree_pcs"].ToString() == "breakage")
                    {
                        if (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) > 0)
                        {
                            lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) + 1).ToString();
                            if (lblBreakageTotalPcsRepeater.Text == "0" || lblBreakageTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("twentythree_pcs" /*column Name*/, "ok");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twentythree_pcs"].ToString() == "reject")
                    {
                        if (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) > 0)
                        {
                            lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) + 1).ToString();
                            if (lblRejectTotalPcsRepeater.Text == "0" || lblRejectTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblRejectTotalPcsRepeater.Text = (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("twentythree_pcs" /*column Name*/, "ok");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twentythree_pcs"].ToString() == "ok")
                    {

                    }
                    else
                    {

                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);

                    }
                }
                else
                {
                    _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];
                    if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twentythree_pcs"].ToString() == "unread")
                    {
                        lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) + 1).ToString();

                        _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("twentythree_pcs" /*column Name*/, "ok");
                        _dataTableItemStatusList.AcceptChanges();
                        OverAllTotalPcs();
                        btnUpdateData.Visible = false;
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twentythree_pcs"].ToString() == "breakage")
                    {
                        if (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) > 0)
                        {
                            lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) + 1).ToString();
                            if (lblBreakageTotalPcsRepeater.Text == "0" || lblBreakageTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("twentythree_pcs" /*column Name*/, "ok");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twentythree_pcs"].ToString() == "reject")
                    {
                        if (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) > 0)
                        {
                            lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) + 1).ToString();
                            if (lblRejectTotalPcsRepeater.Text == "0" || lblRejectTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblRejectTotalPcsRepeater.Text = (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("twentythree_pcs" /*column Name*/, "ok");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twentythree_pcs"].ToString() == "ok")
                    {

                    }
                    else
                    {

                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);

                    }
                }

            }
            else if (_ddlPcsTwentyThree.SelectedValue == "0")
            {
                if (_totalAllPcs > _totalRecieved)
                {

                    ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);

                }
                else if (_totalAllPcs == _totalRecieved)
                {
                    _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];
                    if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twentythree_pcs"].ToString() == "unread")
                    {
                        _ddlPcsTwentyThree.SelectedValue = "-1";
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twentythree_pcs"].ToString() == "ok")
                    {
                        if (Convert.ToInt32(lblOkTotalPcsRepeater.Text) > 0)
                        {
                            lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) + 1).ToString();
                            if (lblOkTotalPcsRepeater.Text == "0" || lblOkTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("twentythree_pcs" /*column Name*/, "breakage");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twentythree_pcs"].ToString() == "reject")
                    {
                        if (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) > 0)
                        {
                            lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) + 1).ToString();
                            if (lblRejectTotalPcsRepeater.Text == "0" || lblRejectTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblRejectTotalPcsRepeater.Text = (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("twentythree_pcs" /*column Name*/, "breakage");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twentythree_pcs"].ToString() == "breakage")
                    {

                    }
                    else
                    {

                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);

                    }
                }
                else
                {
                    _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];
                    if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twentythree_pcs"].ToString() == "unread")
                    {
                        lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) + 1).ToString();

                        _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("twentythree_pcs" /*column Name*/, "breakage");
                        _dataTableItemStatusList.AcceptChanges();
                        OverAllTotalPcs();
                        btnUpdateData.Visible = false;
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twentythree_pcs"].ToString() == "ok")
                    {
                        if (Convert.ToInt32(lblOkTotalPcsRepeater.Text) > 0)
                        {
                            lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) + 1).ToString();
                            if (lblOkTotalPcsRepeater.Text == "0" || lblOkTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("twentythree_pcs" /*column Name*/, "breakage");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twentythree_pcs"].ToString() == "reject")
                    {
                        if (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) > 0)
                        {
                            lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) + 1).ToString();
                            if (lblRejectTotalPcsRepeater.Text == "0" || lblRejectTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblRejectTotalPcsRepeater.Text = (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("twentythree_pcs" /*column Name*/, "breakage");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twentythree_pcs"].ToString() == "breakage")
                    {

                    }
                    else
                    {

                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);

                    }
                }
            }
            else if (_ddlPcsTwentyThree.SelectedValue == "2")
            {
                if (_totalAllPcs > _totalRecieved)
                {

                    ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);

                }
                else if (_totalAllPcs == _totalRecieved)
                {
                    _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];
                    if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twentythree_pcs"].ToString() == "unread")
                    {
                        _ddlPcsTwentyThree.SelectedValue = "-1";
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twentythree_pcs"].ToString() == "ok")
                    {
                        if (Convert.ToInt32(lblOkTotalPcsRepeater.Text) > 0)
                        {
                            lblRejectTotalPcsRepeater.Text = (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) + 1).ToString();
                            if (lblOkTotalPcsRepeater.Text == "0" || lblOkTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("twentythree_pcs" /*column Name*/, "reject");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twentythree_pcs"].ToString() == "breakage")
                    {
                        if (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) > 0)
                        {
                            lblRejectTotalPcsRepeater.Text = (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) + 1).ToString();
                            if (lblBreakageTotalPcsRepeater.Text == "0" || lblBreakageTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("twentythree_pcs" /*column Name*/, "reject");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twentythree_pcs"].ToString() == "reject")
                    {

                    }
                    else
                    {

                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);

                    }
                }
                else
                {
                    _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];
                    if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twentythree_pcs"].ToString() == "unread")
                    {
                        lblRejectTotalPcsRepeater.Text = (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) + 1).ToString();

                        _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("twentythree_pcs" /*column Name*/, "reject");
                        _dataTableItemStatusList.AcceptChanges();
                        OverAllTotalPcs();
                        btnUpdateData.Visible = false;
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twentythree_pcs"].ToString() == "ok")
                    {
                        if (Convert.ToInt32(lblOkTotalPcsRepeater.Text) > 0)
                        {
                            lblRejectTotalPcsRepeater.Text = (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) + 1).ToString();
                            if (lblOkTotalPcsRepeater.Text == "0" || lblOkTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("twentythree_pcs" /*column Name*/, "reject");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twentythree_pcs"].ToString() == "breakage")
                    {
                        if (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) > 0)
                        {
                            lblRejectTotalPcsRepeater.Text = (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) + 1).ToString();
                            if (lblBreakageTotalPcsRepeater.Text == "0" || lblBreakageTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("twentythree_pcs" /*column Name*/, "reject");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twentythree_pcs"].ToString() == "reject")
                    {

                    }
                    else
                    {

                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);

                    }
                }
            }
            else
            {

            }
        }

        protected void ddlPcsTwentyTwo_SelectedIndexChanged(object sender, EventArgs e)
        {
            DropDownList _ddlPcsTwentyTwo = (DropDownList)sender;
            RepeaterItem item = (RepeaterItem)_ddlPcsTwentyTwo.NamingContainer;
            Int32 itemCheckboxindex = ((RepeaterItem)_ddlPcsTwentyTwo.NamingContainer).ItemIndex;
            //Int32 itemindex = ((RepeaterItem)_checkboxOne.NamingContainer).ItemIndex;
            Label lblOkTotalPcsRepeater = (Label)item.FindControl("lblOkTotalPcsRepeater");
            Label lblBreakageTotalPcsRepeater = (Label)item.FindControl("lblBreakageTotalPcsRepeater");
            Label lblRejectTotalPcsRepeater = (Label)item.FindControl("lblRejectTotalPcsRepeater");

            lblOkTotalPcsRepeater.Text = lblOkTotalPcsRepeater.Text == "" ? "0" : lblOkTotalPcsRepeater.Text;
            lblBreakageTotalPcsRepeater.Text = lblBreakageTotalPcsRepeater.Text == "" ? "0" : lblBreakageTotalPcsRepeater.Text;
            lblRejectTotalPcsRepeater.Text = lblRejectTotalPcsRepeater.Text == "" ? "0" : lblRejectTotalPcsRepeater.Text;

            int _totalAllPcs = Convert.ToInt32(txtTotalOkBreakReject.Text == "" ? "0" : txtTotalOkBreakReject.Text);
            int _totalRecieved = Convert.ToInt32(txtreceived.Text == "" ? "0" : txtreceived.Text);

            // -1 (Unselect), 1 (Ok), 0(Breakage) and 2 for Reejct


            if (_ddlPcsTwentyTwo.SelectedValue == "-1")
            {
                _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];
                if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twentytwo_pcs"].ToString() == "ok")
                {
                    _ddlPcsTwentyTwo.SelectedValue = "1";
                }
                else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twentytwo_pcs"].ToString() == "breakage")
                {
                    _ddlPcsTwentyTwo.SelectedValue = "0";
                }
                else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twentytwo_pcs"].ToString() == "reject")
                {
                    _ddlPcsTwentyTwo.SelectedValue = "2";
                }
                else
                {

                }
            }
            else if (_ddlPcsTwentyTwo.SelectedValue == "1")
            {
                if (_totalAllPcs > _totalRecieved)
                {

                    ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);

                }
                else if (_totalAllPcs == _totalRecieved)
                {
                    _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];
                    if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twentytwo_pcs"].ToString() == "unread")
                    {
                        _ddlPcsTwentyTwo.SelectedValue = "-1";
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twentytwo_pcs"].ToString() == "breakage")
                    {
                        if (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) > 0)
                        {
                            lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) + 1).ToString();
                            if (lblBreakageTotalPcsRepeater.Text == "0" || lblBreakageTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("twentytwo_pcs" /*column Name*/, "ok");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twentytwo_pcs"].ToString() == "reject")
                    {
                        if (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) > 0)
                        {
                            lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) + 1).ToString();
                            if (lblRejectTotalPcsRepeater.Text == "0" || lblRejectTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblRejectTotalPcsRepeater.Text = (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("twentytwo_pcs" /*column Name*/, "ok");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twentytwo_pcs"].ToString() == "ok")
                    {

                    }
                    else
                    {

                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);

                    }
                }
                else
                {
                    _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];
                    if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twentytwo_pcs"].ToString() == "unread")
                    {
                        lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) + 1).ToString();

                        _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("twentytwo_pcs" /*column Name*/, "ok");
                        _dataTableItemStatusList.AcceptChanges();
                        OverAllTotalPcs();
                        btnUpdateData.Visible = false;
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twentytwo_pcs"].ToString() == "breakage")
                    {
                        if (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) > 0)
                        {
                            lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) + 1).ToString();
                            if (lblBreakageTotalPcsRepeater.Text == "0" || lblBreakageTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("twentytwo_pcs" /*column Name*/, "ok");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twentytwo_pcs"].ToString() == "reject")
                    {
                        if (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) > 0)
                        {
                            lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) + 1).ToString();
                            if (lblRejectTotalPcsRepeater.Text == "0" || lblRejectTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblRejectTotalPcsRepeater.Text = (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("twentytwo_pcs" /*column Name*/, "ok");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twentytwo_pcs"].ToString() == "ok")
                    {

                    }
                    else
                    {

                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);

                    }
                }

            }
            else if (_ddlPcsTwentyTwo.SelectedValue == "0")
            {
                if (_totalAllPcs > _totalRecieved)
                {

                    ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);

                }
                else if (_totalAllPcs == _totalRecieved)
                {
                    _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];
                    if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twentytwo_pcs"].ToString() == "unread")
                    {
                        _ddlPcsTwentyTwo.SelectedValue = "-1";
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twentytwo_pcs"].ToString() == "ok")
                    {
                        if (Convert.ToInt32(lblOkTotalPcsRepeater.Text) > 0)
                        {
                            lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) + 1).ToString();
                            if (lblOkTotalPcsRepeater.Text == "0" || lblOkTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("twentytwo_pcs" /*column Name*/, "breakage");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twentytwo_pcs"].ToString() == "reject")
                    {
                        if (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) > 0)
                        {
                            lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) + 1).ToString();
                            if (lblRejectTotalPcsRepeater.Text == "0" || lblRejectTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblRejectTotalPcsRepeater.Text = (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("twentytwo_pcs" /*column Name*/, "breakage");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twentytwo_pcs"].ToString() == "breakage")
                    {

                    }
                    else
                    {

                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);

                    }
                }
                else
                {
                    _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];
                    if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twentytwo_pcs"].ToString() == "unread")
                    {
                        lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) + 1).ToString();

                        _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("twentytwo_pcs" /*column Name*/, "breakage");
                        _dataTableItemStatusList.AcceptChanges();
                        OverAllTotalPcs();
                        btnUpdateData.Visible = false;
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twentytwo_pcs"].ToString() == "ok")
                    {
                        if (Convert.ToInt32(lblOkTotalPcsRepeater.Text) > 0)
                        {
                            lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) + 1).ToString();
                            if (lblOkTotalPcsRepeater.Text == "0" || lblOkTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("twentytwo_pcs" /*column Name*/, "breakage");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twentytwo_pcs"].ToString() == "reject")
                    {
                        if (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) > 0)
                        {
                            lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) + 1).ToString();
                            if (lblRejectTotalPcsRepeater.Text == "0" || lblRejectTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblRejectTotalPcsRepeater.Text = (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("twentytwo_pcs" /*column Name*/, "breakage");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twentytwo_pcs"].ToString() == "breakage")
                    {

                    }
                    else
                    {

                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);

                    }
                }
            }
            else if (_ddlPcsTwentyTwo.SelectedValue == "2")
            {
                if (_totalAllPcs > _totalRecieved)
                {

                    ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);

                }
                else if (_totalAllPcs == _totalRecieved)
                {
                    _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];
                    if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twentytwo_pcs"].ToString() == "unread")
                    {
                        _ddlPcsTwentyTwo.SelectedValue = "-1";
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twentytwo_pcs"].ToString() == "ok")
                    {
                        if (Convert.ToInt32(lblOkTotalPcsRepeater.Text) > 0)
                        {
                            lblRejectTotalPcsRepeater.Text = (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) + 1).ToString();
                            if (lblOkTotalPcsRepeater.Text == "0" || lblOkTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("twentytwo_pcs" /*column Name*/, "reject");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twentytwo_pcs"].ToString() == "breakage")
                    {
                        if (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) > 0)
                        {
                            lblRejectTotalPcsRepeater.Text = (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) + 1).ToString();
                            if (lblBreakageTotalPcsRepeater.Text == "0" || lblBreakageTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("twentytwo_pcs" /*column Name*/, "reject");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twentytwo_pcs"].ToString() == "reject")
                    {

                    }
                    else
                    {

                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);

                    }
                }
                else
                {
                    _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];
                    if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twentytwo_pcs"].ToString() == "unread")
                    {
                        lblRejectTotalPcsRepeater.Text = (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) + 1).ToString();

                        _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("twentytwo_pcs" /*column Name*/, "reject");
                        _dataTableItemStatusList.AcceptChanges();
                        OverAllTotalPcs();
                        btnUpdateData.Visible = false;
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twentytwo_pcs"].ToString() == "ok")
                    {
                        if (Convert.ToInt32(lblOkTotalPcsRepeater.Text) > 0)
                        {
                            lblRejectTotalPcsRepeater.Text = (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) + 1).ToString();
                            if (lblOkTotalPcsRepeater.Text == "0" || lblOkTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("twentytwo_pcs" /*column Name*/, "reject");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twentytwo_pcs"].ToString() == "breakage")
                    {
                        if (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) > 0)
                        {
                            lblRejectTotalPcsRepeater.Text = (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) + 1).ToString();
                            if (lblBreakageTotalPcsRepeater.Text == "0" || lblBreakageTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("twentytwo_pcs" /*column Name*/, "reject");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twentytwo_pcs"].ToString() == "reject")
                    {

                    }
                    else
                    {

                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);

                    }
                }
            }
            else
            {

            }
        }

        protected void ddlPcsTwentyOne_SelectedIndexChanged(object sender, EventArgs e)
        {
            DropDownList _ddlPcsTwentyOne = (DropDownList)sender;
            RepeaterItem item = (RepeaterItem)_ddlPcsTwentyOne.NamingContainer;
            Int32 itemCheckboxindex = ((RepeaterItem)_ddlPcsTwentyOne.NamingContainer).ItemIndex;
            //Int32 itemindex = ((RepeaterItem)_checkboxOne.NamingContainer).ItemIndex;
            Label lblOkTotalPcsRepeater = (Label)item.FindControl("lblOkTotalPcsRepeater");
            Label lblBreakageTotalPcsRepeater = (Label)item.FindControl("lblBreakageTotalPcsRepeater");
            Label lblRejectTotalPcsRepeater = (Label)item.FindControl("lblRejectTotalPcsRepeater");

            lblOkTotalPcsRepeater.Text = lblOkTotalPcsRepeater.Text == "" ? "0" : lblOkTotalPcsRepeater.Text;
            lblBreakageTotalPcsRepeater.Text = lblBreakageTotalPcsRepeater.Text == "" ? "0" : lblBreakageTotalPcsRepeater.Text;
            lblRejectTotalPcsRepeater.Text = lblRejectTotalPcsRepeater.Text == "" ? "0" : lblRejectTotalPcsRepeater.Text;

            int _totalAllPcs = Convert.ToInt32(txtTotalOkBreakReject.Text == "" ? "0" : txtTotalOkBreakReject.Text);
            int _totalRecieved = Convert.ToInt32(txtreceived.Text == "" ? "0" : txtreceived.Text);

            // -1 (Unselect), 1 (Ok), 0(Breakage) and 2 for Reejct


            if (_ddlPcsTwentyOne.SelectedValue == "-1")
            {
                _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];
                if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twentyone_pcs"].ToString() == "ok")
                {
                    _ddlPcsTwentyOne.SelectedValue = "1";
                }
                else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twentyone_pcs"].ToString() == "breakage")
                {
                    _ddlPcsTwentyOne.SelectedValue = "0";
                }
                else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twentyone_pcs"].ToString() == "reject")
                {
                    _ddlPcsTwentyOne.SelectedValue = "2";
                }
                else
                {

                }
            }
            else if (_ddlPcsTwentyOne.SelectedValue == "1")
            {
                if (_totalAllPcs > _totalRecieved)
                {

                    ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);

                }
                else if (_totalAllPcs == _totalRecieved)
                {
                    _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];
                    if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twentyone_pcs"].ToString() == "unread")
                    {
                        _ddlPcsTwentyOne.SelectedValue = "-1";
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twentyone_pcs"].ToString() == "breakage")
                    {
                        if (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) > 0)
                        {
                            lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) + 1).ToString();
                            if (lblBreakageTotalPcsRepeater.Text == "0" || lblBreakageTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("twentyone_pcs" /*column Name*/, "ok");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twentyone_pcs"].ToString() == "reject")
                    {
                        if (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) > 0)
                        {
                            lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) + 1).ToString();
                            if (lblRejectTotalPcsRepeater.Text == "0" || lblRejectTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblRejectTotalPcsRepeater.Text = (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("twentyone_pcs" /*column Name*/, "ok");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twentyone_pcs"].ToString() == "ok")
                    {

                    }
                    else
                    {

                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);

                    }
                }
                else
                {
                    _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];
                    if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twentyone_pcs"].ToString() == "unread")
                    {
                        lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) + 1).ToString();

                        _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("twentyone_pcs" /*column Name*/, "ok");
                        _dataTableItemStatusList.AcceptChanges();
                        OverAllTotalPcs();
                        btnUpdateData.Visible = false;
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twentyone_pcs"].ToString() == "breakage")
                    {
                        if (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) > 0)
                        {
                            lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) + 1).ToString();
                            if (lblBreakageTotalPcsRepeater.Text == "0" || lblBreakageTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("twentyone_pcs" /*column Name*/, "ok");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twentyone_pcs"].ToString() == "reject")
                    {
                        if (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) > 0)
                        {
                            lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) + 1).ToString();
                            if (lblRejectTotalPcsRepeater.Text == "0" || lblRejectTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblRejectTotalPcsRepeater.Text = (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("twentyone_pcs" /*column Name*/, "ok");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twentyone_pcs"].ToString() == "ok")
                    {

                    }
                    else
                    {

                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);

                    }
                }

            }
            else if (_ddlPcsTwentyOne.SelectedValue == "0")
            {
                if (_totalAllPcs > _totalRecieved)
                {

                    ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);

                }
                else if (_totalAllPcs == _totalRecieved)
                {
                    _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];
                    if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twentyone_pcs"].ToString() == "unread")
                    {
                        _ddlPcsTwentyOne.SelectedValue = "-1";
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twentyone_pcs"].ToString() == "ok")
                    {
                        if (Convert.ToInt32(lblOkTotalPcsRepeater.Text) > 0)
                        {
                            lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) + 1).ToString();
                            if (lblOkTotalPcsRepeater.Text == "0" || lblOkTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("twentyone_pcs" /*column Name*/, "breakage");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twentyone_pcs"].ToString() == "reject")
                    {
                        if (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) > 0)
                        {
                            lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) + 1).ToString();
                            if (lblRejectTotalPcsRepeater.Text == "0" || lblRejectTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblRejectTotalPcsRepeater.Text = (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("twentyone_pcs" /*column Name*/, "breakage");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twentyone_pcs"].ToString() == "breakage")
                    {

                    }
                    else
                    {

                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);

                    }
                }
                else
                {
                    _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];
                    if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twentyone_pcs"].ToString() == "unread")
                    {
                        lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) + 1).ToString();

                        _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("twentyone_pcs" /*column Name*/, "breakage");
                        _dataTableItemStatusList.AcceptChanges();
                        OverAllTotalPcs();
                        btnUpdateData.Visible = false;
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twentyone_pcs"].ToString() == "ok")
                    {
                        if (Convert.ToInt32(lblOkTotalPcsRepeater.Text) > 0)
                        {
                            lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) + 1).ToString();
                            if (lblOkTotalPcsRepeater.Text == "0" || lblOkTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("twentyone_pcs" /*column Name*/, "breakage");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twentyone_pcs"].ToString() == "reject")
                    {
                        if (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) > 0)
                        {
                            lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) + 1).ToString();
                            if (lblRejectTotalPcsRepeater.Text == "0" || lblRejectTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblRejectTotalPcsRepeater.Text = (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("twentyone_pcs" /*column Name*/, "breakage");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twentyone_pcs"].ToString() == "breakage")
                    {

                    }
                    else
                    {

                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);

                    }
                }
            }
            else if (_ddlPcsTwentyOne.SelectedValue == "2")
            {
                if (_totalAllPcs > _totalRecieved)
                {

                    ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);

                }
                else if (_totalAllPcs == _totalRecieved)
                {
                    _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];
                    if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twentyone_pcs"].ToString() == "unread")
                    {
                        _ddlPcsTwentyOne.SelectedValue = "-1";
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twentyone_pcs"].ToString() == "ok")
                    {
                        if (Convert.ToInt32(lblOkTotalPcsRepeater.Text) > 0)
                        {
                            lblRejectTotalPcsRepeater.Text = (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) + 1).ToString();
                            if (lblOkTotalPcsRepeater.Text == "0" || lblOkTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("twentyone_pcs" /*column Name*/, "reject");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twentyone_pcs"].ToString() == "breakage")
                    {
                        if (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) > 0)
                        {
                            lblRejectTotalPcsRepeater.Text = (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) + 1).ToString();
                            if (lblBreakageTotalPcsRepeater.Text == "0" || lblBreakageTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("twentyone_pcs" /*column Name*/, "reject");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twentyone_pcs"].ToString() == "reject")
                    {

                    }
                    else
                    {

                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);

                    }
                }
                else
                {
                    _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];
                    if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twentyone_pcs"].ToString() == "unread")
                    {
                        lblRejectTotalPcsRepeater.Text = (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) + 1).ToString();

                        _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("twentyone_pcs" /*column Name*/, "reject");
                        _dataTableItemStatusList.AcceptChanges();
                        OverAllTotalPcs();
                        btnUpdateData.Visible = false;
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twentyone_pcs"].ToString() == "ok")
                    {
                        if (Convert.ToInt32(lblOkTotalPcsRepeater.Text) > 0)
                        {
                            lblRejectTotalPcsRepeater.Text = (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) + 1).ToString();
                            if (lblOkTotalPcsRepeater.Text == "0" || lblOkTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("twentyone_pcs" /*column Name*/, "reject");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twentyone_pcs"].ToString() == "breakage")
                    {
                        if (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) > 0)
                        {
                            lblRejectTotalPcsRepeater.Text = (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) + 1).ToString();
                            if (lblBreakageTotalPcsRepeater.Text == "0" || lblBreakageTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("twentyone_pcs" /*column Name*/, "reject");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twentyone_pcs"].ToString() == "reject")
                    {

                    }
                    else
                    {

                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);

                    }
                }
            }
            else
            {

            }
        }

        protected void ddlPcsThirty_SelectedIndexChanged(object sender, EventArgs e)
        {
            DropDownList _ddlPcsThirty = (DropDownList)sender;
            RepeaterItem item = (RepeaterItem)_ddlPcsThirty.NamingContainer;
            Int32 itemCheckboxindex = ((RepeaterItem)_ddlPcsThirty.NamingContainer).ItemIndex;
            //Int32 itemindex = ((RepeaterItem)_checkboxOne.NamingContainer).ItemIndex;
            Label lblOkTotalPcsRepeater = (Label)item.FindControl("lblOkTotalPcsRepeater");
            Label lblBreakageTotalPcsRepeater = (Label)item.FindControl("lblBreakageTotalPcsRepeater");
            Label lblRejectTotalPcsRepeater = (Label)item.FindControl("lblRejectTotalPcsRepeater");

            lblOkTotalPcsRepeater.Text = lblOkTotalPcsRepeater.Text == "" ? "0" : lblOkTotalPcsRepeater.Text;
            lblBreakageTotalPcsRepeater.Text = lblBreakageTotalPcsRepeater.Text == "" ? "0" : lblBreakageTotalPcsRepeater.Text;
            lblRejectTotalPcsRepeater.Text = lblRejectTotalPcsRepeater.Text == "" ? "0" : lblRejectTotalPcsRepeater.Text;

            int _totalAllPcs = Convert.ToInt32(txtTotalOkBreakReject.Text == "" ? "0" : txtTotalOkBreakReject.Text);
            int _totalRecieved = Convert.ToInt32(txtreceived.Text == "" ? "0" : txtreceived.Text);

            // -1 (Unselect), 1 (Ok), 0(Breakage) and 2 for Reejct


            if (_ddlPcsThirty.SelectedValue == "-1")
            {
                _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];
                if (_dataTableItemStatusList.Rows[itemCheckboxindex]["thirty_pcs"].ToString() == "ok")
                {
                    _ddlPcsThirty.SelectedValue = "1";
                }
                else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["thirty_pcs"].ToString() == "breakage")
                {
                    _ddlPcsThirty.SelectedValue = "0";
                }
                else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["thirty_pcs"].ToString() == "reject")
                {
                    _ddlPcsThirty.SelectedValue = "2";
                }
                else
                {

                }
            }
            else if (_ddlPcsThirty.SelectedValue == "1")
            {
                if (_totalAllPcs > _totalRecieved)
                {

                    ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);

                }
                else if (_totalAllPcs == _totalRecieved)
                {
                    _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];
                    if (_dataTableItemStatusList.Rows[itemCheckboxindex]["thirty_pcs"].ToString() == "unread")
                    {
                        _ddlPcsThirty.SelectedValue = "-1";
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["thirty_pcs"].ToString() == "breakage")
                    {
                        if (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) > 0)
                        {
                            lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) + 1).ToString();
                            if (lblBreakageTotalPcsRepeater.Text == "0" || lblBreakageTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("thirty_pcs" /*column Name*/, "ok");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["thirty_pcs"].ToString() == "reject")
                    {
                        if (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) > 0)
                        {
                            lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) + 1).ToString();
                            if (lblRejectTotalPcsRepeater.Text == "0" || lblRejectTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblRejectTotalPcsRepeater.Text = (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("thirty_pcs" /*column Name*/, "ok");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["thirty_pcs"].ToString() == "ok")
                    {

                    }
                    else
                    {

                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);

                    }
                }
                else
                {
                    _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];
                    if (_dataTableItemStatusList.Rows[itemCheckboxindex]["thirty_pcs"].ToString() == "unread")
                    {
                        lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) + 1).ToString();

                        _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("thirty_pcs" /*column Name*/, "ok");
                        _dataTableItemStatusList.AcceptChanges();
                        OverAllTotalPcs();
                        btnUpdateData.Visible = false;
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["thirty_pcs"].ToString() == "breakage")
                    {
                        if (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) > 0)
                        {
                            lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) + 1).ToString();
                            if (lblBreakageTotalPcsRepeater.Text == "0" || lblBreakageTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("thirty_pcs" /*column Name*/, "ok");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["thirty_pcs"].ToString() == "reject")
                    {
                        if (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) > 0)
                        {
                            lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) + 1).ToString();
                            if (lblRejectTotalPcsRepeater.Text == "0" || lblRejectTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblRejectTotalPcsRepeater.Text = (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("thirty_pcs" /*column Name*/, "ok");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["thirty_pcs"].ToString() == "ok")
                    {

                    }
                    else
                    {

                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);

                    }
                }

            }
            else if (_ddlPcsThirty.SelectedValue == "0")
            {
                if (_totalAllPcs > _totalRecieved)
                {

                    ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);

                }
                else if (_totalAllPcs == _totalRecieved)
                {
                    _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];
                    if (_dataTableItemStatusList.Rows[itemCheckboxindex]["thirty_pcs"].ToString() == "unread")
                    {
                        _ddlPcsThirty.SelectedValue = "-1";
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["thirty_pcs"].ToString() == "ok")
                    {
                        if (Convert.ToInt32(lblOkTotalPcsRepeater.Text) > 0)
                        {
                            lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) + 1).ToString();
                            if (lblOkTotalPcsRepeater.Text == "0" || lblOkTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("thirty_pcs" /*column Name*/, "breakage");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["thirty_pcs"].ToString() == "reject")
                    {
                        if (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) > 0)
                        {
                            lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) + 1).ToString();
                            if (lblRejectTotalPcsRepeater.Text == "0" || lblRejectTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblRejectTotalPcsRepeater.Text = (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("thirty_pcs" /*column Name*/, "breakage");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["thirty_pcs"].ToString() == "breakage")
                    {

                    }
                    else
                    {

                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);

                    }
                }
                else
                {
                    _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];
                    if (_dataTableItemStatusList.Rows[itemCheckboxindex]["thirty_pcs"].ToString() == "unread")
                    {
                        lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) + 1).ToString();

                        _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("thirty_pcs" /*column Name*/, "breakage");
                        _dataTableItemStatusList.AcceptChanges();
                        OverAllTotalPcs();
                        btnUpdateData.Visible = false;
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["thirty_pcs"].ToString() == "ok")
                    {
                        if (Convert.ToInt32(lblOkTotalPcsRepeater.Text) > 0)
                        {
                            lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) + 1).ToString();
                            if (lblOkTotalPcsRepeater.Text == "0" || lblOkTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("thirty_pcs" /*column Name*/, "breakage");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["thirty_pcs"].ToString() == "reject")
                    {
                        if (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) > 0)
                        {
                            lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) + 1).ToString();
                            if (lblRejectTotalPcsRepeater.Text == "0" || lblRejectTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblRejectTotalPcsRepeater.Text = (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("thirty_pcs" /*column Name*/, "breakage");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["thirty_pcs"].ToString() == "breakage")
                    {

                    }
                    else
                    {

                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);

                    }
                }
            }
            else if (_ddlPcsThirty.SelectedValue == "2")
            {
                if (_totalAllPcs > _totalRecieved)
                {

                    ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);

                }
                else if (_totalAllPcs == _totalRecieved)
                {
                    _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];
                    if (_dataTableItemStatusList.Rows[itemCheckboxindex]["thirty_pcs"].ToString() == "unread")
                    {
                        _ddlPcsThirty.SelectedValue = "-1";
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["thirty_pcs"].ToString() == "ok")
                    {
                        if (Convert.ToInt32(lblOkTotalPcsRepeater.Text) > 0)
                        {
                            lblRejectTotalPcsRepeater.Text = (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) + 1).ToString();
                            if (lblOkTotalPcsRepeater.Text == "0" || lblOkTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("thirty_pcs" /*column Name*/, "reject");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["thirty_pcs"].ToString() == "breakage")
                    {
                        if (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) > 0)
                        {
                            lblRejectTotalPcsRepeater.Text = (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) + 1).ToString();
                            if (lblBreakageTotalPcsRepeater.Text == "0" || lblBreakageTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("thirty_pcs" /*column Name*/, "reject");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["thirty_pcs"].ToString() == "reject")
                    {

                    }
                    else
                    {

                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);

                    }
                }
                else
                {
                    _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];
                    if (_dataTableItemStatusList.Rows[itemCheckboxindex]["thirty_pcs"].ToString() == "unread")
                    {
                        lblRejectTotalPcsRepeater.Text = (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) + 1).ToString();

                        _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("thirty_pcs" /*column Name*/, "reject");
                        _dataTableItemStatusList.AcceptChanges();
                        OverAllTotalPcs();
                        btnUpdateData.Visible = false;
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["thirty_pcs"].ToString() == "ok")
                    {
                        if (Convert.ToInt32(lblOkTotalPcsRepeater.Text) > 0)
                        {
                            lblRejectTotalPcsRepeater.Text = (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) + 1).ToString();
                            if (lblOkTotalPcsRepeater.Text == "0" || lblOkTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("thirty_pcs" /*column Name*/, "reject");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["thirty_pcs"].ToString() == "breakage")
                    {
                        if (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) > 0)
                        {
                            lblRejectTotalPcsRepeater.Text = (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) + 1).ToString();
                            if (lblBreakageTotalPcsRepeater.Text == "0" || lblBreakageTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("thirty_pcs" /*column Name*/, "reject");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["thirty_pcs"].ToString() == "reject")
                    {

                    }
                    else
                    {

                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);

                    }
                }
            }
            else
            {

            }
        }

        protected void ddlPcsTwentyNine_SelectedIndexChanged(object sender, EventArgs e)
        {
            DropDownList _ddlPcsTwentyNine = (DropDownList)sender;
            RepeaterItem item = (RepeaterItem)_ddlPcsTwentyNine.NamingContainer;
            Int32 itemCheckboxindex = ((RepeaterItem)_ddlPcsTwentyNine.NamingContainer).ItemIndex;
            //Int32 itemindex = ((RepeaterItem)_checkboxOne.NamingContainer).ItemIndex;
            Label lblOkTotalPcsRepeater = (Label)item.FindControl("lblOkTotalPcsRepeater");
            Label lblBreakageTotalPcsRepeater = (Label)item.FindControl("lblBreakageTotalPcsRepeater");
            Label lblRejectTotalPcsRepeater = (Label)item.FindControl("lblRejectTotalPcsRepeater");

            lblOkTotalPcsRepeater.Text = lblOkTotalPcsRepeater.Text == "" ? "0" : lblOkTotalPcsRepeater.Text;
            lblBreakageTotalPcsRepeater.Text = lblBreakageTotalPcsRepeater.Text == "" ? "0" : lblBreakageTotalPcsRepeater.Text;
            lblRejectTotalPcsRepeater.Text = lblRejectTotalPcsRepeater.Text == "" ? "0" : lblRejectTotalPcsRepeater.Text;

            int _totalAllPcs = Convert.ToInt32(txtTotalOkBreakReject.Text == "" ? "0" : txtTotalOkBreakReject.Text);
            int _totalRecieved = Convert.ToInt32(txtreceived.Text == "" ? "0" : txtreceived.Text);

            // -1 (Unselect), 1 (Ok), 0(Breakage) and 2 for Reejct


            if (_ddlPcsTwentyNine.SelectedValue == "-1")
            {
                _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];
                if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twentynine_pcs"].ToString() == "ok")
                {
                    _ddlPcsTwentyNine.SelectedValue = "1";
                }
                else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twentynine_pcs"].ToString() == "breakage")
                {
                    _ddlPcsTwentyNine.SelectedValue = "0";
                }
                else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twentynine_pcs"].ToString() == "reject")
                {
                    _ddlPcsTwentyNine.SelectedValue = "2";
                }
                else
                {

                }
            }
            else if (_ddlPcsTwentyNine.SelectedValue == "1")
            {
                if (_totalAllPcs > _totalRecieved)
                {

                    ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);

                }
                else if (_totalAllPcs == _totalRecieved)
                {
                    _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];
                    if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twentynine_pcs"].ToString() == "unread")
                    {
                        _ddlPcsTwentyNine.SelectedValue = "-1";
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twentynine_pcs"].ToString() == "breakage")
                    {
                        if (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) > 0)
                        {
                            lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) + 1).ToString();
                            if (lblBreakageTotalPcsRepeater.Text == "0" || lblBreakageTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("twentynine_pcs" /*column Name*/, "ok");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twentynine_pcs"].ToString() == "reject")
                    {
                        if (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) > 0)
                        {
                            lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) + 1).ToString();
                            if (lblRejectTotalPcsRepeater.Text == "0" || lblRejectTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblRejectTotalPcsRepeater.Text = (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("twentynine_pcs" /*column Name*/, "ok");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twentynine_pcs"].ToString() == "ok")
                    {

                    }
                    else
                    {

                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);

                    }
                }
                else
                {
                    _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];
                    if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twentynine_pcs"].ToString() == "unread")
                    {
                        lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) + 1).ToString();

                        _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("twentynine_pcs" /*column Name*/, "ok");
                        _dataTableItemStatusList.AcceptChanges();
                        OverAllTotalPcs();
                        btnUpdateData.Visible = false;
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twentynine_pcs"].ToString() == "breakage")
                    {
                        if (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) > 0)
                        {
                            lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) + 1).ToString();
                            if (lblBreakageTotalPcsRepeater.Text == "0" || lblBreakageTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("twentynine_pcs" /*column Name*/, "ok");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twentynine_pcs"].ToString() == "reject")
                    {
                        if (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) > 0)
                        {
                            lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) + 1).ToString();
                            if (lblRejectTotalPcsRepeater.Text == "0" || lblRejectTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblRejectTotalPcsRepeater.Text = (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("twentynine_pcs" /*column Name*/, "ok");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twentynine_pcs"].ToString() == "ok")
                    {

                    }
                    else
                    {

                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);

                    }
                }

            }
            else if (_ddlPcsTwentyNine.SelectedValue == "0")
            {
                if (_totalAllPcs > _totalRecieved)
                {

                    ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);

                }
                else if (_totalAllPcs == _totalRecieved)
                {
                    _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];
                    if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twentynine_pcs"].ToString() == "unread")
                    {
                        _ddlPcsTwentyNine.SelectedValue = "-1";
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twentynine_pcs"].ToString() == "ok")
                    {
                        if (Convert.ToInt32(lblOkTotalPcsRepeater.Text) > 0)
                        {
                            lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) + 1).ToString();
                            if (lblOkTotalPcsRepeater.Text == "0" || lblOkTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("twentynine_pcs" /*column Name*/, "breakage");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twentynine_pcs"].ToString() == "reject")
                    {
                        if (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) > 0)
                        {
                            lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) + 1).ToString();
                            if (lblRejectTotalPcsRepeater.Text == "0" || lblRejectTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblRejectTotalPcsRepeater.Text = (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("twentynine_pcs" /*column Name*/, "breakage");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twentynine_pcs"].ToString() == "breakage")
                    {

                    }
                    else
                    {

                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);

                    }
                }
                else
                {
                    _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];
                    if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twentynine_pcs"].ToString() == "unread")
                    {
                        lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) + 1).ToString();

                        _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("twentynine_pcs" /*column Name*/, "breakage");
                        _dataTableItemStatusList.AcceptChanges();
                        OverAllTotalPcs();
                        btnUpdateData.Visible = false;
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twentynine_pcs"].ToString() == "ok")
                    {
                        if (Convert.ToInt32(lblOkTotalPcsRepeater.Text) > 0)
                        {
                            lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) + 1).ToString();
                            if (lblOkTotalPcsRepeater.Text == "0" || lblOkTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("twentynine_pcs" /*column Name*/, "breakage");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twentynine_pcs"].ToString() == "reject")
                    {
                        if (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) > 0)
                        {
                            lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) + 1).ToString();
                            if (lblRejectTotalPcsRepeater.Text == "0" || lblRejectTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblRejectTotalPcsRepeater.Text = (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("twentynine_pcs" /*column Name*/, "breakage");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twentynine_pcs"].ToString() == "breakage")
                    {

                    }
                    else
                    {

                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);

                    }
                }
            }
            else if (_ddlPcsTwentyNine.SelectedValue == "2")
            {
                if (_totalAllPcs > _totalRecieved)
                {

                    ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);

                }
                else if (_totalAllPcs == _totalRecieved)
                {
                    _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];
                    if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twentynine_pcs"].ToString() == "unread")
                    {
                        //lblRejectTotalPcsRepeater.Text = (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) + 1).ToString();

                        //_dataTableItemStatusList.Rows[itemCheckboxindex].SetField("twentynine_pcs" /*column Name*/, "reject");
                        //_dataTableItemStatusList.AcceptChanges();
                        //OverAllTotalPcs();
                        //btnUpdateData.Visible = false;
                        _ddlPcsTwentyNine.SelectedValue = "-1";
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twentynine_pcs"].ToString() == "ok")
                    {
                        if (Convert.ToInt32(lblOkTotalPcsRepeater.Text) > 0)
                        {
                            lblRejectTotalPcsRepeater.Text = (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) + 1).ToString();
                            if (lblOkTotalPcsRepeater.Text == "0" || lblOkTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("twentynine_pcs" /*column Name*/, "reject");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twentynine_pcs"].ToString() == "breakage")
                    {
                        if (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) > 0)
                        {
                            lblRejectTotalPcsRepeater.Text = (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) + 1).ToString();
                            if (lblBreakageTotalPcsRepeater.Text == "0" || lblBreakageTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("twentynine_pcs" /*column Name*/, "reject");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twentynine_pcs"].ToString() == "reject")
                    {

                    }
                    else
                    {

                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);

                    }
                }
                else
                {
                    _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];
                    if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twentynine_pcs"].ToString() == "unread")
                    {
                        lblRejectTotalPcsRepeater.Text = (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) + 1).ToString();

                        _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("twentynine_pcs" /*column Name*/, "reject");
                        _dataTableItemStatusList.AcceptChanges();
                        OverAllTotalPcs();
                        btnUpdateData.Visible = false;
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twentynine_pcs"].ToString() == "ok")
                    {
                        if (Convert.ToInt32(lblOkTotalPcsRepeater.Text) > 0)
                        {
                            lblRejectTotalPcsRepeater.Text = (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) + 1).ToString();
                            if (lblOkTotalPcsRepeater.Text == "0" || lblOkTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("twentynine_pcs" /*column Name*/, "reject");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twentynine_pcs"].ToString() == "breakage")
                    {
                        if (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) > 0)
                        {
                            lblRejectTotalPcsRepeater.Text = (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) + 1).ToString();
                            if (lblBreakageTotalPcsRepeater.Text == "0" || lblBreakageTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("twentynine_pcs" /*column Name*/, "reject");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twentynine_pcs"].ToString() == "reject")
                    {

                    }
                    else
                    {

                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);

                    }
                }
            }
            else
            {

            }
        }

        protected void ddlPcsTwentyEight_SelectedIndexChanged(object sender, EventArgs e)
        {
            DropDownList _ddlPcsTwentyEight = (DropDownList)sender;
            RepeaterItem item = (RepeaterItem)_ddlPcsTwentyEight.NamingContainer;
            Int32 itemCheckboxindex = ((RepeaterItem)_ddlPcsTwentyEight.NamingContainer).ItemIndex;
            //Int32 itemindex = ((RepeaterItem)_checkboxOne.NamingContainer).ItemIndex;
            Label lblOkTotalPcsRepeater = (Label)item.FindControl("lblOkTotalPcsRepeater");
            Label lblBreakageTotalPcsRepeater = (Label)item.FindControl("lblBreakageTotalPcsRepeater");
            Label lblRejectTotalPcsRepeater = (Label)item.FindControl("lblRejectTotalPcsRepeater");

            lblOkTotalPcsRepeater.Text = lblOkTotalPcsRepeater.Text == "" ? "0" : lblOkTotalPcsRepeater.Text;
            lblBreakageTotalPcsRepeater.Text = lblBreakageTotalPcsRepeater.Text == "" ? "0" : lblBreakageTotalPcsRepeater.Text;
            lblRejectTotalPcsRepeater.Text = lblRejectTotalPcsRepeater.Text == "" ? "0" : lblRejectTotalPcsRepeater.Text;

            int _totalAllPcs = Convert.ToInt32(txtTotalOkBreakReject.Text == "" ? "0" : txtTotalOkBreakReject.Text);
            int _totalRecieved = Convert.ToInt32(txtreceived.Text == "" ? "0" : txtreceived.Text);

            // -1 (Unselect), 1 (Ok), 0(Breakage) and 2 for Reejct


            if (_ddlPcsTwentyEight.SelectedValue == "-1")
            {
                _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];
                if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twentyeight_pcs"].ToString() == "ok")
                {
                    _ddlPcsTwentyEight.SelectedValue = "1";
                }
                else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twentyeight_pcs"].ToString() == "breakage")
                {
                    _ddlPcsTwentyEight.SelectedValue = "0";
                }
                else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twentyeight_pcs"].ToString() == "reject")
                {
                    _ddlPcsTwentyEight.SelectedValue = "2";
                }
                else
                {

                }
            }
            else if (_ddlPcsTwentyEight.SelectedValue == "1")
            {
                if (_totalAllPcs > _totalRecieved)
                {

                    ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);

                }
                else if (_totalAllPcs == _totalRecieved)
                {
                    _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];
                    if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twentyeight_pcs"].ToString() == "unread")
                    {
                        _ddlPcsTwentyEight.SelectedValue = "-1";
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twentyeight_pcs"].ToString() == "breakage")
                    {
                        if (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) > 0)
                        {
                            lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) + 1).ToString();
                            if (lblBreakageTotalPcsRepeater.Text == "0" || lblBreakageTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("twentyeight_pcs" /*column Name*/, "ok");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twentyeight_pcs"].ToString() == "reject")
                    {
                        if (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) > 0)
                        {
                            lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) + 1).ToString();
                            if (lblRejectTotalPcsRepeater.Text == "0" || lblRejectTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblRejectTotalPcsRepeater.Text = (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("twentyeight_pcs" /*column Name*/, "ok");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twentyeight_pcs"].ToString() == "ok")
                    {

                    }
                    else
                    {

                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);

                    }
                }
                else
                {
                    _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];
                    if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twentyeight_pcs"].ToString() == "unread")
                    {
                        lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) + 1).ToString();

                        _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("twentyeight_pcs" /*column Name*/, "ok");
                        _dataTableItemStatusList.AcceptChanges();
                        OverAllTotalPcs();
                        btnUpdateData.Visible = false;
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twentyeight_pcs"].ToString() == "breakage")
                    {
                        if (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) > 0)
                        {
                            lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) + 1).ToString();
                            if (lblBreakageTotalPcsRepeater.Text == "0" || lblBreakageTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("twentyeight_pcs" /*column Name*/, "ok");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twentyeight_pcs"].ToString() == "reject")
                    {
                        if (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) > 0)
                        {
                            lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) + 1).ToString();
                            if (lblRejectTotalPcsRepeater.Text == "0" || lblRejectTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblRejectTotalPcsRepeater.Text = (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("twentyeight_pcs" /*column Name*/, "ok");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twentyeight_pcs"].ToString() == "ok")
                    {

                    }
                    else
                    {

                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);

                    }
                }

            }
            else if (_ddlPcsTwentyEight.SelectedValue == "0")
            {
                if (_totalAllPcs > _totalRecieved)
                {

                    ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);

                }
                else if (_totalAllPcs == _totalRecieved)
                {
                    _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];
                    if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twentyeight_pcs"].ToString() == "unread")
                    {
                        _ddlPcsTwentyEight.SelectedValue = "-1";
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twentyeight_pcs"].ToString() == "ok")
                    {
                        if (Convert.ToInt32(lblOkTotalPcsRepeater.Text) > 0)
                        {
                            lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) + 1).ToString();
                            if (lblOkTotalPcsRepeater.Text == "0" || lblOkTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("twentyeight_pcs" /*column Name*/, "breakage");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twentyeight_pcs"].ToString() == "reject")
                    {
                        if (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) > 0)
                        {
                            lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) + 1).ToString();
                            if (lblRejectTotalPcsRepeater.Text == "0" || lblRejectTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblRejectTotalPcsRepeater.Text = (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("twentyeight_pcs" /*column Name*/, "breakage");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twentyeight_pcs"].ToString() == "breakage")
                    {

                    }
                    else
                    {

                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);

                    }
                }
                else
                {
                    _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];
                    if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twentyeight_pcs"].ToString() == "unread")
                    {
                        lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) + 1).ToString();

                        _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("twentyeight_pcs" /*column Name*/, "breakage");
                        _dataTableItemStatusList.AcceptChanges();
                        OverAllTotalPcs();
                        btnUpdateData.Visible = false;
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twentyeight_pcs"].ToString() == "ok")
                    {
                        if (Convert.ToInt32(lblOkTotalPcsRepeater.Text) > 0)
                        {
                            lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) + 1).ToString();
                            if (lblOkTotalPcsRepeater.Text == "0" || lblOkTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("twentyeight_pcs" /*column Name*/, "breakage");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twentyeight_pcs"].ToString() == "reject")
                    {
                        if (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) > 0)
                        {
                            lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) + 1).ToString();
                            if (lblRejectTotalPcsRepeater.Text == "0" || lblRejectTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblRejectTotalPcsRepeater.Text = (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("twentyeight_pcs" /*column Name*/, "breakage");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twentyeight_pcs"].ToString() == "breakage")
                    {

                    }
                    else
                    {

                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);

                    }
                }
            }
            else if (_ddlPcsTwentyEight.SelectedValue == "2")
            {
                if (_totalAllPcs > _totalRecieved)
                {

                    ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);

                }
                else if (_totalAllPcs == _totalRecieved)
                {
                    _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];
                    if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twentyeight_pcs"].ToString() == "unread")
                    {
                        //lblRejectTotalPcsRepeater.Text = (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) + 1).ToString();

                        //_dataTableItemStatusList.Rows[itemCheckboxindex].SetField("twentyeight_pcs" /*column Name*/, "reject");
                        //_dataTableItemStatusList.AcceptChanges();
                        //OverAllTotalPcs();
                        //btnUpdateData.Visible = false;
                        _ddlPcsTwentyEight.SelectedValue = "-1";
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twentyeight_pcs"].ToString() == "ok")
                    {
                        if (Convert.ToInt32(lblOkTotalPcsRepeater.Text) > 0)
                        {
                            lblRejectTotalPcsRepeater.Text = (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) + 1).ToString();
                            if (lblOkTotalPcsRepeater.Text == "0" || lblOkTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("twentyeight_pcs" /*column Name*/, "reject");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twentyeight_pcs"].ToString() == "breakage")
                    {
                        if (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) > 0)
                        {
                            lblRejectTotalPcsRepeater.Text = (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) + 1).ToString();
                            if (lblBreakageTotalPcsRepeater.Text == "0" || lblBreakageTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("twentyeight_pcs" /*column Name*/, "reject");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twentyeight_pcs"].ToString() == "reject")
                    {

                    }
                    else
                    {

                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);

                    }
                }
                else
                {
                    _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];
                    if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twentyeight_pcs"].ToString() == "unread")
                    {
                        lblRejectTotalPcsRepeater.Text = (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) + 1).ToString();

                        _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("twentyeight_pcs" /*column Name*/, "reject");
                        _dataTableItemStatusList.AcceptChanges();
                        OverAllTotalPcs();
                        btnUpdateData.Visible = false;
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twentyeight_pcs"].ToString() == "ok")
                    {
                        if (Convert.ToInt32(lblOkTotalPcsRepeater.Text) > 0)
                        {
                            lblRejectTotalPcsRepeater.Text = (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) + 1).ToString();
                            if (lblOkTotalPcsRepeater.Text == "0" || lblOkTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("twentyeight_pcs" /*column Name*/, "reject");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twentyeight_pcs"].ToString() == "breakage")
                    {
                        if (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) > 0)
                        {
                            lblRejectTotalPcsRepeater.Text = (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) + 1).ToString();
                            if (lblBreakageTotalPcsRepeater.Text == "0" || lblBreakageTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("twentyeight_pcs" /*column Name*/, "reject");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twentyeight_pcs"].ToString() == "reject")
                    {

                    }
                    else
                    {

                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);

                    }
                }
            }
            else
            {

            }
        }

        protected void ddlPcsTwentySeven_SelectedIndexChanged(object sender, EventArgs e)
        {
            DropDownList _ddlPcsTwentySeven = (DropDownList)sender;
            RepeaterItem item = (RepeaterItem)_ddlPcsTwentySeven.NamingContainer;
            Int32 itemCheckboxindex = ((RepeaterItem)_ddlPcsTwentySeven.NamingContainer).ItemIndex;
            //Int32 itemindex = ((RepeaterItem)_checkboxOne.NamingContainer).ItemIndex;
            Label lblOkTotalPcsRepeater = (Label)item.FindControl("lblOkTotalPcsRepeater");
            Label lblBreakageTotalPcsRepeater = (Label)item.FindControl("lblBreakageTotalPcsRepeater");
            Label lblRejectTotalPcsRepeater = (Label)item.FindControl("lblRejectTotalPcsRepeater");

            lblOkTotalPcsRepeater.Text = lblOkTotalPcsRepeater.Text == "" ? "0" : lblOkTotalPcsRepeater.Text;
            lblBreakageTotalPcsRepeater.Text = lblBreakageTotalPcsRepeater.Text == "" ? "0" : lblBreakageTotalPcsRepeater.Text;
            lblRejectTotalPcsRepeater.Text = lblRejectTotalPcsRepeater.Text == "" ? "0" : lblRejectTotalPcsRepeater.Text;

            int _totalAllPcs = Convert.ToInt32(txtTotalOkBreakReject.Text == "" ? "0" : txtTotalOkBreakReject.Text);
            int _totalRecieved = Convert.ToInt32(txtreceived.Text == "" ? "0" : txtreceived.Text);

            // -1 (Unselect), 1 (Ok), 0(Breakage) and 2 for Reejct


            if (_ddlPcsTwentySeven.SelectedValue == "-1")
            {
                _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];
                if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twentyseven_pcs"].ToString() == "ok")
                {
                    _ddlPcsTwentySeven.SelectedValue = "1";
                }
                else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twentyseven_pcs"].ToString() == "breakage")
                {
                    _ddlPcsTwentySeven.SelectedValue = "0";
                }
                else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twentyseven_pcs"].ToString() == "reject")
                {
                    _ddlPcsTwentySeven.SelectedValue = "2";
                }
                else
                {

                }
            }
            else if (_ddlPcsTwentySeven.SelectedValue == "1")
            {
                if (_totalAllPcs > _totalRecieved)
                {

                    ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);

                }
                else if (_totalAllPcs == _totalRecieved)
                {
                    _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];
                    if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twentyseven_pcs"].ToString() == "unread")
                    {
                        //lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) + 1).ToString();

                        //_dataTableItemStatusList.Rows[itemCheckboxindex].SetField("twentyseven_pcs" /*column Name*/, "ok");
                        //_dataTableItemStatusList.AcceptChanges();
                        //OverAllTotalPcs();
                        //btnUpdateData.Visible = false;
                        _ddlPcsTwentySeven.SelectedValue = "-1";
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twentyseven_pcs"].ToString() == "breakage")
                    {
                        if (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) > 0)
                        {
                            lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) + 1).ToString();
                            if (lblBreakageTotalPcsRepeater.Text == "0" || lblBreakageTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("twentyseven_pcs" /*column Name*/, "ok");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twentyseven_pcs"].ToString() == "reject")
                    {
                        if (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) > 0)
                        {
                            lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) + 1).ToString();
                            if (lblRejectTotalPcsRepeater.Text == "0" || lblRejectTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblRejectTotalPcsRepeater.Text = (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("twentyseven_pcs" /*column Name*/, "ok");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twentyseven_pcs"].ToString() == "ok")
                    {

                    }
                    else
                    {

                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);

                    }
                }
                else
                {
                    _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];
                    if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twentyseven_pcs"].ToString() == "unread")
                    {
                        lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) + 1).ToString();

                        _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("twentyseven_pcs" /*column Name*/, "ok");
                        _dataTableItemStatusList.AcceptChanges();
                        OverAllTotalPcs();
                        btnUpdateData.Visible = false;
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twentyseven_pcs"].ToString() == "breakage")
                    {
                        if (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) > 0)
                        {
                            lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) + 1).ToString();
                            if (lblBreakageTotalPcsRepeater.Text == "0" || lblBreakageTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("twentyseven_pcs" /*column Name*/, "ok");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twentyseven_pcs"].ToString() == "reject")
                    {
                        if (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) > 0)
                        {
                            lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) + 1).ToString();
                            if (lblRejectTotalPcsRepeater.Text == "0" || lblRejectTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblRejectTotalPcsRepeater.Text = (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("twentyseven_pcs" /*column Name*/, "ok");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twentyseven_pcs"].ToString() == "ok")
                    {

                    }
                    else
                    {

                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);

                    }
                }

            }
            else if (_ddlPcsTwentySeven.SelectedValue == "0")
            {
                if (_totalAllPcs > _totalRecieved)
                {

                    ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);

                }
                else if (_totalAllPcs == _totalRecieved)
                {
                    _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];
                    if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twentyseven_pcs"].ToString() == "unread")
                    {
                        //lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) + 1).ToString();

                        //_dataTableItemStatusList.Rows[itemCheckboxindex].SetField("twentyseven_pcs" /*column Name*/, "breakage");
                        //_dataTableItemStatusList.AcceptChanges();
                        //OverAllTotalPcs();
                        //btnUpdateData.Visible = false;
                        _ddlPcsTwentySeven.SelectedValue = "-1";
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twentyseven_pcs"].ToString() == "ok")
                    {
                        if (Convert.ToInt32(lblOkTotalPcsRepeater.Text) > 0)
                        {
                            lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) + 1).ToString();
                            if (lblOkTotalPcsRepeater.Text == "0" || lblOkTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("twentyseven_pcs" /*column Name*/, "breakage");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twentyseven_pcs"].ToString() == "reject")
                    {
                        if (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) > 0)
                        {
                            lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) + 1).ToString();
                            if (lblRejectTotalPcsRepeater.Text == "0" || lblRejectTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblRejectTotalPcsRepeater.Text = (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("twentyseven_pcs" /*column Name*/, "breakage");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twentyseven_pcs"].ToString() == "breakage")
                    {

                    }
                    else
                    {

                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);

                    }
                }
                else
                {
                    _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];
                    if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twentyseven_pcs"].ToString() == "unread")
                    {
                        lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) + 1).ToString();

                        _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("twentyseven_pcs" /*column Name*/, "breakage");
                        _dataTableItemStatusList.AcceptChanges();
                        OverAllTotalPcs();
                        btnUpdateData.Visible = false;
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twentyseven_pcs"].ToString() == "ok")
                    {
                        if (Convert.ToInt32(lblOkTotalPcsRepeater.Text) > 0)
                        {
                            lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) + 1).ToString();
                            if (lblOkTotalPcsRepeater.Text == "0" || lblOkTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("twentyseven_pcs" /*column Name*/, "breakage");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twentyseven_pcs"].ToString() == "reject")
                    {
                        if (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) > 0)
                        {
                            lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) + 1).ToString();
                            if (lblRejectTotalPcsRepeater.Text == "0" || lblRejectTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblRejectTotalPcsRepeater.Text = (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("twentyseven_pcs" /*column Name*/, "breakage");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twentyseven_pcs"].ToString() == "breakage")
                    {

                    }
                    else
                    {

                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);

                    }
                }
            }
            else if (_ddlPcsTwentySeven.SelectedValue == "2")
            {
                if (_totalAllPcs > _totalRecieved)
                {

                    ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);

                }
                else if (_totalAllPcs == _totalRecieved)
                {
                    _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];
                    if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twentyseven_pcs"].ToString() == "unread")
                    {
                        //lblRejectTotalPcsRepeater.Text = (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) + 1).ToString();

                        //_dataTableItemStatusList.Rows[itemCheckboxindex].SetField("twentyseven_pcs" /*column Name*/, "reject");
                        //_dataTableItemStatusList.AcceptChanges();
                        //OverAllTotalPcs();
                        //btnUpdateData.Visible = false;
                        _ddlPcsTwentySeven.SelectedValue = "-1";
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twentyseven_pcs"].ToString() == "ok")
                    {
                        if (Convert.ToInt32(lblOkTotalPcsRepeater.Text) > 0)
                        {
                            lblRejectTotalPcsRepeater.Text = (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) + 1).ToString();
                            if (lblOkTotalPcsRepeater.Text == "0" || lblOkTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("twentyseven_pcs" /*column Name*/, "reject");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twentyseven_pcs"].ToString() == "breakage")
                    {
                        if (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) > 0)
                        {
                            lblRejectTotalPcsRepeater.Text = (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) + 1).ToString();
                            if (lblBreakageTotalPcsRepeater.Text == "0" || lblBreakageTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("twentyseven_pcs" /*column Name*/, "reject");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twentyseven_pcs"].ToString() == "reject")
                    {

                    }
                    else
                    {

                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);

                    }
                }
                else
                {
                    _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];
                    if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twentyseven_pcs"].ToString() == "unread")
                    {
                        lblRejectTotalPcsRepeater.Text = (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) + 1).ToString();

                        _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("twentyseven_pcs" /*column Name*/, "reject");
                        _dataTableItemStatusList.AcceptChanges();
                        OverAllTotalPcs();
                        btnUpdateData.Visible = false;
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twentyseven_pcs"].ToString() == "ok")
                    {
                        if (Convert.ToInt32(lblOkTotalPcsRepeater.Text) > 0)
                        {
                            lblRejectTotalPcsRepeater.Text = (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) + 1).ToString();
                            if (lblOkTotalPcsRepeater.Text == "0" || lblOkTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("twentyseven_pcs" /*column Name*/, "reject");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twentyseven_pcs"].ToString() == "breakage")
                    {
                        if (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) > 0)
                        {
                            lblRejectTotalPcsRepeater.Text = (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) + 1).ToString();
                            if (lblBreakageTotalPcsRepeater.Text == "0" || lblBreakageTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("twentyseven_pcs" /*column Name*/, "reject");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twentyseven_pcs"].ToString() == "reject")
                    {

                    }
                    else
                    {

                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);

                    }
                }
            }
            else
            {

            }
        }

        protected void ddlPcsTwentySix_SelectedIndexChanged(object sender, EventArgs e)
        {
            DropDownList _ddlPcsTwentySix = (DropDownList)sender;
            RepeaterItem item = (RepeaterItem)_ddlPcsTwentySix.NamingContainer;
            Int32 itemCheckboxindex = ((RepeaterItem)_ddlPcsTwentySix.NamingContainer).ItemIndex;
            //Int32 itemindex = ((RepeaterItem)_checkboxOne.NamingContainer).ItemIndex;
            Label lblOkTotalPcsRepeater = (Label)item.FindControl("lblOkTotalPcsRepeater");
            Label lblBreakageTotalPcsRepeater = (Label)item.FindControl("lblBreakageTotalPcsRepeater");
            Label lblRejectTotalPcsRepeater = (Label)item.FindControl("lblRejectTotalPcsRepeater");

            lblOkTotalPcsRepeater.Text = lblOkTotalPcsRepeater.Text == "" ? "0" : lblOkTotalPcsRepeater.Text;
            lblBreakageTotalPcsRepeater.Text = lblBreakageTotalPcsRepeater.Text == "" ? "0" : lblBreakageTotalPcsRepeater.Text;
            lblRejectTotalPcsRepeater.Text = lblRejectTotalPcsRepeater.Text == "" ? "0" : lblRejectTotalPcsRepeater.Text;

            int _totalAllPcs = Convert.ToInt32(txtTotalOkBreakReject.Text == "" ? "0" : txtTotalOkBreakReject.Text);
            int _totalRecieved = Convert.ToInt32(txtreceived.Text == "" ? "0" : txtreceived.Text);

            // -1 (Unselect), 1 (Ok), 0(Breakage) and 2 for Reejct


            if (_ddlPcsTwentySix.SelectedValue == "-1")
            {
                _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];
                if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twentysix_pcs"].ToString() == "ok")
                {
                    _ddlPcsTwentySix.SelectedValue = "1";
                }
                else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twentysix_pcs"].ToString() == "breakage")
                {
                    _ddlPcsTwentySix.SelectedValue = "0";
                }
                else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twentysix_pcs"].ToString() == "reject")
                {
                    _ddlPcsTwentySix.SelectedValue = "2";
                }
                else
                {

                }
            }
            else if (_ddlPcsTwentySix.SelectedValue == "1")
            {
                if (_totalAllPcs > _totalRecieved)
                {

                    ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);

                }
                else if (_totalAllPcs == _totalRecieved)
                {
                    _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];
                    if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twentysix_pcs"].ToString() == "unread")
                    {
                        //lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) + 1).ToString();

                        //_dataTableItemStatusList.Rows[itemCheckboxindex].SetField("twentysix_pcs" /*column Name*/, "ok");
                        //_dataTableItemStatusList.AcceptChanges();
                        //OverAllTotalPcs();
                        //btnUpdateData.Visible = false;
                        _ddlPcsTwentySix.SelectedValue = "-1";
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twentysix_pcs"].ToString() == "breakage")
                    {
                        if (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) > 0)
                        {
                            lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) + 1).ToString();
                            if (lblBreakageTotalPcsRepeater.Text == "0" || lblBreakageTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("twentysix_pcs" /*column Name*/, "ok");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twentysix_pcs"].ToString() == "reject")
                    {
                        if (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) > 0)
                        {
                            lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) + 1).ToString();
                            if (lblRejectTotalPcsRepeater.Text == "0" || lblRejectTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblRejectTotalPcsRepeater.Text = (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("twentysix_pcs" /*column Name*/, "ok");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twentysix_pcs"].ToString() == "ok")
                    {

                    }
                    else
                    {

                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);

                    }
                }
                else
                {
                    _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];
                    if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twentysix_pcs"].ToString() == "unread")
                    {
                        lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) + 1).ToString();

                        _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("twentysix_pcs" /*column Name*/, "ok");
                        _dataTableItemStatusList.AcceptChanges();
                        OverAllTotalPcs();
                        btnUpdateData.Visible = false;
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twentysix_pcs"].ToString() == "breakage")
                    {
                        if (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) > 0)
                        {
                            lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) + 1).ToString();
                            if (lblBreakageTotalPcsRepeater.Text == "0" || lblBreakageTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("twentysix_pcs" /*column Name*/, "ok");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twentysix_pcs"].ToString() == "reject")
                    {
                        if (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) > 0)
                        {
                            lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) + 1).ToString();
                            if (lblRejectTotalPcsRepeater.Text == "0" || lblRejectTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblRejectTotalPcsRepeater.Text = (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("twentysix_pcs" /*column Name*/, "ok");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twentysix_pcs"].ToString() == "ok")
                    {

                    }
                    else
                    {

                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);

                    }
                }

            }
            else if (_ddlPcsTwentySix.SelectedValue == "0")
            {
                if (_totalAllPcs > _totalRecieved)
                {

                    ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);

                }
                else if (_totalAllPcs == _totalRecieved)
                {
                    _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];
                    if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twentysix_pcs"].ToString() == "unread")
                    {
                        //lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) + 1).ToString();

                        //_dataTableItemStatusList.Rows[itemCheckboxindex].SetField("twentysix_pcs" /*column Name*/, "breakage");
                        //_dataTableItemStatusList.AcceptChanges();
                        //OverAllTotalPcs();
                        //btnUpdateData.Visible = false;
                        _ddlPcsTwentySix.SelectedValue = "-1";
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twentysix_pcs"].ToString() == "ok")
                    {
                        if (Convert.ToInt32(lblOkTotalPcsRepeater.Text) > 0)
                        {
                            lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) + 1).ToString();
                            if (lblOkTotalPcsRepeater.Text == "0" || lblOkTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("twentysix_pcs" /*column Name*/, "breakage");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twentysix_pcs"].ToString() == "reject")
                    {
                        if (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) > 0)
                        {
                            lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) + 1).ToString();
                            if (lblRejectTotalPcsRepeater.Text == "0" || lblRejectTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblRejectTotalPcsRepeater.Text = (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("twentysix_pcs" /*column Name*/, "breakage");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twentysix_pcs"].ToString() == "breakage")
                    {

                    }
                    else
                    {

                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);

                    }
                }
                else
                {
                    _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];
                    if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twentysix_pcs"].ToString() == "unread")
                    {
                        lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) + 1).ToString();

                        _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("twentysix_pcs" /*column Name*/, "breakage");
                        _dataTableItemStatusList.AcceptChanges();
                        OverAllTotalPcs();
                        btnUpdateData.Visible = false;
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twentysix_pcs"].ToString() == "ok")
                    {
                        if (Convert.ToInt32(lblOkTotalPcsRepeater.Text) > 0)
                        {
                            lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) + 1).ToString();
                            if (lblOkTotalPcsRepeater.Text == "0" || lblOkTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("twentysix_pcs" /*column Name*/, "breakage");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twentysix_pcs"].ToString() == "reject")
                    {
                        if (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) > 0)
                        {
                            lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) + 1).ToString();
                            if (lblRejectTotalPcsRepeater.Text == "0" || lblRejectTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblRejectTotalPcsRepeater.Text = (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("twentysix_pcs" /*column Name*/, "breakage");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twentysix_pcs"].ToString() == "breakage")
                    {

                    }
                    else
                    {

                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);

                    }
                }
            }
            else if (_ddlPcsTwentySix.SelectedValue == "2")
            {
                if (_totalAllPcs > _totalRecieved)
                {

                    ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);

                }
                else if (_totalAllPcs == _totalRecieved)
                {
                    _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];
                    if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twentysix_pcs"].ToString() == "unread")
                    {
                        _ddlPcsTwentySix.SelectedValue = "-1";
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twentysix_pcs"].ToString() == "ok")
                    {
                        if (Convert.ToInt32(lblOkTotalPcsRepeater.Text) > 0)
                        {
                            lblRejectTotalPcsRepeater.Text = (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) + 1).ToString();
                            if (lblOkTotalPcsRepeater.Text == "0" || lblOkTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("twentysix_pcs" /*column Name*/, "reject");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twentysix_pcs"].ToString() == "breakage")
                    {
                        if (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) > 0)
                        {
                            lblRejectTotalPcsRepeater.Text = (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) + 1).ToString();
                            if (lblBreakageTotalPcsRepeater.Text == "0" || lblBreakageTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("twentysix_pcs" /*column Name*/, "reject");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twentysix_pcs"].ToString() == "reject")
                    {

                    }
                    else
                    {

                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);

                    }
                }
                else
                {
                    _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];
                    if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twentysix_pcs"].ToString() == "unread")
                    {
                        lblRejectTotalPcsRepeater.Text = (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) + 1).ToString();

                        _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("twentysix_pcs" /*column Name*/, "reject");
                        _dataTableItemStatusList.AcceptChanges();
                        OverAllTotalPcs();
                        btnUpdateData.Visible = false;
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twentysix_pcs"].ToString() == "ok")
                    {
                        if (Convert.ToInt32(lblOkTotalPcsRepeater.Text) > 0)
                        {
                            lblRejectTotalPcsRepeater.Text = (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) + 1).ToString();
                            if (lblOkTotalPcsRepeater.Text == "0" || lblOkTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblOkTotalPcsRepeater.Text = (Convert.ToInt32(lblOkTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("twentysix_pcs" /*column Name*/, "reject");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twentysix_pcs"].ToString() == "breakage")
                    {
                        if (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) > 0)
                        {
                            lblRejectTotalPcsRepeater.Text = (Convert.ToInt32(lblRejectTotalPcsRepeater.Text) + 1).ToString();
                            if (lblBreakageTotalPcsRepeater.Text == "0" || lblBreakageTotalPcsRepeater.Text == "")
                            {

                            }
                            else
                            {
                                lblBreakageTotalPcsRepeater.Text = (Convert.ToInt32(lblBreakageTotalPcsRepeater.Text) - 1).ToString();
                            }


                            _dataTableItemStatusList.Rows[itemCheckboxindex].SetField("twentysix_pcs" /*column Name*/, "reject");
                            _dataTableItemStatusList.AcceptChanges();
                            OverAllTotalPcs();
                            btnUpdateData.Visible = false;
                        }
                        else
                        { }
                    }
                    else if (_dataTableItemStatusList.Rows[itemCheckboxindex]["twentysix_pcs"].ToString() == "reject")
                    {

                    }
                    else
                    {

                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showItemValidationAlert();", true);

                    }
                }
            }
            else
            {

            }
        }

        #endregion

        protected void rptrItemPcsStatusReport_ItemDataBound(object sender, RepeaterItemEventArgs e)
        {
            try
            {

                if (e.Item.ItemType == ListItemType.Item || e.Item.ItemType == ListItemType.AlternatingItem)
                {
                    //DropDownList ddlBreakageReason = (DropDownList)e.Item.FindControl("ddlBreakageReason");


                    //TextBox txtBreakagePcsNumber = (TextBox)e.Item.FindControl("txtBreakagePcsNumber");

                    Label lblOkTotalPcsRepeater = (Label)e.Item.FindControl("lblOkTotalPcsRepeater");
                    Label lblBreakageTotalPcsRepeater = (Label)e.Item.FindControl("lblBreakageTotalPcsRepeater");
                    Label lblRejectTotalPcsRepeater = (Label)e.Item.FindControl("lblRejectTotalPcsRepeater");
                    Label lblTotalPcsTransferred = (Label)e.Item.FindControl("lblTotalPcsTransferred");
                    LinkButton lnkCheckHour = (LinkButton)e.Item.FindControl("lnkCheckHour");
                    LinkButton btnUpdateItemStatus = (LinkButton)e.Item.FindControl("btnUpdateItemStatus");
                    lnkCheckHour.Visible = true;

                    if (lblTotalPcsTransferred.Text == "" || lblTotalPcsTransferred.Text=="0")
                    {
                        btnUpdateItemStatus.Visible = true;
                    }
                    else
                    {
                        btnUpdateItemStatus.Visible = false;
                    }
                    Label lblItemVerifyStatus = (Label)e.Item.FindControl("lblItemVerifyStatus");

                    Label lblItemCheckSignature = (Label)e.Item.FindControl("lblItemCheckSignature");

                    // DropDownList ddlItemCheckSignature = (DropDownList)e.Item.FindControl("ddlItemCheckSignature");

                    //if (lblItemCheckSignature.Text == "1")
                    //{
                    //    ddlItemCheckSignature.SelectedValue = "1"; 
                    //}
                    //else if(lblItemCheckSignature.Text == "2")
                    //{
                    //    ddlItemCheckSignature.SelectedValue = "2";
                    //}
                    //else
                    //{

                    //}

                    #region Find Checkbox Control

                    DropDownList ddlPcsOne = (DropDownList)e.Item.FindControl("ddlPcsOne");
                    DropDownList ddlPcsTwo = (DropDownList)e.Item.FindControl("ddlPcsTwo");
                    DropDownList ddlPcsThree = (DropDownList)e.Item.FindControl("ddlPcsThree");
                    DropDownList ddlPcsFour = (DropDownList)e.Item.FindControl("ddlPcsFour");
                    DropDownList ddlPcsFive = (DropDownList)e.Item.FindControl("ddlPcsFive");

                    DropDownList ddlPcsSix = (DropDownList)e.Item.FindControl("ddlPcsSix");
                    DropDownList ddlPcsSeven = (DropDownList)e.Item.FindControl("ddlPcsSeven");
                    DropDownList ddlPcsEight = (DropDownList)e.Item.FindControl("ddlPcsEight");
                    DropDownList ddlPcsNine = (DropDownList)e.Item.FindControl("ddlPcsNine");
                    DropDownList ddlPcsTen = (DropDownList)e.Item.FindControl("ddlPcsTen");

                    DropDownList ddlPcsEleven = (DropDownList)e.Item.FindControl("ddlPcsEleven");
                    DropDownList ddlPcsTwelve = (DropDownList)e.Item.FindControl("ddlPcsTwelve");
                    DropDownList ddlPcsThirteen = (DropDownList)e.Item.FindControl("ddlPcsThirteen");
                    DropDownList ddlPcsfourteen = (DropDownList)e.Item.FindControl("ddlPcsfourteen");
                    DropDownList ddlPcsfiften = (DropDownList)e.Item.FindControl("ddlPcsfiften");

                    DropDownList ddlPcsSixteen = (DropDownList)e.Item.FindControl("ddlPcsSixteen");
                    DropDownList ddlPcsSeventeen = (DropDownList)e.Item.FindControl("ddlPcsSeventeen");
                    DropDownList ddlPcsEighteen = (DropDownList)e.Item.FindControl("ddlPcsEighteen");
                    DropDownList ddlPcsNineteen = (DropDownList)e.Item.FindControl("ddlPcsNineteen");
                    DropDownList ddlPcsTwenty = (DropDownList)e.Item.FindControl("ddlPcsTwenty");

                    DropDownList ddlPcsTwentyOne = (DropDownList)e.Item.FindControl("ddlPcsTwentyOne");
                    DropDownList ddlPcsTwentyTwo = (DropDownList)e.Item.FindControl("ddlPcsTwentyTwo");
                    DropDownList ddlPcsTwentyThree = (DropDownList)e.Item.FindControl("ddlPcsTwentyThree");
                    DropDownList ddlPcsTwentyFour = (DropDownList)e.Item.FindControl("ddlPcsTwentyFour");
                    DropDownList ddlPcsTwentyFive = (DropDownList)e.Item.FindControl("ddlPcsTwentyFive");

                    DropDownList ddlPcsTwentySix = (DropDownList)e.Item.FindControl("ddlPcsTwentySix");
                    DropDownList ddlPcsTwentySeven = (DropDownList)e.Item.FindControl("ddlPcsTwentySeven");
                    DropDownList ddlPcsTwentyEight = (DropDownList)e.Item.FindControl("ddlPcsTwentyEight");
                    DropDownList ddlPcsTwentyNine = (DropDownList)e.Item.FindControl("ddlPcsTwentyNine");
                    DropDownList ddlPcsThirty = (DropDownList)e.Item.FindControl("ddlPcsThirty");


                    #endregion
                    string _ItemVerfiyStringValue = lblItemVerifyStatus.Text;
                    string lastTrimItemVerifyStatus = _ItemVerfiyStringValue.TrimEnd(',');
                    string[] arrOfSelectionsItemCheckBox = lastTrimItemVerifyStatus.Split(',');

                    int _OkPcsInHour = lblOkTotalPcsRepeater.Text == "" && lblOkTotalPcsRepeater.Text == null ? 0 : Convert.ToInt32(lblOkTotalPcsRepeater.Text);
                    int _BreakagePcsInHour = lblBreakageTotalPcsRepeater.Text == "" && lblBreakageTotalPcsRepeater.Text == null ? 0 : Convert.ToInt32(lblBreakageTotalPcsRepeater.Text);
                    int _RejectPcsInHour = lblRejectTotalPcsRepeater.Text == "" && lblRejectTotalPcsRepeater.Text == null ? 0 : Convert.ToInt32(lblRejectTotalPcsRepeater.Text);

                    txtTotalAllOkPcs.Text = (Convert.ToInt32(txtTotalAllOkPcs.Text) + _OkPcsInHour).ToString();
                    txtTotalAllBreakagePcs.Text = (Convert.ToInt32(txtTotalAllBreakagePcs.Text) + Convert.ToInt32(_BreakagePcsInHour)).ToString();
                    txtTotalAllRejectPcs.Text = (Convert.ToInt32(txtTotalAllRejectPcs.Text) + Convert.ToInt32(_RejectPcsInHour)).ToString();

                    txtTotalOkBreakReject.Text = (Convert.ToInt32(txtTotalOkBreakReject.Text) + Convert.ToInt32(_OkPcsInHour) + Convert.ToInt32(_BreakagePcsInHour) + Convert.ToInt32(_RejectPcsInHour)).ToString();

                     lblOkTotalPcsRepeater.CssClass = "text-success";
                    lblBreakageTotalPcsRepeater.CssClass = "text-danger";
                    lblRejectTotalPcsRepeater.CssClass = "text-warning";

                    _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];
                    ViewState["ItemStatus"] = _dataTableItemStatusList;

                    DataRow _dataRowItemsList = _dataTableItemStatusList.NewRow();
                    _dataRowItemsList["hour_name"] = lnkCheckHour.Text;



                    #region Assing Value to Check Box checked/Unchecked
                    if (arrOfSelectionsItemCheckBox.Length > 0)
                    {
                        //bool _chkboxone= arrOfSelectionsItemCheckBox[0] == "0" ? chkPcsOne.Checked = false : chkPcsOne.Checked = true;

                        if (arrOfSelectionsItemCheckBox[0] == "1")
                        {
                            ddlPcsOne.SelectedValue="1";
                            _dataRowItemsList["first_pcs"] = "ok";

                        }
                        else if (arrOfSelectionsItemCheckBox[0] == "0")
                        {
                            ddlPcsOne.SelectedValue = "0";
                            _dataRowItemsList["first_pcs"] = "breakage";

                        }
                        else if (arrOfSelectionsItemCheckBox[0] == "2")
                        {
                            ddlPcsOne.SelectedValue = "2";
                            _dataRowItemsList["first_pcs"] = "reject";

                        }
                        else
                        {
                            ddlPcsOne.SelectedValue = "-1";
                            _dataRowItemsList["first_pcs"] = "unread";

                        }


                    }
                    if (arrOfSelectionsItemCheckBox.Length > 1)
                    {

                        if (arrOfSelectionsItemCheckBox[1] == "1")
                        {
                            ddlPcsTwo.SelectedValue = "1";
                            _dataRowItemsList["second_pcs"] = "ok";

                        }
                        else if (arrOfSelectionsItemCheckBox[1] == "0")
                        {
                            ddlPcsTwo.SelectedValue = "0";
                            _dataRowItemsList["second_pcs"] = "breakage";

                        }
                        else if (arrOfSelectionsItemCheckBox[1] == "2")
                        {
                            ddlPcsTwo.SelectedValue = "2";
                            _dataRowItemsList["second_pcs"] = "reject";

                        }
                        else
                        {
                            ddlPcsTwo.SelectedValue = "-1";
                            _dataRowItemsList["second_pcs"] = "unread";

                        }
                    }
                    if (arrOfSelectionsItemCheckBox.Length > 2)
                    {

                        if (arrOfSelectionsItemCheckBox[2] == "1")
                        {
                            ddlPcsThree.SelectedValue = "1";
                            _dataRowItemsList["third_pcs"] = "ok";
                        }
                        else if (arrOfSelectionsItemCheckBox[2] == "0")
                        {
                            ddlPcsThree.SelectedValue = "0";
                            _dataRowItemsList["third_pcs"] = "breakage";
                        }
                        else if (arrOfSelectionsItemCheckBox[2] == "2")
                        {
                            ddlPcsThree.SelectedValue = "2";
                            _dataRowItemsList["third_pcs"] = "reject";
                        }
                        else
                        {
                            ddlPcsThree.SelectedValue = "-1";
                            _dataRowItemsList["third_pcs"] = "unread";
                        }
                    }
                    if (arrOfSelectionsItemCheckBox.Length > 3)
                    {

                        if (arrOfSelectionsItemCheckBox[3] == "1")
                        {
                            ddlPcsFour.SelectedValue = "1";
                            _dataRowItemsList["fourth_pcs"] = "ok";
                        }
                        else if (arrOfSelectionsItemCheckBox[3] == "0")
                        {
                            ddlPcsFour.SelectedValue = "0";
                            _dataRowItemsList["fourth_pcs"] = "breakage";
                        }
                        else if (arrOfSelectionsItemCheckBox[3] == "2")
                        {
                            ddlPcsFour.SelectedValue = "2";
                            _dataRowItemsList["fourth_pcs"] = "reject";
                        }
                        else
                        {
                            ddlPcsFour.SelectedValue = "-1";
                            _dataRowItemsList["fourth_pcs"] = "unread";
                        }
                    }
                    if (arrOfSelectionsItemCheckBox.Length > 4)
                    {

                        if (arrOfSelectionsItemCheckBox[4] == "1")
                        {
                            ddlPcsFive.SelectedValue = "1";
                            _dataRowItemsList["fifth_pcs"] = "ok";
                        }
                        else if (arrOfSelectionsItemCheckBox[4] == "0")
                        {
                            ddlPcsFive.SelectedValue = "0";
                            _dataRowItemsList["fifth_pcs"] = "breakage";
                        }
                        else if (arrOfSelectionsItemCheckBox[4] == "2")
                        {
                            ddlPcsFive.SelectedValue = "2";
                            _dataRowItemsList["fifth_pcs"] = "reject";
                        }
                        else
                        {
                            ddlPcsFive.SelectedValue = "-1";
                            _dataRowItemsList["fifth_pcs"] = "unread";
                        }
                    }
                    if (arrOfSelectionsItemCheckBox.Length > 5)
                    {

                        if (arrOfSelectionsItemCheckBox[5] == "1")
                        {
                            ddlPcsSix.SelectedValue = "1";
                            _dataRowItemsList["sixth_pcs"] = "ok";
                        }
                        else if (arrOfSelectionsItemCheckBox[5] == "0")
                        {
                            ddlPcsSix.SelectedValue = "0";
                            _dataRowItemsList["sixth_pcs"] = "breakage";
                        }
                        else if (arrOfSelectionsItemCheckBox[5] == "2")
                        {
                            ddlPcsSix.SelectedValue = "2";
                            _dataRowItemsList["sixth_pcs"] = "reject";
                        }
                        else
                        {
                            ddlPcsSix.SelectedValue = "-1";
                            _dataRowItemsList["sixth_pcs"] = "unread";
                        }
                    }
                    if (arrOfSelectionsItemCheckBox.Length > 6)
                    {

                        if (arrOfSelectionsItemCheckBox[6] == "1")
                        {
                            ddlPcsSeven.SelectedValue = "1";
                            _dataRowItemsList["seventh_pcs"] = "ok";
                        }
                        else if (arrOfSelectionsItemCheckBox[6] == "0")
                        {
                            ddlPcsSeven.SelectedValue = "0";
                            _dataRowItemsList["seventh_pcs"] = "breakage";
                        }
                        else if (arrOfSelectionsItemCheckBox[6] == "2")
                        {
                            ddlPcsSeven.SelectedValue = "2";
                            _dataRowItemsList["seventh_pcs"] = "reject";
                        }
                        else
                        {
                            ddlPcsSeven.SelectedValue = "-1";
                            _dataRowItemsList["seventh_pcs"] = "unread";
                        }
                    }
                    if (arrOfSelectionsItemCheckBox.Length > 7)
                    {

                        if (arrOfSelectionsItemCheckBox[7] == "1")
                        {
                            ddlPcsEight.SelectedValue = "1";
                            _dataRowItemsList["eight_pcs"] = "ok";
                        }
                        else if (arrOfSelectionsItemCheckBox[7] == "0")
                        {
                            ddlPcsEight.SelectedValue = "0";
                            _dataRowItemsList["eight_pcs"] = "breakage";
                        }
                        else if (arrOfSelectionsItemCheckBox[7] == "2")
                        {
                            ddlPcsEight.SelectedValue = "2";
                            _dataRowItemsList["eight_pcs"] = "reject";
                        }
                        else
                        {
                            ddlPcsEight.SelectedValue = "-1";
                            _dataRowItemsList["eight_pcs"] = "unread";
                        }
                    }
                    if (arrOfSelectionsItemCheckBox.Length > 8)
                    {

                        if (arrOfSelectionsItemCheckBox[8] == "1")
                        {
                            ddlPcsNine.SelectedValue = "1";
                            _dataRowItemsList["ninth_pcs"] = "ok";
                        }
                        else if (arrOfSelectionsItemCheckBox[8] == "0")
                        {
                            ddlPcsNine.SelectedValue = "0";
                            _dataRowItemsList["ninth_pcs"] = "breakage";
                        }
                        else if (arrOfSelectionsItemCheckBox[8] == "2")
                        {
                            ddlPcsNine.SelectedValue = "2";
                            _dataRowItemsList["ninth_pcs"] = "reject";
                        }
                        else
                        {
                            ddlPcsNine.SelectedValue = "-1";
                            _dataRowItemsList["ninth_pcs"] = "unread";
                        }
                    }
                    if (arrOfSelectionsItemCheckBox.Length > 9)
                    {

                        if (arrOfSelectionsItemCheckBox[9] == "1")
                        {
                            ddlPcsTen.SelectedValue = "1";
                            _dataRowItemsList["tenth_pcs"] = "ok";
                        }
                        else if (arrOfSelectionsItemCheckBox[9] == "0")
                        {
                            ddlPcsTen.SelectedValue = "0";
                            _dataRowItemsList["tenth_pcs"] = "breakage";
                        }
                        else if (arrOfSelectionsItemCheckBox[9] == "2")
                        {
                            ddlPcsTen.SelectedValue = "2";
                            _dataRowItemsList["tenth_pcs"] = "reject";
                        }
                        else
                        {
                            ddlPcsTen.SelectedValue = "-1";
                            _dataRowItemsList["tenth_pcs"] = "unread";
                        }
                    }
                    if (arrOfSelectionsItemCheckBox.Length > 10)
                    {

                        if (arrOfSelectionsItemCheckBox[10] == "1")
                        {
                            ddlPcsEleven.SelectedValue = "1";
                            _dataRowItemsList["eleven_pcs"] = "ok";
                        }
                        else if (arrOfSelectionsItemCheckBox[10] == "0")
                        {
                            ddlPcsEleven.SelectedValue = "0";
                            _dataRowItemsList["eleven_pcs"] = "breakage";
                        }
                        else if (arrOfSelectionsItemCheckBox[10] == "2")
                        {
                            ddlPcsEleven.SelectedValue = "2";
                            _dataRowItemsList["eleven_pcs"] = "reject";
                        }
                        else
                        {
                            ddlPcsEleven.SelectedValue = "-1";
                            _dataRowItemsList["eleven_pcs"] = "unread";
                        }
                    }
                    if (arrOfSelectionsItemCheckBox.Length > 11)
                    {

                        if (arrOfSelectionsItemCheckBox[11] == "1")
                        {
                            ddlPcsTwelve.SelectedValue = "1";
                            _dataRowItemsList["twelve_pcs"] = "ok";
                        }
                        else if (arrOfSelectionsItemCheckBox[11] == "0")
                        {
                            ddlPcsTwelve.SelectedValue = "0";
                            _dataRowItemsList["twelve_pcs"] = "breakage";
                        }
                        else if (arrOfSelectionsItemCheckBox[11] == "2")
                        {
                            ddlPcsTwelve.SelectedValue = "2";
                            _dataRowItemsList["twelve_pcs"] = "reject";
                        }
                        else
                        {
                            ddlPcsTwelve.SelectedValue = "-1";
                            _dataRowItemsList["twelve_pcs"] = "unread";
                        }
                    }
                    if (arrOfSelectionsItemCheckBox.Length > 12)
                    {

                        if (arrOfSelectionsItemCheckBox[12] == "1")
                        {
                            ddlPcsThirteen.SelectedValue = "1";
                            _dataRowItemsList["thirteen_pcs"] = "ok";
                        }
                        else if (arrOfSelectionsItemCheckBox[12] == "0")
                        {
                            ddlPcsThirteen.SelectedValue = "0";
                            _dataRowItemsList["thirteen_pcs"] = "breakage";
                        }
                        else if (arrOfSelectionsItemCheckBox[12] == "2")
                        {
                            ddlPcsThirteen.SelectedValue = "2";
                            _dataRowItemsList["thirteen_pcs"] = "reject";
                        }
                        else
                        {
                            ddlPcsThirteen.SelectedValue = "-1";
                            _dataRowItemsList["thirteen_pcs"] = "unread";
                        }
                    }
                    if (arrOfSelectionsItemCheckBox.Length > 13)
                    {

                        if (arrOfSelectionsItemCheckBox[13] == "1")
                        {
                            ddlPcsfourteen.SelectedValue = "1";
                            _dataRowItemsList["fourteen_pcs"] = "ok";
                        }
                        else if (arrOfSelectionsItemCheckBox[13] == "0")
                        {
                            ddlPcsfourteen.SelectedValue = "0";
                            _dataRowItemsList["fourteen_pcs"] = "breakage";
                        }
                        else if (arrOfSelectionsItemCheckBox[13] == "2")
                        {
                            ddlPcsfourteen.SelectedValue = "2";
                            _dataRowItemsList["fourteen_pcs"] = "reject";
                        }
                        else
                        {
                            ddlPcsfourteen.SelectedValue = "-1";
                            _dataRowItemsList["fourteen_pcs"] = "unread";
                        }
                    }
                    if (arrOfSelectionsItemCheckBox.Length > 14)
                    {

                        if (arrOfSelectionsItemCheckBox[14] == "1")
                        {
                            ddlPcsfiften.SelectedValue = "1";
                             _dataRowItemsList["fifteen_pcs"] = "ok";
                        }
                        else if (arrOfSelectionsItemCheckBox[14] == "0")
                        {
                            ddlPcsfiften.SelectedValue = "0";
                            _dataRowItemsList["fifteen_pcs"] = "breakage";
                        }
                        else if (arrOfSelectionsItemCheckBox[14] == "2")
                        {
                            ddlPcsfiften.SelectedValue = "2";
                            _dataRowItemsList["fifteen_pcs"] = "reject";
                        }
                        else
                        {
                            ddlPcsfiften.SelectedValue = "-1";
                            _dataRowItemsList["fifteen_pcs"] = "unread";
                        }
                    }
                    if (arrOfSelectionsItemCheckBox.Length > 15)
                    {

                        if (arrOfSelectionsItemCheckBox[15] == "1")
                        {
                            ddlPcsSixteen.SelectedValue = "1";
                            _dataRowItemsList["sixteen_pcs"] = "ok";
                        }
                        else if (arrOfSelectionsItemCheckBox[15] == "0")
                        {
                            ddlPcsSixteen.SelectedValue = "0";
                            _dataRowItemsList["sixteen_pcs"] = "breakage";
                        }
                        else if (arrOfSelectionsItemCheckBox[15] == "2")
                        {
                            ddlPcsSixteen.SelectedValue = "2";
                            _dataRowItemsList["sixteen_pcs"] = "reject";
                        }
                        else
                        {
                            ddlPcsSixteen.SelectedValue = "-1";
                            _dataRowItemsList["sixteen_pcs"] = "unread";
                        }
                    }
                    if (arrOfSelectionsItemCheckBox.Length > 16)
                    {

                        if (arrOfSelectionsItemCheckBox[16] == "1")
                        {
                            ddlPcsSeventeen.SelectedValue = "1";
                            _dataRowItemsList["seventeen_pcs"] = "ok";
                        }
                        else if (arrOfSelectionsItemCheckBox[16] == "0")
                        {
                            ddlPcsSeventeen.SelectedValue = "0";
                            _dataRowItemsList["seventeen_pcs"] = "breakage";
                        }
                        else if (arrOfSelectionsItemCheckBox[16] == "2")
                        {
                            ddlPcsSeventeen.SelectedValue = "2";
                            _dataRowItemsList["seventeen_pcs"] = "reject";
                        }
                        else
                        {
                            ddlPcsSeventeen.SelectedValue = "-1";
                            _dataRowItemsList["seventeen_pcs"] = "unread";
                        }
                    }
                    if (arrOfSelectionsItemCheckBox.Length > 17)
                    {

                        if (arrOfSelectionsItemCheckBox[17] == "1")
                        {
                            ddlPcsEighteen.SelectedValue = "1";
                            _dataRowItemsList["eighteen_pcs"] = "ok";
                        }
                        else if (arrOfSelectionsItemCheckBox[17] == "0")
                        {
                            ddlPcsEighteen.SelectedValue = "0";
                            _dataRowItemsList["eighteen_pcs"] = "breakage";
                        }
                        else if (arrOfSelectionsItemCheckBox[17] == "2")
                        {
                            ddlPcsEighteen.SelectedValue = "2";
                            _dataRowItemsList["eighteen_pcs"] = "reject";
                        }
                        else
                        {
                            ddlPcsEighteen.SelectedValue = "-1";
                            _dataRowItemsList["eighteen_pcs"] = "unread";
                        }
                    }
                    if (arrOfSelectionsItemCheckBox.Length > 18)
                    {

                        if (arrOfSelectionsItemCheckBox[18] == "1")
                        {
                            ddlPcsNineteen.SelectedValue = "1";
                            _dataRowItemsList["ninteen_pcs"] = "ok";
                        }
                        else if (arrOfSelectionsItemCheckBox[18] == "0")
                        {
                            ddlPcsNineteen.SelectedValue = "0";
                            _dataRowItemsList["ninteen_pcs"] = "breakage";
                        }
                        else if (arrOfSelectionsItemCheckBox[18] == "2")
                        {
                            ddlPcsNineteen.SelectedValue = "2";
                            _dataRowItemsList["ninteen_pcs"] = "reject";
                        }
                        else
                        {
                            ddlPcsNineteen.SelectedValue = "-1";
                            _dataRowItemsList["ninteen_pcs"] = "unread";
                        }
                    }
                    if (arrOfSelectionsItemCheckBox.Length > 19)
                    {

                        if (arrOfSelectionsItemCheckBox[19] == "1")
                        {
                            ddlPcsTwenty.SelectedValue = "1";
                            _dataRowItemsList["twenty_pcs"] = "ok";
                        }
                        else if (arrOfSelectionsItemCheckBox[19] == "0")
                        {
                            ddlPcsTwenty.SelectedValue = "0";
                            _dataRowItemsList["twenty_pcs"] = "breakage";
                        }
                        else if (arrOfSelectionsItemCheckBox[19] == "2")
                        {
                            ddlPcsTwenty.SelectedValue = "2";
                            _dataRowItemsList["twenty_pcs"] = "reject";
                        }
                        else
                        {
                            ddlPcsTwenty.SelectedValue = "-1";
                            _dataRowItemsList["twenty_pcs"] = "unread";
                        }
                    }
                    if (arrOfSelectionsItemCheckBox.Length > 20)
                    {


                        if (arrOfSelectionsItemCheckBox[20] == "1")
                        {
                            ddlPcsTwentyOne.SelectedValue = "1";
                            _dataRowItemsList["twentyone_pcs"] = "ok";
                        }
                        else if (arrOfSelectionsItemCheckBox[20] == "0")
                        {
                            ddlPcsTwentyOne.SelectedValue = "0";
                            _dataRowItemsList["twentyone_pcs"] = "breakage";
                        }
                        else if (arrOfSelectionsItemCheckBox[20] == "2")
                        {
                            ddlPcsTwentyOne.SelectedValue = "2";
                            _dataRowItemsList["twentyone_pcs"] = "reject";
                        }
                        else
                        {
                            ddlPcsTwentyOne.SelectedValue = "-1";
                            _dataRowItemsList["twentyone_pcs"] = "unread";
                        }
                    }
                    if (arrOfSelectionsItemCheckBox.Length > 21)
                    {

                        if (arrOfSelectionsItemCheckBox[21] == "1")
                        {
                            ddlPcsTwentyTwo.SelectedValue = "1";
                            _dataRowItemsList["twentytwo_pcs"] = "ok";
                        }
                        else if (arrOfSelectionsItemCheckBox[21] == "0")
                        {
                            ddlPcsTwentyTwo.SelectedValue = "0";
                            _dataRowItemsList["twentytwo_pcs"] = "breakage";
                        }
                        else if (arrOfSelectionsItemCheckBox[21] == "2")
                        {
                            ddlPcsTwentyTwo.SelectedValue = "2";
                            _dataRowItemsList["twentytwo_pcs"] = "reject";
                        }
                        else
                        {
                            ddlPcsTwentyTwo.SelectedValue = "-1";
                            _dataRowItemsList["twentytwo_pcs"] = "unread";
                        }
                    }
                    if (arrOfSelectionsItemCheckBox.Length > 22)
                    {

                        if (arrOfSelectionsItemCheckBox[22] == "1")
                        {
                            ddlPcsTwentyThree.SelectedValue = "1";
                            _dataRowItemsList["twentythree_pcs"] = "ok";
                        }
                        else if (arrOfSelectionsItemCheckBox[22] == "0")
                        {
                            ddlPcsTwentyThree.SelectedValue = "0";
                            _dataRowItemsList["twentythree_pcs"] = "breakage";
                        }
                        else if (arrOfSelectionsItemCheckBox[22] == "2")
                        {
                            ddlPcsTwentyThree.SelectedValue = "2";
                            _dataRowItemsList["twentythree_pcs"] = "reject";
                        }
                        else
                        {
                            ddlPcsTwentyThree.SelectedValue = "-1";
                            _dataRowItemsList["twentythree_pcs"] = "unread";
                        }
                    }
                    if (arrOfSelectionsItemCheckBox.Length > 23)
                    {

                        if (arrOfSelectionsItemCheckBox[23] == "1")
                        {
                            ddlPcsTwentyFour.SelectedValue = "1";
                            _dataRowItemsList["twentyfour_pcs"] = "ok";
                        }
                        else if (arrOfSelectionsItemCheckBox[23] == "0")
                        {
                            ddlPcsTwentyFour.SelectedValue = "0";
                            _dataRowItemsList["twentyfour_pcs"] = "breakage";
                        }
                        else if (arrOfSelectionsItemCheckBox[23] == "2")
                        {
                            ddlPcsTwentyFour.SelectedValue = "2";
                            _dataRowItemsList["twentyfour_pcs"] = "reject";
                        }
                        else
                        {
                            ddlPcsTwentyFour.SelectedValue = "-1";
                            _dataRowItemsList["twentyfour_pcs"] = "unread";
                        }
                    }
                    if (arrOfSelectionsItemCheckBox.Length > 24)
                    {

                        if (arrOfSelectionsItemCheckBox[24] == "1")
                        {
                            ddlPcsTwentyFive.SelectedValue = "1";
                            _dataRowItemsList["twentyfive_pcs"] = "ok";
                        }
                        else if (arrOfSelectionsItemCheckBox[24] == "0")
                        {
                            ddlPcsTwentyFive.SelectedValue = "0";
                            _dataRowItemsList["twentyfive_pcs"] = "breakage";
                        }
                        else if (arrOfSelectionsItemCheckBox[24] == "2")
                        {
                            ddlPcsTwentyFive.SelectedValue = "2";
                            _dataRowItemsList["twentyfive_pcs"] = "reject";
                        }
                        else
                        {
                            ddlPcsTwentyFive.SelectedValue = "-1";
                            _dataRowItemsList["twentyfive_pcs"] = "unread";
                        }
                    }
                    if (arrOfSelectionsItemCheckBox.Length > 25)
                    {

                        if (arrOfSelectionsItemCheckBox[25] == "1")
                        {
                            ddlPcsTwentySix.SelectedValue = "1";
                            _dataRowItemsList["twentysix_pcs"] = "ok";
                        }
                        else if (arrOfSelectionsItemCheckBox[25] == "0")
                        {
                            ddlPcsTwentySix.SelectedValue = "0";
                            _dataRowItemsList["twentysix_pcs"] = "breakage";
                        }
                        else if (arrOfSelectionsItemCheckBox[25] == "2")
                        {
                            ddlPcsTwentySix.SelectedValue = "2";
                            _dataRowItemsList["twentysix_pcs"] = "reject";
                        }
                        else
                        {
                            ddlPcsTwentySix.SelectedValue = "-1";
                            _dataRowItemsList["twentysix_pcs"] = "unread";
                        }
                    }
                    if (arrOfSelectionsItemCheckBox.Length > 26)
                    {

                        if (arrOfSelectionsItemCheckBox[26] == "1")
                        {
                            ddlPcsTwentySeven.SelectedValue = "1";
                            _dataRowItemsList["twentyseven_pcs"] = "ok";
                        }
                        else if (arrOfSelectionsItemCheckBox[26] == "0")
                        {
                            ddlPcsTwentySeven.SelectedValue = "0";
                            _dataRowItemsList["twentyseven_pcs"] = "breakage";
                        }
                        else if (arrOfSelectionsItemCheckBox[26] == "2")
                        {
                            ddlPcsTwentySeven.SelectedValue = "2";
                            _dataRowItemsList["twentyseven_pcs"] = "reject";
                        }
                        else
                        {
                            ddlPcsTwentySeven.SelectedValue = "-1";
                            _dataRowItemsList["twentyseven_pcs"] = "unread";
                        }
                    }
                    if (arrOfSelectionsItemCheckBox.Length > 27)
                    {
                        if (arrOfSelectionsItemCheckBox[27] == "1")
                        {
                            ddlPcsTwentyEight.SelectedValue = "1";
                            _dataRowItemsList["twentyeight_pcs"] = "ok";
                        }
                        else if (arrOfSelectionsItemCheckBox[27] == "0")
                        {
                            ddlPcsTwentyEight.SelectedValue = "0";
                            _dataRowItemsList["twentyeight_pcs"] = "breakage";
                        }
                        else if (arrOfSelectionsItemCheckBox[27] == "2")
                        {
                            ddlPcsTwentyEight.SelectedValue = "2";
                            _dataRowItemsList["twentyeight_pcs"] = "reject";
                        }
                        else
                        {
                            ddlPcsTwentyEight.SelectedValue = "-1";
                            _dataRowItemsList["twentyeight_pcs"] = "unread";
                        }
                    }
                    if (arrOfSelectionsItemCheckBox.Length > 28)
                    {

                        if (arrOfSelectionsItemCheckBox[28] == "1")
                        {
                            ddlPcsTwentyNine.SelectedValue = "1";
                            _dataRowItemsList["twentynine_pcs"] = "ok";
                        }
                        else if (arrOfSelectionsItemCheckBox[28] == "0")
                        {
                            ddlPcsTwentyNine.SelectedValue = "0";
                            _dataRowItemsList["twentynine_pcs"] = "breakage";
                        }
                        else if (arrOfSelectionsItemCheckBox[28] == "2")
                        {
                            ddlPcsTwentyNine.SelectedValue = "2";
                            _dataRowItemsList["twentynine_pcs"] = "reject";
                        }
                        else
                        {
                            ddlPcsTwentyNine.SelectedValue = "-1";
                            _dataRowItemsList["twentynine_pcs"] = "unread";
                        }
                    }
                    if (arrOfSelectionsItemCheckBox.Length > 29)
                    {

                        if (arrOfSelectionsItemCheckBox[29] == "1")
                        {
                            ddlPcsThirty.SelectedValue = "1";
                            _dataRowItemsList["thirty_pcs"] = "ok";
                        }
                        else if (arrOfSelectionsItemCheckBox[29] == "0")
                        {
                            ddlPcsThirty.SelectedValue = "0";
                            _dataRowItemsList["thirty_pcs"] = "breakage";
                        }
                        else if (arrOfSelectionsItemCheckBox[29] == "2")
                        {
                            ddlPcsThirty.SelectedValue = "2";
                            _dataRowItemsList["thirty_pcs"] = "reject";
                        }
                        else
                        {
                            ddlPcsThirty.SelectedValue = "1-";
                            _dataRowItemsList["thirty_pcs"] = "unread";
                        }
                    }

                    #endregion
                    _dataTableItemStatusList.Rows.Add(_dataRowItemsList);

                    ViewState["ItemStatus"] = _dataTableItemStatusList;

                }
            }
            catch (Exception ex)
            {
                ex.Message.ToString();
            }
        }

        #endregion



        #region Get and Update Item pcs Status 


        #region Find Item Pcs Status Method
        /// <summary>
        /// This Method is Used to Find Controls in Repeater at Particular Row
        /// </summary>
        /// <param name="_indexValue"> This is Index Value or Position of Repeater Selected Row</param>
        private void GetItemStatusCheckUncheck(int _indexValue)
        {

            int _IndexValue = _indexValue;
            string _ItemVerifyStatus = string.Empty;

            #region Find Controls from Repeater in Particular Row like (DropDown, labels)
            Label lblProcessTemperingReportId = rptrItemPcsStatusReport.Items[_IndexValue].FindControl("lblProcessTemperingReportId") as Label;
            DropDownList ddlPcsOne = rptrItemPcsStatusReport.Items[_IndexValue].FindControl("ddlPcsOne") as DropDownList;
            DropDownList ddlPcsTwo = rptrItemPcsStatusReport.Items[_IndexValue].FindControl("ddlPcsTwo") as DropDownList;
            DropDownList ddlPcsThree = rptrItemPcsStatusReport.Items[_IndexValue].FindControl("ddlPcsThree") as DropDownList;
            DropDownList ddlPcsFour = rptrItemPcsStatusReport.Items[_IndexValue].FindControl("ddlPcsFour") as DropDownList;
            DropDownList ddlPcsFive = rptrItemPcsStatusReport.Items[_IndexValue].FindControl("ddlPcsFive") as DropDownList;

            DropDownList ddlPcsSix = rptrItemPcsStatusReport.Items[_IndexValue].FindControl("ddlPcsSix") as DropDownList;
            DropDownList ddlPcsSeven = rptrItemPcsStatusReport.Items[_IndexValue].FindControl("ddlPcsSeven") as DropDownList;
            DropDownList ddlPcsEight = rptrItemPcsStatusReport.Items[_IndexValue].FindControl("ddlPcsEight") as DropDownList;
            DropDownList ddlPcsNine = rptrItemPcsStatusReport.Items[_IndexValue].FindControl("ddlPcsNine") as DropDownList;
            DropDownList ddlPcsTen = rptrItemPcsStatusReport.Items[_IndexValue].FindControl("ddlPcsTen") as DropDownList;

            DropDownList ddlPcsEleven = rptrItemPcsStatusReport.Items[_IndexValue].FindControl("ddlPcsEleven") as DropDownList;
            DropDownList ddlPcsTwelve = rptrItemPcsStatusReport.Items[_IndexValue].FindControl("ddlPcsTwelve") as DropDownList;
            DropDownList ddlPcsThirteen = rptrItemPcsStatusReport.Items[_IndexValue].FindControl("ddlPcsThirteen") as DropDownList;
            DropDownList ddlPcsfourteen = rptrItemPcsStatusReport.Items[_IndexValue].FindControl("ddlPcsfourteen") as DropDownList;
            DropDownList ddlPcsfiften = rptrItemPcsStatusReport.Items[_IndexValue].FindControl("ddlPcsfiften") as DropDownList;

            DropDownList ddlPcsSixteen = rptrItemPcsStatusReport.Items[_IndexValue].FindControl("ddlPcsSixteen") as DropDownList;
            DropDownList ddlPcsSeventeen = rptrItemPcsStatusReport.Items[_IndexValue].FindControl("ddlPcsSeventeen") as DropDownList;
            DropDownList ddlPcsEighteen = rptrItemPcsStatusReport.Items[_IndexValue].FindControl("ddlPcsEighteen") as DropDownList;
            DropDownList ddlPcsNineteen = rptrItemPcsStatusReport.Items[_IndexValue].FindControl("ddlPcsNineteen") as DropDownList;
            DropDownList ddlPcsTwenty = rptrItemPcsStatusReport.Items[_IndexValue].FindControl("ddlPcsTwenty") as DropDownList;

            DropDownList ddlPcsTwentyOne = rptrItemPcsStatusReport.Items[_IndexValue].FindControl("ddlPcsTwentyOne") as DropDownList;
            DropDownList ddlPcsTwentyTwo = rptrItemPcsStatusReport.Items[_IndexValue].FindControl("ddlPcsTwentyTwo") as DropDownList;
            DropDownList ddlPcsTwentyThree = rptrItemPcsStatusReport.Items[_IndexValue].FindControl("ddlPcsTwentyThree") as DropDownList;
            DropDownList ddlPcsTwentyFour = rptrItemPcsStatusReport.Items[_IndexValue].FindControl("ddlPcsTwentyFour") as DropDownList;
            DropDownList ddlPcsTwentyFive = rptrItemPcsStatusReport.Items[_IndexValue].FindControl("ddlPcsTwentyFive") as DropDownList;

            DropDownList ddlPcsTwentySix = rptrItemPcsStatusReport.Items[_IndexValue].FindControl("ddlPcsTwentySix") as DropDownList;
            DropDownList ddlPcsTwentySeven = rptrItemPcsStatusReport.Items[_IndexValue].FindControl("ddlPcsTwentySeven") as DropDownList;
            DropDownList ddlPcsTwentyEight = rptrItemPcsStatusReport.Items[_IndexValue].FindControl("ddlPcsTwentyEight") as DropDownList;
            DropDownList ddlPcsTwentyNine = rptrItemPcsStatusReport.Items[_IndexValue].FindControl("ddlPcsTwentyNine") as DropDownList;
            DropDownList ddlPcsThirty = rptrItemPcsStatusReport.Items[_IndexValue].FindControl("ddlPcsThirty") as DropDownList;
            //  DropDownList ddlItemCheckSignature = rptrItemPcsStatusReport.Items[_IndexValue].FindControl("ddlItemCheckSignature") as DropDownList;

            _itemCheckSignatureId = 0;

            Label lblOkTotalPcsRepeater = rptrItemPcsStatusReport.Items[_IndexValue].FindControl("lblOkTotalPcsRepeater") as Label;
            Label lblBreakageTotalPcsRepeater = rptrItemPcsStatusReport.Items[_IndexValue].FindControl("lblBreakageTotalPcsRepeater") as Label;
            Label lblRejectTotalPcsRepeater = rptrItemPcsStatusReport.Items[_IndexValue].FindControl("lblRejectTotalPcsRepeater") as Label;

            #endregion

            #region Get Values From Checkbox and Labels

            _dataTableItemStatusList = (DataTable)ViewState["ItemStatus"];

            if (ddlPcsOne.SelectedValue == "1")
            {
                _ItemVerifyStatus = "1";
            }
            else if (ddlPcsOne.SelectedValue == "0")
            {
                _ItemVerifyStatus = "0";
            }
            else if (ddlPcsOne.SelectedValue == "2")
            {
                _ItemVerifyStatus = "2";
            }
            else
            {
                    _ItemVerifyStatus = "-1";
               
            }

            if (ddlPcsTwo.SelectedValue == "1")
            {
                _ItemVerifyStatus = _ItemVerifyStatus + "," + "1";
            }
            else if (ddlPcsTwo.SelectedValue == "0")
            {
                _ItemVerifyStatus = _ItemVerifyStatus + "," + "0";
            }
            else if (ddlPcsTwo.SelectedValue == "2")
            {
                _ItemVerifyStatus = _ItemVerifyStatus + "," + "2";
            }
            else
            {    
                _ItemVerifyStatus = _ItemVerifyStatus + "," + "-1";
              
            }

            if (ddlPcsThree.SelectedValue == "1")
            {
                _ItemVerifyStatus = _ItemVerifyStatus + "," + "1";
            }
            else if (ddlPcsThree.SelectedValue == "0")
            {
                _ItemVerifyStatus = _ItemVerifyStatus + "," + "0";
            }
            else if (ddlPcsThree.SelectedValue == "2")
            {
                _ItemVerifyStatus = _ItemVerifyStatus + "," + "2";
            }
            else
            {
                _ItemVerifyStatus = _ItemVerifyStatus + "," + "-1";

            }

            if (ddlPcsFour.SelectedValue == "1")
            {
                _ItemVerifyStatus = _ItemVerifyStatus + "," + "1";
            }
            else if (ddlPcsFour.SelectedValue == "0")
            {
                _ItemVerifyStatus = _ItemVerifyStatus + "," + "0";
            }
            else if (ddlPcsFour.SelectedValue == "2")
            {
                _ItemVerifyStatus = _ItemVerifyStatus + "," + "2";
            }
            else
            {
                _ItemVerifyStatus = _ItemVerifyStatus + "," + "-1";

            }


            if (ddlPcsFive.SelectedValue == "1")
            {
                _ItemVerifyStatus = _ItemVerifyStatus + "," + "1";
            }
            else if (ddlPcsFive.SelectedValue == "0")
            {
                _ItemVerifyStatus = _ItemVerifyStatus + "," + "0";
            }
            else if (ddlPcsFive.SelectedValue == "2")
            {
                _ItemVerifyStatus = _ItemVerifyStatus + "," + "2";
            }
            else
            {
                _ItemVerifyStatus = _ItemVerifyStatus + "," + "-1";

            }

            if (ddlPcsSix.SelectedValue == "1")
            {
                _ItemVerifyStatus = _ItemVerifyStatus + "," + "1";
            }
            else if (ddlPcsSix.SelectedValue == "0")
            {
                _ItemVerifyStatus = _ItemVerifyStatus + "," + "0";
            }
            else if (ddlPcsSix.SelectedValue == "2")
            {
                _ItemVerifyStatus = _ItemVerifyStatus + "," + "2";
            }
            else
            {
                _ItemVerifyStatus = _ItemVerifyStatus + "," + "-1";

            }



            if (ddlPcsSeven.SelectedValue == "1")
            {
                _ItemVerifyStatus = _ItemVerifyStatus + "," + "1";
            }
            else if (ddlPcsSeven.SelectedValue == "0")
            {
                _ItemVerifyStatus = _ItemVerifyStatus + "," + "0";
            }
            else if (ddlPcsSeven.SelectedValue == "2")
            {
                _ItemVerifyStatus = _ItemVerifyStatus + "," + "2";
            }
            else
            {
                _ItemVerifyStatus = _ItemVerifyStatus + "," + "-1";

            }


            if (ddlPcsEight.SelectedValue == "1")
            {
                _ItemVerifyStatus = _ItemVerifyStatus + "," + "1";
            }
            else if (ddlPcsEight.SelectedValue == "0")
            {
                _ItemVerifyStatus = _ItemVerifyStatus + "," + "0";
            }
            else if (ddlPcsEight.SelectedValue == "2")
            {
                _ItemVerifyStatus = _ItemVerifyStatus + "," + "2";
            }
            else
            {
                _ItemVerifyStatus = _ItemVerifyStatus + "," + "-1";

            }


            if (ddlPcsNine.SelectedValue == "1")
            {
                _ItemVerifyStatus = _ItemVerifyStatus + "," + "1";
            }
            else if (ddlPcsNine.SelectedValue == "0")
            {
                _ItemVerifyStatus = _ItemVerifyStatus + "," + "0";
            }
            else if (ddlPcsNine.SelectedValue == "2")
            {
                _ItemVerifyStatus = _ItemVerifyStatus + "," + "2";
            }
            else
            {
                _ItemVerifyStatus = _ItemVerifyStatus + "," + "-1";

            }

            if (ddlPcsTen.SelectedValue == "1")
            {
                _ItemVerifyStatus = _ItemVerifyStatus + "," + "1";
            }
            else if (ddlPcsTen.SelectedValue == "0")
            {
                _ItemVerifyStatus = _ItemVerifyStatus + "," + "0";
            }
            else if (ddlPcsTen.SelectedValue == "2")
            {
                _ItemVerifyStatus = _ItemVerifyStatus + "," + "2";
            }
            else
            {
                _ItemVerifyStatus = _ItemVerifyStatus + "," + "-1";

            }


            if (ddlPcsEleven.SelectedValue == "1")
            {
                _ItemVerifyStatus = _ItemVerifyStatus + "," + "1";
            }
            else if (ddlPcsEleven.SelectedValue == "0")
            {
                _ItemVerifyStatus = _ItemVerifyStatus + "," + "0";
            }
            else if (ddlPcsEleven.SelectedValue == "2")
            {
                _ItemVerifyStatus = _ItemVerifyStatus + "," + "2";
            }
            else
            {
                _ItemVerifyStatus = _ItemVerifyStatus + "," + "-1";

            }

            if (ddlPcsTwelve.SelectedValue == "1")
            {
                _ItemVerifyStatus = _ItemVerifyStatus + "," + "1";
            }
            else if (ddlPcsTwelve.SelectedValue == "0")
            {
                _ItemVerifyStatus = _ItemVerifyStatus + "," + "0";
            }
            else if (ddlPcsTwelve.SelectedValue == "2")
            {
                _ItemVerifyStatus = _ItemVerifyStatus + "," + "2";
            }
            else
            {
                _ItemVerifyStatus = _ItemVerifyStatus + "," + "-1";

            }

            if (ddlPcsThirteen.SelectedValue == "1")
            {
                _ItemVerifyStatus = _ItemVerifyStatus + "," + "1";
            }
            else if (ddlPcsThirteen.SelectedValue == "0")
            {
                _ItemVerifyStatus = _ItemVerifyStatus + "," + "0";
            }
            else if (ddlPcsThirteen.SelectedValue == "2")
            {
                _ItemVerifyStatus = _ItemVerifyStatus + "," + "2";
            }
            else
            {
                _ItemVerifyStatus = _ItemVerifyStatus + "," + "-1";

            }

            if (ddlPcsfourteen.SelectedValue == "1")
            {
                _ItemVerifyStatus = _ItemVerifyStatus + "," + "1";
            }
            else if (ddlPcsfourteen.SelectedValue == "0")
            {
                _ItemVerifyStatus = _ItemVerifyStatus + "," + "0";
            }
            else if (ddlPcsfourteen.SelectedValue == "2")
            {
                _ItemVerifyStatus = _ItemVerifyStatus + "," + "2";
            }
            else
            {
                _ItemVerifyStatus = _ItemVerifyStatus + "," + "-1";

            }

            if (ddlPcsfiften.SelectedValue == "1")
            {
                _ItemVerifyStatus = _ItemVerifyStatus + "," + "1";
            }
            else if (ddlPcsfiften.SelectedValue == "0")
            {
                _ItemVerifyStatus = _ItemVerifyStatus + "," + "0";
            }
            else if (ddlPcsfiften.SelectedValue == "2")
            {
                _ItemVerifyStatus = _ItemVerifyStatus + "," + "2";
            }
            else
            {
                _ItemVerifyStatus = _ItemVerifyStatus + "," + "-1";

            }


            if (ddlPcsSixteen.SelectedValue == "1")
            {
                _ItemVerifyStatus = _ItemVerifyStatus + "," + "1";
            }
            else if (ddlPcsSixteen.SelectedValue == "0")
            {
                _ItemVerifyStatus = _ItemVerifyStatus + "," + "0";
            }
            else if (ddlPcsSixteen.SelectedValue == "2")
            {
                _ItemVerifyStatus = _ItemVerifyStatus + "," + "2";
            }
            else
            {
                _ItemVerifyStatus = _ItemVerifyStatus + "," + "-1";

            }

            if (ddlPcsSeventeen.SelectedValue == "1")
            {
                _ItemVerifyStatus = _ItemVerifyStatus + "," + "1";
            }
            else if (ddlPcsSeventeen.SelectedValue == "0")
            {
                _ItemVerifyStatus = _ItemVerifyStatus + "," + "0";
            }
            else if (ddlPcsSeventeen.SelectedValue == "2")
            {
                _ItemVerifyStatus = _ItemVerifyStatus + "," + "2";
            }
            else
            {
                _ItemVerifyStatus = _ItemVerifyStatus + "," + "-1";

            }

            if (ddlPcsEighteen.SelectedValue == "1")
            {
                _ItemVerifyStatus = _ItemVerifyStatus + "," + "1";
            }
            else if (ddlPcsEighteen.SelectedValue == "0")
            {
                _ItemVerifyStatus = _ItemVerifyStatus + "," + "0";
            }
            else if (ddlPcsEighteen.SelectedValue == "2")
            {
                _ItemVerifyStatus = _ItemVerifyStatus + "," + "2";
            }
            else
            {
                _ItemVerifyStatus = _ItemVerifyStatus + "," + "-1";

            }

            if (ddlPcsNineteen.SelectedValue == "1")
            {
                _ItemVerifyStatus = _ItemVerifyStatus + "," + "1";
            }
            else if (ddlPcsNineteen.SelectedValue == "0")
            {
                _ItemVerifyStatus = _ItemVerifyStatus + "," + "0";
            }
            else if (ddlPcsNineteen.SelectedValue == "2")
            {
                _ItemVerifyStatus = _ItemVerifyStatus + "," + "2";
            }
            else
            {
                _ItemVerifyStatus = _ItemVerifyStatus + "," + "-1";

            }

            if (ddlPcsTwenty.SelectedValue == "1")
            {
                _ItemVerifyStatus = _ItemVerifyStatus + "," + "1";
            }
            else if (ddlPcsTwenty.SelectedValue == "0")
            {
                _ItemVerifyStatus = _ItemVerifyStatus + "," + "0";
            }
            else if (ddlPcsTwenty.SelectedValue == "2")
            {
                _ItemVerifyStatus = _ItemVerifyStatus + "," + "2";
            }
            else
            {
                _ItemVerifyStatus = _ItemVerifyStatus + "," + "-1";

            }

            if (ddlPcsTwentyOne.SelectedValue == "1")
            {
                _ItemVerifyStatus = _ItemVerifyStatus + "," + "1";
            }
            else if (ddlPcsTwentyOne.SelectedValue == "0")
            {
                _ItemVerifyStatus = _ItemVerifyStatus + "," + "0";
            }
            else if (ddlPcsTwentyOne.SelectedValue == "2")
            {
                _ItemVerifyStatus = _ItemVerifyStatus + "," + "2";
            }
            else
            {
                _ItemVerifyStatus = _ItemVerifyStatus + "," + "-1";

            }

            if (ddlPcsTwentyTwo.SelectedValue == "1")
            {
                _ItemVerifyStatus = _ItemVerifyStatus + "," + "1";
            }
            else if (ddlPcsTwentyTwo.SelectedValue == "0")
            {
                _ItemVerifyStatus = _ItemVerifyStatus + "," + "0";
            }
            else if (ddlPcsTwentyTwo.SelectedValue == "2")
            {
                _ItemVerifyStatus = _ItemVerifyStatus + "," + "2";
            }
            else
            {
                _ItemVerifyStatus = _ItemVerifyStatus + "," + "-1";

            }

            if (ddlPcsTwentyThree.SelectedValue == "1")
            {
                _ItemVerifyStatus = _ItemVerifyStatus + "," + "1";
            }
            else if (ddlPcsTwentyThree.SelectedValue == "0")
            {
                _ItemVerifyStatus = _ItemVerifyStatus + "," + "0";
            }
            else if (ddlPcsTwentyThree.SelectedValue == "2")
            {
                _ItemVerifyStatus = _ItemVerifyStatus + "," + "2";
            }
            else
            {
                _ItemVerifyStatus = _ItemVerifyStatus + "," + "-1";

            }

            if (ddlPcsTwentyFour.SelectedValue == "1")
            {
                _ItemVerifyStatus = _ItemVerifyStatus + "," + "1";
            }
            else if (ddlPcsTwentyFour.SelectedValue == "0")
            {
                _ItemVerifyStatus = _ItemVerifyStatus + "," + "0";
            }
            else if (ddlPcsTwentyFour.SelectedValue == "2")
            {
                _ItemVerifyStatus = _ItemVerifyStatus + "," + "2";
            }
            else
            {
                _ItemVerifyStatus = _ItemVerifyStatus + "," + "-1";

            }

            if (ddlPcsTwentyFive.SelectedValue == "1")
            {
                _ItemVerifyStatus = _ItemVerifyStatus + "," + "1";
            }
            else if (ddlPcsTwentyFive.SelectedValue == "0")
            {
                _ItemVerifyStatus = _ItemVerifyStatus + "," + "0";
            }
            else if (ddlPcsTwentyFive.SelectedValue == "2")
            {
                _ItemVerifyStatus = _ItemVerifyStatus + "," + "2";
            }
            else
            {
                _ItemVerifyStatus = _ItemVerifyStatus + "," + "-1";

            }

            if (ddlPcsTwentySix.SelectedValue == "1")
            {
                _ItemVerifyStatus = _ItemVerifyStatus + "," + "1";
            }
            else if (ddlPcsTwentySix.SelectedValue == "0")
            {
                _ItemVerifyStatus = _ItemVerifyStatus + "," + "0";
            }
            else if (ddlPcsTwentySix.SelectedValue == "2")
            {
                _ItemVerifyStatus = _ItemVerifyStatus + "," + "2";
            }
            else
            {
                _ItemVerifyStatus = _ItemVerifyStatus + "," + "-1";

            }

            if (ddlPcsTwentySeven.SelectedValue == "1")
            {
                _ItemVerifyStatus = _ItemVerifyStatus + "," + "1";
            }
            else if (ddlPcsTwentySeven.SelectedValue == "0")
            {
                _ItemVerifyStatus = _ItemVerifyStatus + "," + "0";
            }
            else if (ddlPcsTwentySeven.SelectedValue == "2")
            {
                _ItemVerifyStatus = _ItemVerifyStatus + "," + "2";
            }
            else
            {
                _ItemVerifyStatus = _ItemVerifyStatus + "," + "-1";

            }

            if (ddlPcsTwentyEight.SelectedValue == "1")
            {
                _ItemVerifyStatus = _ItemVerifyStatus + "," + "1";
            }
            else if (ddlPcsTwentyEight.SelectedValue == "0")
            {
                _ItemVerifyStatus = _ItemVerifyStatus + "," + "0";
            }
            else if (ddlPcsTwentyEight.SelectedValue == "2")
            {
                _ItemVerifyStatus = _ItemVerifyStatus + "," + "2";
            }
            else
            {
                _ItemVerifyStatus = _ItemVerifyStatus + "," + "-1";

            }

            if (ddlPcsTwentyNine.SelectedValue == "1")
            {
                _ItemVerifyStatus = _ItemVerifyStatus + "," + "1";
            }
            else if (ddlPcsTwentyNine.SelectedValue == "0")
            {
                _ItemVerifyStatus = _ItemVerifyStatus + "," + "0";
            }
            else if (ddlPcsTwentyNine.SelectedValue == "2")
            {
                _ItemVerifyStatus = _ItemVerifyStatus + "," + "2";
            }
            else
            {
                _ItemVerifyStatus = _ItemVerifyStatus + "," + "-1";

            }

            if (ddlPcsThirty.SelectedValue == "1")
            {
                _ItemVerifyStatus = _ItemVerifyStatus + "," + "1";
            }
            else if (ddlPcsThirty.SelectedValue == "0")
            {
                _ItemVerifyStatus = _ItemVerifyStatus + "," + "0";
            }
            else if (ddlPcsThirty.SelectedValue == "2")
            {
                _ItemVerifyStatus = _ItemVerifyStatus + "," + "2";
            }
            else
            {
                _ItemVerifyStatus = _ItemVerifyStatus + "," + "-1";

            }

            //_ItemVerifyStatus = chkPcsOne.Checked == true ? "1" : "0";
            //_ItemVerifyStatus = _ItemVerifyStatus + "," + (chkPcsTwo.Checked == true ? "1" : "0");
            //_ItemVerifyStatus = _ItemVerifyStatus + "," + (chkPcsThree.Checked == true ? "1" : "0");



            #endregion

            _itemVerifyStatusFinal = _ItemVerifyStatus;
            _totalOkPcsInHour = lblOkTotalPcsRepeater.Text == "" && lblOkTotalPcsRepeater.Text == null ? 0 : Convert.ToInt32(lblOkTotalPcsRepeater.Text);
            _totalBreakagePcsInHour = lblBreakageTotalPcsRepeater.Text == "" && lblBreakageTotalPcsRepeater.Text == null ? 0 : Convert.ToInt32(lblBreakageTotalPcsRepeater.Text);
            _totalRejectPcsInHour = lblRejectTotalPcsRepeater.Text == "" && lblRejectTotalPcsRepeater.Text == null ? 0 : Convert.ToInt32(lblRejectTotalPcsRepeater.Text);

            // calculate();
            //calculateForPageLoad();

        }

        #endregion

        #region  Get Item Status Ok/Breakage Method Object / Model With Value

        /// <summary>
        /// This Method is Used to Update Item Status Ok/Breakage
        /// </summary>
        /// <param name="_productionId"></param>
        private void UpdateItemStatusOkBreakage(string _productionId)
        {
            Int64 id = Convert.ToInt64(_productionId);
            _objProcessTemperingReportBL = new ProcessTemperingReportBL();

            _objProcessTemperingReport = _objProcessTemperingReportBL.GetAllProcessTemperingReportItems().Where(x => x.process_tempering_report_id == id).FirstOrDefault();

            if (_objProcessTemperingReport.process_tempering_report_id > 0)
            {

                _objProcessTemperingReport.ok_total_pcs_in_hours = _totalOkPcsInHour;
                _objProcessTemperingReport.breakage_total_pcs = _totalBreakagePcsInHour;
                _objProcessTemperingReport.reject_total_pcs = _totalRejectPcsInHour;
                _objProcessTemperingReport.item_verify_status = _itemVerifyStatusFinal;
                _objProcessTemperingReport.signature = _itemCheckSignatureId;

                _objProcessTemperingReport = _objProcessTemperingReportBL.UpdateProcessTemperingReport(_objProcessTemperingReport);
                if (_objProcessTemperingReport != null)
                {
                    //string description = "Article  <b>" + _objArticle.title + "</b> status has been updated By " + loginParams.UserName;
                    //Logs("Article status Updated", "fa fa-user", "timeline-icon themed-background-fire themed-border-fire", "push-bit text-danger", description);
                    ScriptManager.RegisterStartupScript(this, this.GetType(), "alertmessage", "showSuccess();", true);
                    //  BindProductionRptr();
                    btnUpdateData.Visible = true;
                    int _temperingId = _objProcessTemperingReport.process_tempering_id;
                    txtTotalOkBreakReject.Text = txtTotalAllOkPcs.Text = txtTotalAllBreakagePcs.Text = txtTotalAllRejectPcs.Text = "0";
                    _itemVerifyStatusFinal = string.Empty;
                    _dataTableItemStatusList = null;
                    ViewState["ItemStatus"] = null;
                    createtableForHoldItemStatusCheckedUnchecked();
                    BindrptrItemPcsStatusReport(_temperingId.ToString());
                    calculateForPageLoad();
                    //PopulateData(_temperingId.ToString());



                }



            }
            else
            {

            }


        }

        #endregion

        #region Update Button Item Pcs Status
        protected void btnUpdateItemStatus_Click(object sender, EventArgs e)
        {
            LinkButton _lnkBtnUpdateItemStatus = (LinkButton)sender;
            RepeaterItem item = (RepeaterItem)_lnkBtnUpdateItemStatus.NamingContainer;
            //Int32 itemindex = ((RepeaterItem)_checkboxOne.NamingContainer).ItemIndex;
            Int32 _rptrIndexValue = ((RepeaterItem)_lnkBtnUpdateItemStatus.NamingContainer).ItemIndex;
            GetItemStatusCheckUncheck(_rptrIndexValue);


        }

        #endregion
        private void OverAllTotalPcs()
        {

            int totalOkPcs = 0;
            int totalBreakagePcs = 0;
            int totalRejectPcs = 0;
            foreach (RepeaterItem itemEquipment in rptrItemPcsStatusReport.Items)
            {
                Label lblOkTotalPcsRepeater = (Label)itemEquipment.FindControl("lblOkTotalPcsRepeater");

                Label lblBreakageTotalPcsRepeater = (Label)itemEquipment.FindControl("lblBreakageTotalPcsRepeater");
                Label lblRejectTotalPcsRepeater = (Label)itemEquipment.FindControl("lblRejectTotalPcsRepeater");

                totalOkPcs = totalOkPcs + Convert.ToInt32(lblOkTotalPcsRepeater.Text);
                totalBreakagePcs = totalBreakagePcs + Convert.ToInt32(lblBreakageTotalPcsRepeater.Text);
                totalRejectPcs = totalRejectPcs + Convert.ToInt32(lblRejectTotalPcsRepeater.Text);
            }
            txtTotalAllOkPcs.Text = totalOkPcs.ToString();
            txtTotalAllBreakagePcs.Text = totalBreakagePcs.ToString();
            txtTotalAllRejectPcs.Text = totalRejectPcs.ToString();

            txtTotalOkBreakReject.Text = (Convert.ToInt32(txtTotalAllOkPcs.Text) + Convert.ToInt32(txtTotalAllBreakagePcs.Text) + Convert.ToInt32(txtTotalAllRejectPcs.Text)).ToString();
            
            
            txtItemRawBalance.Text = (Convert.ToInt32(txtreceived.Text)- Convert.ToInt32(txtTotalOkBreakReject.Text)).ToString();

            calculatePerPcsAverageCost();
        }

        #endregion


        #region production trail logs

        /// <summary>
        /// This Method is Used to Save Activity of Any Action Perform By User/Admin
        /// </summary>
        /// <param name="production_id"></param>
        /// <param name="item_master_id"></param>
        /// <param name="process_name"></param>
        /// <param name="heading"></param>
        /// <param name="heading_class"></param>
        /// <param name="activity"></param>
        /// <param name="icon"></param>
        /// <param name="iconclass"></param>
        private void ProductionTrailLogs(string production_id, string item_master_id, string process_name, string heading, string heading_class, string activity, string icon, string iconclass)
        {
            try
            {
                _objProductionTrailBL = new ProductionTrailBL();
                _objProductionTrail.guid = System.Guid.NewGuid();
                _objProductionTrail.production_id = Convert.ToInt32(production_id);
                _objProductionTrail.item_master_id = Convert.ToInt32(item_master_id);
                _objProductionTrail.process_name = process_name;
                _objProductionTrail.user_name = Session[Constants.UserName].ToString();
                _objProductionTrail.heading = heading;
                _objProductionTrail.heading_class = heading_class;
                _objProductionTrail.activity = activity;
                _objProductionTrail.icon = icon;
                _objProductionTrail.icon_class = iconclass;

                // _objActivityLog.user_name = loginParams.UserName;
                //   _objActivityLog.IpAddress = UserIp;
                _objProductionTrail.created_on = Convert.ToDateTime(DateTime.Now);
                _objProductionTrail.modified_on = Convert.ToDateTime(DateTime.Now);
                _objProductionTrail.is_active = true;
                _objProductionTrailBL.CreateProductionTrail(_objProductionTrail);

                //string id = Convert.ToString(Session[Constants.Id]);
            }
            catch (Exception ex)
            {
                ex.Message.ToString();
            }
        }
        #endregion


        #region Get Breakage,Reject Table Fields Value
        /// <summary>
        /// This Method is Used to Breakage,Reject Table Fields Value
        /// </summary>
        private Boolean GetBreakageRejectRepeaterValue()
        {
            Boolean _objBreakageRejectStatus = true;
            Boolean _objBreakageStatus = true;
            Boolean _objRejectStatus = true;
            try
            {
                try
                {
                    if (txtbreakage.Text == "0")
                    {

                    }

                    else
                    {

                        foreach (RepeaterItem item in rptrBreakagePcsItemList.Items)
                        {

                            DropDownList ddlBreakageReason = (DropDownList)item.FindControl("ddlBreakageReason");
                            TextBox txtBreakagePcsNumber = (TextBox)item.FindControl("txtBreakagePcsNumber");

                            _objBreakageStatus = ddlBreakageReason.SelectedValue == "0" ? _objBreakageStatus = false : _objBreakageStatus = true;



                        }

                    }
                }
                catch (Exception ex)
                {
                    ex.Message.ToString();
                }
                try
                {
                    if (txtReject.Text == "0")
                    {

                    }

                    else
                    {

                        foreach (RepeaterItem item in rptrRejectPcsItemList.Items)
                        {

                            DropDownList ddlRejectReason = (DropDownList)item.FindControl("ddlRejectReason");
                            TextBox txtRejectPcsNumber = (TextBox)item.FindControl("txtRejectPcsNumber");

                            _objRejectStatus = ddlRejectReason.SelectedValue == "0" ? _objRejectStatus = false : _objRejectStatus = true;


                        }


                    }

                }
                catch (Exception ex)
                {
                    ex.Message.ToString();
                }

                if (_objBreakageStatus == true && _objRejectStatus == true)
                {
                    _objBreakageRejectStatus = true;
                }
                else
                {
                    _objBreakageRejectStatus = false;
                }

            }
            catch (Exception ex)
            {
                ex.Message.ToString();
            }

            return _objBreakageRejectStatus;
        }

        #endregion
    }
}