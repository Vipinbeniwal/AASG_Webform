//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace App.Data
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class DBEntities : DbContext
    {
        public DBEntities()
            : base("name=DBEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<ActivityLog> ActivityLogs { get; set; }
        public virtual DbSet<Attendance> Attendances { get; set; }
        public virtual DbSet<ChallanHeader> ChallanHeaders { get; set; }
        public virtual DbSet<ChallanItem> ChallanItems { get; set; }
        public virtual DbSet<DraftMaster> DraftMasters { get; set; }
        public virtual DbSet<DrawingMaster> DrawingMasters { get; set; }
        public virtual DbSet<DropdownMaster> DropdownMasters { get; set; }
        public virtual DbSet<ExceptionLog> ExceptionLogs { get; set; }
        public virtual DbSet<FeatureMaster> FeatureMasters { get; set; }
        public virtual DbSet<FollowUp> FollowUps { get; set; }
        public virtual DbSet<ItemMaster> ItemMasters { get; set; }
        public virtual DbSet<LeadHeader> LeadHeaders { get; set; }
        public virtual DbSet<LoadingMaster> LoadingMasters { get; set; }
        public virtual DbSet<MenuMaster> MenuMasters { get; set; }
        public virtual DbSet<OnFloorItemMaster> OnFloorItemMasters { get; set; }
        public virtual DbSet<PartyMaster> PartyMasters { get; set; }
        public virtual DbSet<ProcessCutting> ProcessCuttings { get; set; }
        public virtual DbSet<ProcessDfgPrint> ProcessDfgPrints { get; set; }
        public virtual DbSet<ProcessGrinding> ProcessGrindings { get; set; }
        public virtual DbSet<ProcessHole> ProcessHoles { get; set; }
        public virtual DbSet<ProcessPackaging> ProcessPackagings { get; set; }
        public virtual DbSet<ProcessPaint> ProcessPaints { get; set; }
        public virtual DbSet<ProcessStore> ProcessStores { get; set; }
        public virtual DbSet<ProcessTempering> ProcessTemperings { get; set; }
        public virtual DbSet<ProcessTemperingReport> ProcessTemperingReports { get; set; }
        public virtual DbSet<ProcessWashing> ProcessWashings { get; set; }
        public virtual DbSet<ProcessWashingOne> ProcessWashingOnes { get; set; }
        public virtual DbSet<Production> Productions { get; set; }
        public virtual DbSet<ProductionPlanning> ProductionPlannings { get; set; }
        public virtual DbSet<ProductionTrail> ProductionTrails { get; set; }
        public virtual DbSet<PurchaseHeader> PurchaseHeaders { get; set; }
        public virtual DbSet<PurchaseItem> PurchaseItems { get; set; }
        public virtual DbSet<SaleHeader> SaleHeaders { get; set; }
        public virtual DbSet<SaleItem> SaleItems { get; set; }
        public virtual DbSet<StaffMaster> StaffMasters { get; set; }
        public virtual DbSet<StockIssuanceHeader> StockIssuanceHeaders { get; set; }
        public virtual DbSet<StockIssuanceItem> StockIssuanceItems { get; set; }
        public virtual DbSet<StockLedger> StockLedgers { get; set; }
        public virtual DbSet<SupplierMaster> SupplierMasters { get; set; }
        public virtual DbSet<TourExpenseHeader> TourExpenseHeaders { get; set; }
        public virtual DbSet<TourExpenseItem> TourExpenseItems { get; set; }
        public virtual DbSet<TourGradeMaster> TourGradeMasters { get; set; }
        public virtual DbSet<TourMaster> TourMasters { get; set; }
        public virtual DbSet<UserRole> UserRoles { get; set; }
        public virtual DbSet<xp_CustomerRequestHeader> xp_CustomerRequestHeader { get; set; }
        public virtual DbSet<xp_CustomerRequestItem> xp_CustomerRequestItem { get; set; }
        public virtual DbSet<xp_ItemMaster> xp_ItemMaster { get; set; }
        public virtual DbSet<xp_ProcurementHeader> xp_ProcurementHeader { get; set; }
        public virtual DbSet<xp_ProcurementItem> xp_ProcurementItem { get; set; }
        public virtual DbSet<xp_TimeSheetChild> xp_TimeSheetChild { get; set; }
        public virtual DbSet<xp_TimeSheetHeader> xp_TimeSheetHeader { get; set; }
        public virtual DbSet<vwItemListWithModelAndGlassColor> vwItemListWithModelAndGlassColors { get; set; }
        public virtual DbSet<vwPurchaseHeaderSupplierDetail> vwPurchaseHeaderSupplierDetails { get; set; }
        public virtual DbSet<vwPurchaseOrderDashboardData> vwPurchaseOrderDashboardDatas { get; set; }
        public virtual DbSet<vwSaleHeaderPartyDetail> vwSaleHeaderPartyDetails { get; set; }
        public virtual DbSet<vwSaleOrderDashboardData> vwSaleOrderDashboardDatas { get; set; }
        public virtual DbSet<vwxp_ProcurementHeaderSupplierDetail> vwxp_ProcurementHeaderSupplierDetail { get; set; }
    
        [DbFunction("DBEntities", "StringToIntList")]
        public virtual IQueryable<StringToIntList_Result> StringToIntList(string str, string delimeter)
        {
            var strParameter = str != null ?
                new ObjectParameter("str", str) :
                new ObjectParameter("str", typeof(string));
    
            var delimeterParameter = delimeter != null ?
                new ObjectParameter("delimeter", delimeter) :
                new ObjectParameter("delimeter", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<StringToIntList_Result>("[DBEntities].[StringToIntList](@str, @delimeter)", strParameter, delimeterParameter);
        }
    
        public virtual ObjectResult<sp_GetProductionItemBreakageRejectOkCountDetails_Result> sp_GetProductionItemBreakageRejectOkCountDetails()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetProductionItemBreakageRejectOkCountDetails_Result>("sp_GetProductionItemBreakageRejectOkCountDetails");
        }
    
        public virtual ObjectResult<sp_ItemProcessDetail_Result> sp_ItemProcessDetail(string batch_number, string itemMasterId)
        {
            var batch_numberParameter = batch_number != null ?
                new ObjectParameter("batch_number", batch_number) :
                new ObjectParameter("batch_number", typeof(string));
    
            var itemMasterIdParameter = itemMasterId != null ?
                new ObjectParameter("ItemMasterId", itemMasterId) :
                new ObjectParameter("ItemMasterId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_ItemProcessDetail_Result>("sp_ItemProcessDetail", batch_numberParameter, itemMasterIdParameter);
        }
    
        public virtual int sp_PlanPartyPartyProduction(string saleHeaderId, string partyMasterId)
        {
            var saleHeaderIdParameter = saleHeaderId != null ?
                new ObjectParameter("SaleHeaderId", saleHeaderId) :
                new ObjectParameter("SaleHeaderId", typeof(string));
    
            var partyMasterIdParameter = partyMasterId != null ?
                new ObjectParameter("PartyMasterId", partyMasterId) :
                new ObjectParameter("PartyMasterId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_PlanPartyPartyProduction", saleHeaderIdParameter, partyMasterIdParameter);
        }
    
        public virtual ObjectResult<sp_StockLedgerDetail_Result> sp_StockLedgerDetail()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_StockLedgerDetail_Result>("sp_StockLedgerDetail");
        }
    
        public virtual ObjectResult<sp_tourdetail_Result> sp_tourdetail(Nullable<int> tour_master_id, Nullable<int> staff_master_id, string fromDate, string toDate)
        {
            var tour_master_idParameter = tour_master_id.HasValue ?
                new ObjectParameter("tour_master_id", tour_master_id) :
                new ObjectParameter("tour_master_id", typeof(int));
    
            var staff_master_idParameter = staff_master_id.HasValue ?
                new ObjectParameter("staff_master_id", staff_master_id) :
                new ObjectParameter("staff_master_id", typeof(int));
    
            var fromDateParameter = fromDate != null ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(string));
    
            var toDateParameter = toDate != null ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_tourdetail_Result>("sp_tourdetail", tour_master_idParameter, staff_master_idParameter, fromDateParameter, toDateParameter);
        }
    }
}
